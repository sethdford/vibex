<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="1461" failures="609" errors="0" time="5.072669413">
    <testsuite name="src/cli-integration.test.ts" timestamp="2025-07-06T18:54:21.299Z" hostname="Seths-MacBook-Pro.local" tests="7" failures="1" errors="0" skipped="0" time="0.009462083">
        <testcase classname="src/cli-integration.test.ts" name="CLI Integration &gt; initializeCli() &gt; should create and initialize a CLI adapter" time="0.002807959">
        </testcase>
        <testcase classname="src/cli-integration.test.ts" name="CLI Integration &gt; initializeCli() &gt; should use default model if not provided" time="0.000379292">
        </testcase>
        <testcase classname="src/cli-integration.test.ts" name="CLI Integration &gt; getDefaultStreamCallbacks() &gt; should return callbacks for streaming output" time="0.0005655">
        </testcase>
        <testcase classname="src/cli-integration.test.ts" name="CLI Integration &gt; processToolCall() &gt; should handle search tool calls" time="0.000537833">
        </testcase>
        <testcase classname="src/cli-integration.test.ts" name="CLI Integration &gt; processToolCall() &gt; should handle readFile tool calls" time="0.000272209">
        </testcase>
        <testcase classname="src/cli-integration.test.ts" name="CLI Integration &gt; processToolCall() &gt; should handle unknown tool calls" time="0.000304709">
        </testcase>
        <testcase classname="src/cli-integration.test.ts" name="CLI Integration &gt; processToolCall() &gt; should handle errors during tool execution" time="0.003108083">
            <failure message="expected &quot;spy&quot; to be called at least once" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called at least once
 ❯ src/cli-integration.test.ts:192:31
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="integration-tests/config/config-integration.test.ts" timestamp="2025-07-06T18:54:21.300Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="integration-tests/config/config-integration.test.ts" name="integration-tests/config/config-integration.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../src/config/config-with-loaded-settings.js&quot; from &quot;integration-tests/config/config-integration.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../src/config/config-with-loaded-settings.js&quot; from &quot;integration-tests/config/config-integration.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/integration-tests/config/config-integration.test.ts:17:7
  8  |    saveConfigWithLoadedSettings,
  9  |    getConfigWithScopes
  10 |  } from &quot;../../src/config/config-with-loaded-settings.js&quot;;
     |          ^
  11 |  import { SettingScope } from &quot;../../src/config/loaded-settings.js&quot;;
  12 |  function assert(condition, message) {
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="integration-tests/config/loaded-settings-integration.test.ts" timestamp="2025-07-06T18:54:21.300Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="integration-tests/config/loaded-settings-integration.test.ts" name="integration-tests/config/loaded-settings-integration.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../src/config/loaded-settings.js&quot; from &quot;integration-tests/config/loaded-settings-integration.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../src/config/loaded-settings.js&quot; from &quot;integration-tests/config/loaded-settings-integration.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/integration-tests/config/loaded-settings-integration.test.ts:19:7
  10 |    ensureWorkspaceSettingsFile,
  11 |    SETTINGS_DIRECTORY_NAME
  12 |  } from &quot;../../src/config/loaded-settings.js&quot;;
     |          ^
  13 |  const TEST_WORKSPACE = path.join(os.tmpdir(), &quot;vibex-test-workspace&quot;);
  14 |  const TEST_USER_DIR = path.join(os.tmpdir(), &quot;vibex-test-user&quot;);
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="integration-tests/core/environment-simulation.test.ts" timestamp="2025-07-06T18:54:21.301Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="integration-tests/core/environment-simulation.test.ts" name="integration-tests/core/environment-simulation.test.ts" time="0">
            <failure message="No test suite found in file /Users/sethford/Downloads/Projects/vibex/integration-tests/core/environment-simulation.test.ts" type="Error">
Error: No test suite found in file /Users/sethford/Downloads/Projects/vibex/integration-tests/core/environment-simulation.test.ts
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="integration-tests/core/startup.test.ts" timestamp="2025-07-06T18:54:21.301Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="integration-tests/core/startup.test.ts" name="integration-tests/core/startup.test.ts" time="0">
            <failure message="No test suite found in file /Users/sethford/Downloads/Projects/vibex/integration-tests/core/startup.test.ts" type="Error">
Error: No test suite found in file /Users/sethford/Downloads/Projects/vibex/integration-tests/core/startup.test.ts
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/ai-architecture-integration.test.ts" timestamp="2025-07-06T18:54:21.301Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/ai/ai-architecture-integration.test.ts" name="tests/ai/ai-architecture-integration.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../src/ai/turn-manager.js&quot; from &quot;tests/ai/ai-architecture-integration.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../src/ai/turn-manager.js&quot; from &quot;tests/ai/ai-architecture-integration.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/ai/ai-architecture-integration.test.ts:17:0
  29 |  });
  30 |  const __vi_import_0__ = await import(&quot;../../src/ai/claude-content-generator.js&quot;);
  31 |  const __vi_import_1__ = await import(&quot;../../src/ai/turn-manager.js&quot;);
     |                                       ^
  32 |  const __vi_import_2__ = await import(&quot;../../src/ai/memory-manager.js&quot;);
  33 |  const __vi_import_3__ = await import(&quot;../../src/ai/unified-client.js&quot;);
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/index.test.ts" timestamp="2025-07-06T18:54:21.301Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/ai/index.test.ts" name="tests/ai/index.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../src/ai/unified-client.js&quot; from &quot;tests/ai/index.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../src/ai/unified-client.js&quot; from &quot;tests/ai/index.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/ai/index.test.ts:15:0
  31 |  }));
  32 |  const __vi_import_0__ = await import(&quot;../../src/ai/index.js&quot;);
  33 |  const __vi_import_1__ = await import(&quot;../../src/ai/unified-client.js&quot;);
     |                                       ^
  34 |  /**
  35 |   * @license
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/integrated-ai-tests.test.ts" timestamp="2025-07-06T18:54:21.302Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/ai/integrated-ai-tests.test.ts" name="tests/ai/integrated-ai-tests.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../src/ai/unified-client.js&quot; from &quot;tests/ai/integrated-ai-tests.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../src/ai/unified-client.js&quot; from &quot;tests/ai/integrated-ai-tests.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/ai/integrated-ai-tests.test.ts:15:0
  31 |  });
  32 |  const __vi_import_0__ = await import(&quot;events&quot;);
  33 |  const __vi_import_1__ = await import(&quot;../../src/ai/unified-client.js&quot;);
     |                                       ^
  34 |  const __vi_import_2__ = await import(&quot;../../src/ai/turn-manager.js&quot;);
  35 |  const __vi_import_3__ = await import(&quot;../../src/ai/content-generator.js&quot;);
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/unified-client.test.ts" timestamp="2025-07-06T18:54:21.302Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/ai/unified-client.test.ts" name="tests/ai/unified-client.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../src/ai/unified-client.js&quot; from &quot;tests/ai/unified-client.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../src/ai/unified-client.js&quot; from &quot;tests/ai/unified-client.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/ai/unified-client.test.ts:14:0
  4  |    };
  5  |  });
  6  |  const __vi_import_0__ = await import(&quot;../../src/ai/unified-client.js&quot;);
     |                                       ^
  7  |  const __vi_import_1__ = await import(&quot;events&quot;);
  8  |  const __vi_import_2__ = await import(&quot;../../src/utils/retry.js&quot;);
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/commands/slash-command-system-integration.test.ts" timestamp="2025-07-06T18:54:21.302Z" hostname="Seths-MacBook-Pro.local" tests="31" failures="2" errors="0" skipped="0" time="0.012081667">
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Command Registry &gt; should register and retrieve commands" time="0.000993125">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Command Registry &gt; should handle command aliases" time="0.000131833">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Command Registry &gt; should unregister commands" time="0.000153875">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Command Registry &gt; should organize commands by category" time="0.000876208">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Command Registry &gt; should validate command definitions" time="0.000344166">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Command Parsing and Validation &gt; should parse valid commands correctly" time="0.00070325">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Command Parsing and Validation &gt; should handle missing required arguments" time="0.000140167">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Command Parsing and Validation &gt; should handle invalid argument types" time="0.000118083">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Command Parsing and Validation &gt; should apply default values" time="0.000106459">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Command Parsing and Validation &gt; should handle unknown commands" time="0.000165167">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Command Execution &gt; should execute commands successfully" time="0.00015825">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Command Execution &gt; should handle command execution errors" time="0.000185125">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Command Execution &gt; should handle validation failures" time="0.000125917">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Autocomplete System &gt; should provide command suggestions" time="0.00018875">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Autocomplete System &gt; should provide argument value suggestions" time="0.000144625">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Autocomplete System &gt; should provide option suggestions" time="0.0000725">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Help System &gt; should generate help for specific command" time="0.00019825">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Help System &gt; should generate overall help" time="0.000115334">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Help System &gt; should handle help for unknown command" time="0.000049291">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Built-in Commands &gt; should register all built-in commands" time="0.000151417">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Built-in Commands &gt; should execute help command" time="0.000109959">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Built-in Commands &gt; should execute config command with list action" time="0.000132375">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Built-in Commands &gt; should execute config command with set action" time="0.00007425">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Built-in Commands &gt; should validate config command arguments" time="0.000068875">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Built-in Commands &gt; should handle config command with invalid action" time="0.000075583">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Built-in Commands &gt; should execute file command with info action" time="0.004112084">
            <failure message="expected true to be false // Object.is equality" type="AssertionError">
AssertionError: expected true to be false // Object.is equality

- Expected
+ Received

- false
+ true

 ❯ tests/commands/slash-command-system-integration.test.ts:487:30
            </failure>
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Built-in Commands &gt; should execute memory command with stats action" time="0.000186083">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Built-in Commands &gt; should execute search command" time="0.000201375">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Command Similarity and Suggestions &gt; should suggest similar commands for typos" time="0.000119583">
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Event System &gt; should emit events for command registration" time="0.001019">
            <failure message="done() callback is deprecated, use promise instead" type="Error">
Error: done() callback is deprecated, use promise instead
 ❯ SlashCommandRegistry.&lt;anonymous&gt; tests/commands/slash-command-system-integration.test.ts:543:9
 ❯ SlashCommandRegistry.emit node_modules/events/events.js:153:5
 ❯ SlashCommandRegistry.register src/commands/slash-command-system.ts:127:10
 ❯ tests/commands/slash-command-system-integration.test.ts:546:16
            </failure>
        </testcase>
        <testcase classname="tests/commands/slash-command-system-integration.test.ts" name="Slash Command System Integration &gt; Event System &gt; should emit events for command execution" time="0.000091834">
        </testcase>
    </testsuite>
    <testsuite name="tests/context/git-aware-file-filter.test.ts" timestamp="2025-07-06T18:54:21.304Z" hostname="Seths-MacBook-Pro.local" tests="13" failures="2" errors="0" skipped="0" time="0.026887875">
        <testcase classname="tests/context/git-aware-file-filter.test.ts" name="GitAwareFileFilter &gt; filterSingleFile &gt; should include TypeScript source files" time="0.002311042">
        </testcase>
        <testcase classname="tests/context/git-aware-file-filter.test.ts" name="GitAwareFileFilter &gt; filterSingleFile &gt; should categorize README.md as context file" time="0.000620083">
        </testcase>
        <testcase classname="tests/context/git-aware-file-filter.test.ts" name="GitAwareFileFilter &gt; filterSingleFile &gt; should exclude files in node_modules by default" time="0.0048555">
            <failure message="expected &apos;Error processing file: ENOENT: no suc…&apos; to contain &apos;excluded&apos;" type="AssertionError">
AssertionError: expected &apos;Error processing file: ENOENT: no suc…&apos; to contain &apos;excluded&apos;

Expected: &quot;excluded&quot;
Received: &quot;Error processing file: ENOENT: no such file or directory, stat &apos;/test/project/node_modules/package/index.js&apos;&quot;

 ❯ tests/context/git-aware-file-filter.test.ts:89:29
            </failure>
        </testcase>
        <testcase classname="tests/context/git-aware-file-filter.test.ts" name="GitAwareFileFilter &gt; filterSingleFile &gt; should handle binary files when binary exclusion is enabled" time="0.006011791">
        </testcase>
        <testcase classname="tests/context/git-aware-file-filter.test.ts" name="GitAwareFileFilter &gt; filterSingleFile &gt; should handle gitignore patterns" time="0.002076083">
            <failure message="expected &apos;Error processing file: ENOENT: no suc…&apos; to contain &apos;excluded&apos;" type="AssertionError">
AssertionError: expected &apos;Error processing file: ENOENT: no suc…&apos; to contain &apos;excluded&apos;

Expected: &quot;excluded&quot;
Received: &quot;Error processing file: ENOENT: no such file or directory, stat &apos;/test/project/dist/output.js&apos;&quot;

 ❯ tests/context/git-aware-file-filter.test.ts:119:29
            </failure>
        </testcase>
        <testcase classname="tests/context/git-aware-file-filter.test.ts" name="GitAwareFileFilter &gt; filterSingleFile &gt; should calculate relevance scores" time="0.000948875">
        </testcase>
        <testcase classname="tests/context/git-aware-file-filter.test.ts" name="GitAwareFileFilter &gt; filterSingleFile &gt; should handle configuration files" time="0.000282541">
        </testcase>
        <testcase classname="tests/context/git-aware-file-filter.test.ts" name="GitAwareFileFilter &gt; filterSingleFile &gt; should handle errors gracefully" time="0.000869917">
        </testcase>
        <testcase classname="tests/context/git-aware-file-filter.test.ts" name="GitAwareFileFilter &gt; filterFiles &gt; should filter multiple files correctly" time="0.0061325">
        </testcase>
        <testcase classname="tests/context/git-aware-file-filter.test.ts" name="GitAwareFileFilter &gt; configuration options &gt; should respect respectGitignore setting" time="0.0003915">
        </testcase>
        <testcase classname="tests/context/git-aware-file-filter.test.ts" name="GitAwareFileFilter &gt; configuration options &gt; should respect excludeBinaryFiles setting" time="0.000560334">
        </testcase>
        <testcase classname="tests/context/git-aware-file-filter.test.ts" name="GitAwareFileFilter &gt; cache management &gt; should provide cache statistics" time="0.000346792">
        </testcase>
        <testcase classname="tests/context/git-aware-file-filter.test.ts" name="GitAwareFileFilter &gt; cache management &gt; should clear caches" time="0.000227917">
        </testcase>
    </testsuite>
    <testsuite name="tests/config/advanced-config-integration.test.ts" timestamp="2025-07-06T18:54:21.304Z" hostname="Seths-MacBook-Pro.local" tests="15" failures="0" errors="0" skipped="0" time="0.269316834">
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; Hierarchical Configuration &gt; should respect scope hierarchy (runtime &gt; workspace &gt; user &gt; system)" time="0.028752875">
        </testcase>
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; Hierarchical Configuration &gt; should handle complex configuration objects" time="0.007063958">
        </testcase>
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; External Configuration Store &gt; should persist configurations to file system" time="0.010918458">
        </testcase>
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; External Configuration Store &gt; should handle concurrent access safely" time="0.008521625">
        </testcase>
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; External Configuration Store &gt; should list all configurations in a scope" time="0.026515833">
        </testcase>
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; Real-time Updates and Watching &gt; should notify watchers of configuration changes" time="0.04252625">
        </testcase>
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; Real-time Updates and Watching &gt; should handle multiple watchers for same key" time="0.033219916">
        </testcase>
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; Real-time Updates and Watching &gt; should properly unwatch when requested" time="0.019515666">
        </testcase>
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; Backup and Restore &gt; should create and restore backups" time="0.042036791">
        </testcase>
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; Backup and Restore &gt; should handle backup restoration errors gracefully" time="0.0023485">
        </testcase>
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; Caching and Performance &gt; should cache frequently accessed values" time="0.004423209">
        </testcase>
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; Caching and Performance &gt; should invalidate cache on updates" time="0.015983">
        </testcase>
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; Error Handling &gt; should handle missing configuration files gracefully" time="0.00525625">
        </testcase>
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; Error Handling &gt; should handle file system errors gracefully" time="0.002429625">
        </testcase>
        <testcase classname="tests/config/advanced-config-integration.test.ts" name="Advanced Configuration System Integration &gt; Configuration Scope Management &gt; should clear entire scopes correctly" time="0.017251167">
        </testcase>
    </testsuite>
    <testsuite name="tests/config/claude-integration.test.ts" timestamp="2025-07-06T18:54:21.305Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/config/claude-integration.test.ts" name="tests/config/claude-integration.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../src/config/claude-integration.js&quot; from &quot;tests/config/claude-integration.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../src/config/claude-integration.js&quot; from &quot;tests/config/claude-integration.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/config/claude-integration.test.ts:8:97
  5  |   */
  6  |  import { describe, test, expect, beforeEach } from &quot;vitest&quot;;
  7  |  import { createIntegratedClaudeConfig, validateClaudeIntegration, loadClaudeConfigFromApp } from &quot;../../src/config/claude-integration.js&quot;;
     |                                                                                                    ^
  8  |  import { ClaudeOptimizedConfigManager } from &quot;../../src/config/claude-optimized-config.js&quot;;
  9  |  import { EnhancedModernUIConfigManager } from &quot;../../src/config/enhanced-modern-ui-config.js&quot;;
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/e2e/performance-optimizations.test.ts" timestamp="2025-07-06T18:54:21.305Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/e2e/performance-optimizations.test.ts" name="tests/e2e/performance-optimizations.test.ts" time="0">
            <failure message="Cannot read properties of undefined (reading &apos;setTimeout&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;setTimeout&apos;)
 ❯ tests/e2e/performance-optimizations.test.ts:24:6
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/integration/ui-AppIntegration.test.tsx" timestamp="2025-07-06T18:54:21.306Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/integration/ui-AppIntegration.test.tsx" name="tests/integration/ui-AppIntegration.test.tsx" time="0">
            <failure message="Failed to resolve import &quot;../../types.js&quot; from &quot;tests/integration/ui-AppIntegration.test.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../types.js&quot; from &quot;tests/integration/ui-AppIntegration.test.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/integration/ui-AppIntegration.test.tsx:18:0
  108|      }));
  109|  const __vi_import_0__ = await import(&quot;react/jsx-dev-runtime&quot;);
  110|  const __vi_import_1__ = await import(&quot;../../types.js&quot;);
     |                                       ^
  111|  
  112|  /**
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/integration/ui-AppPerformanceIntegration.test.tsx" timestamp="2025-07-06T18:54:21.306Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/integration/ui-AppPerformanceIntegration.test.tsx" name="tests/integration/ui-AppPerformanceIntegration.test.tsx" time="0">
            <failure message="Transform failed with 1 error:
/Users/sethford/Downloads/Projects/vibex/tests/integration/ui-AppPerformanceIntegration.test.tsx:20:7: ERROR: Expected &quot;as&quot; but found &quot;{&quot;" type="Error">
Error: Transform failed with 1 error:
/Users/sethford/Downloads/Projects/vibex/tests/integration/ui-AppPerformanceIntegration.test.tsx:20:7: ERROR: Expected &quot;as&quot; but found &quot;{&quot;
  Plugin: vite:esbuild
  File: /Users/sethford/Downloads/Projects/vibex/tests/integration/ui-AppPerformanceIntegration.test.tsx:20:7
  
  Expected &quot;as&quot; but found &quot;{&quot;
  18 |  // Import the performance configuration to access performance levels and targets
  19 |  import {
  20 |  import { describe, it, test, expect, beforeEach, afterEach, beforeAll, afterAll, vi } from &apos;vitest&apos;;
     |         ^
  21 |    PerformanceLevel,
  22 |    PerformanceConfigManager,
  
 ❯ failureErrorWithLog node_modules/esbuild/lib/main.js:1463:15
 ❯ node_modules/esbuild/lib/main.js:734:50
 ❯ responseCallbacks.&lt;computed&gt; node_modules/esbuild/lib/main.js:601:9
 ❯ handleIncomingPacket node_modules/esbuild/lib/main.js:656:12
 ❯ Socket.readFromStdout node_modules/esbuild/lib/main.js:579:7
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/integration/ui-Claude4Integration.test.tsx" timestamp="2025-07-06T18:54:21.306Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="0" errors="0" skipped="1" time="0">
        <testcase classname="tests/integration/ui-Claude4Integration.test.tsx" name="Claude 4 Integration Tests &gt; should integrate with Claude 4" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="tests/integration/ui-modern-interface-integration.test.tsx" timestamp="2025-07-06T18:54:21.306Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/integration/ui-modern-interface-integration.test.tsx" name="tests/integration/ui-modern-interface-integration.test.tsx" time="0">
            <failure message="Failed to resolve import &quot;../../../src/ui/components/types/interface-types.js&quot; from &quot;tests/integration/ui-modern-interface-integration.test.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../src/ui/components/types/interface-types.js&quot; from &quot;tests/integration/ui-modern-interface-integration.test.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/integration/ui-modern-interface-integration.test.tsx:22:7
  9  |    InterfaceMode,
  10 |    MediaType
  11 |  } from &quot;../../../src/ui/components/types/interface-types.js&quot;;
     |          ^
  12 |  import { InterfaceOrchestrator as ModernInterface } from &quot;../../../src/ui/components/interfaces/InterfaceOrchestrator.js&quot;;
  13 |  import {
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/memory/hierarchical-memory-integration.test.ts" timestamp="2025-07-06T18:54:21.306Z" hostname="Seths-MacBook-Pro.local" tests="13" failures="5" errors="0" skipped="0" time="0.205776333">
        <testcase classname="tests/memory/hierarchical-memory-integration.test.ts" name="Hierarchical Memory System Integration &gt; Memory Storage and Retrieval &gt; should store and retrieve memories correctly" time="0.008210583">
            <system-out>
Fact search results: {
  query: { type: [32m&apos;fact&apos;[39m, limit: [33m10[39m },
  results: [
    {
      content: [32m&apos;The capital of France is Paris&apos;[39m,
      type: [32m&apos;fact&apos;[39m,
      session_id: [32m&apos;test-session&apos;[39m,
      importance: [33m0.8[39m
    }
  ],
  total: [33m1[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/memory/hierarchical-memory-integration.test.ts" name="Hierarchical Memory System Integration &gt; Memory Storage and Retrieval &gt; should handle semantic search with embeddings" time="0.007602667">
        </testcase>
        <testcase classname="tests/memory/hierarchical-memory-integration.test.ts" name="Hierarchical Memory System Integration &gt; Memory Storage and Retrieval &gt; should prioritize by importance and recency" time="0.012419125">
            <failure message="entry.timestamp.getTime is not a function" type="TypeError">
TypeError: entry.timestamp.getTime is not a function
 ❯ src/memory/storage.ts:114:50
 ❯ InMemoryStorage.scoreEntries src/memory/storage.ts:88:20
 ❯ InMemoryStorage.search src/memory/storage.ts:24:31
 ❯ FileStorage.search src/memory/storage.ts:235:32
 ❯ HierarchicalMemoryManager.searchLayer src/memory/hierarchical-manager.ts:242:12
 ❯ HierarchicalMemoryManager.recall src/memory/hierarchical-manager.ts:136:21
 ❯ tests/memory/hierarchical-memory-integration.test.ts:181:26
            </failure>
        </testcase>
        <testcase classname="tests/memory/hierarchical-memory-integration.test.ts" name="Hierarchical Memory System Integration &gt; Context Management &gt; should build context from session memories" time="0.009830459">
            <failure message="entry.timestamp.getTime is not a function" type="TypeError">
TypeError: entry.timestamp.getTime is not a function
 ❯ src/memory/storage.ts:114:50
 ❯ InMemoryStorage.scoreEntries src/memory/storage.ts:88:20
 ❯ InMemoryStorage.search src/memory/storage.ts:24:31
 ❯ FileStorage.search src/memory/storage.ts:235:32
 ❯ HierarchicalMemoryManager.searchLayer src/memory/hierarchical-manager.ts:242:12
 ❯ HierarchicalMemoryManager.recall src/memory/hierarchical-manager.ts:136:21
 ❯ HierarchicalMemoryManager.getContext src/memory/hierarchical-manager.ts:167:21
 ❯ tests/memory/hierarchical-memory-integration.test.ts:217:23
            </failure>
        </testcase>
        <testcase classname="tests/memory/hierarchical-memory-integration.test.ts" name="Hierarchical Memory System Integration &gt; Context Management &gt; should update context with new information" time="0.003521542">
        </testcase>
        <testcase classname="tests/memory/hierarchical-memory-integration.test.ts" name="Hierarchical Memory System Integration &gt; Memory Statistics and Management &gt; should provide accurate memory statistics" time="0.002057625">
        </testcase>
        <testcase classname="tests/memory/hierarchical-memory-integration.test.ts" name="Hierarchical Memory System Integration &gt; Memory Statistics and Management &gt; should handle memory pressure and compression" time="0.10656325">
        </testcase>
        <testcase classname="tests/memory/hierarchical-memory-integration.test.ts" name="Hierarchical Memory System Integration &gt; Session Isolation &gt; should isolate memories by session" time="0.019277042">
            <failure message="entry.timestamp.getTime is not a function" type="TypeError">
TypeError: entry.timestamp.getTime is not a function
 ❯ src/memory/storage.ts:114:50
 ❯ InMemoryStorage.scoreEntries src/memory/storage.ts:88:20
 ❯ InMemoryStorage.search src/memory/storage.ts:24:31
 ❯ FileStorage.search src/memory/storage.ts:235:32
 ❯ HierarchicalMemoryManager.searchLayer src/memory/hierarchical-manager.ts:242:12
 ❯ HierarchicalMemoryManager.recall src/memory/hierarchical-manager.ts:136:21
 ❯ tests/memory/hierarchical-memory-integration.test.ts:284:31
            </failure>
        </testcase>
        <testcase classname="tests/memory/hierarchical-memory-integration.test.ts" name="Hierarchical Memory System Integration &gt; Memory Forgetting &gt; should forget specific memories" time="0.01085025">
            <failure message="entry.timestamp.getTime is not a function" type="TypeError">
TypeError: entry.timestamp.getTime is not a function
 ❯ src/memory/storage.ts:114:50
 ❯ InMemoryStorage.scoreEntries src/memory/storage.ts:88:20
 ❯ InMemoryStorage.search src/memory/storage.ts:24:31
 ❯ FileStorage.search src/memory/storage.ts:235:32
 ❯ HierarchicalMemoryManager.searchLayer src/memory/hierarchical-manager.ts:242:12
 ❯ HierarchicalMemoryManager.recall src/memory/hierarchical-manager.ts:136:21
 ❯ tests/memory/hierarchical-memory-integration.test.ts:312:29
            </failure>
        </testcase>
        <testcase classname="tests/memory/hierarchical-memory-integration.test.ts" name="Hierarchical Memory System Integration &gt; Memory Forgetting &gt; should return false when forgetting non-existent memory" time="0.009792375">
        </testcase>
        <testcase classname="tests/memory/hierarchical-memory-integration.test.ts" name="Hierarchical Memory System Integration &gt; Error Handling &gt; should handle embedding failures gracefully" time="0.002262125">
        </testcase>
        <testcase classname="tests/memory/hierarchical-memory-integration.test.ts" name="Hierarchical Memory System Integration &gt; Error Handling &gt; should handle storage failures gracefully" time="0.0011075">
        </testcase>
        <testcase classname="tests/memory/hierarchical-memory-integration.test.ts" name="Hierarchical Memory System Integration &gt; Performance &gt; should handle large numbers of memories efficiently" time="0.011285333">
            <failure message="entry.timestamp.getTime is not a function" type="TypeError">
TypeError: entry.timestamp.getTime is not a function
 ❯ src/memory/storage.ts:114:50
 ❯ InMemoryStorage.scoreEntries src/memory/storage.ts:88:20
 ❯ InMemoryStorage.search src/memory/storage.ts:24:31
 ❯ FileStorage.search src/memory/storage.ts:235:32
 ❯ HierarchicalMemoryManager.compressLayer src/memory/hierarchical-manager.ts:306:21
 ❯ HierarchicalMemoryManager.handleMemoryPressure src/memory/hierarchical-manager.ts:208:7
 ❯ HierarchicalMemoryManager.store src/memory/hierarchical-manager.ts:111:5
 ❯ tests/memory/hierarchical-memory-integration.test.ts:410:7
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/memory/import-processor.test.ts" timestamp="2025-07-06T18:54:21.308Z" hostname="Seths-MacBook-Pro.local" tests="5" failures="1" errors="0" skipped="0" time="0.057500458">
        <testcase classname="tests/memory/import-processor.test.ts" name="Memory Import Processor &gt; processes imports in content" time="0.012972667">
        </testcase>
        <testcase classname="tests/memory/import-processor.test.ts" name="Memory Import Processor &gt; processes nested imports" time="0.01533925">
        </testcase>
        <testcase classname="tests/memory/import-processor.test.ts" name="Memory Import Processor &gt; handles circular imports gracefully" time="0.017689166">
            <failure message="expected &apos;# File 1\n\nContent in file 1.\n\n&lt;!-…&apos; not to contain &apos;&lt;!-- Begin import: file1.md --&gt;&apos;" type="AssertionError">
AssertionError: expected &apos;# File 1\n\nContent in file 1.\n\n&lt;!-…&apos; not to contain &apos;&lt;!-- Begin import: file1.md --&gt;&apos;

- Expected
+ Received

+ # File 1
+
+ Content in file 1.
+
+ &lt;!-- Begin import: file2.md --&gt;
+ # File 2
+
+ Content in file 2.
+
  &lt;!-- Begin import: file1.md --&gt;
+ # File 1
+
+ Content in file 1.
+
+ &lt;!-- Error: Circular import detected for file2.md --&gt;
+
+ After import.
+ &lt;!-- End import: file1.md --&gt;
+
+ After import.
+ &lt;!-- End import: file2.md --&gt;
+
+ After import.

 ❯ tests/memory/import-processor.test.ts:117:27
            </failure>
        </testcase>
        <testcase classname="tests/memory/import-processor.test.ts" name="Memory Import Processor &gt; handles missing files gracefully" time="0.003875833">
        </testcase>
        <testcase classname="tests/memory/import-processor.test.ts" name="Memory Import Processor &gt; handles absolute paths" time="0.0014185">
        </testcase>
    </testsuite>
    <testsuite name="tests/memory/memory-integration.test.ts" timestamp="2025-07-06T18:54:21.308Z" hostname="Seths-MacBook-Pro.local" tests="3" failures="2" errors="0" skipped="0" time="1.639474">
        <testcase classname="tests/memory/memory-integration.test.ts" name="Memory System Integration &gt; file watching triggers callback when files change" time="0.615643167">
        </testcase>
        <testcase classname="tests/memory/memory-integration.test.ts" name="Memory System Integration &gt; memory system loads files with CLI entry point" time="0.012163166">
            <failure message="expected 1 to be 2 // Object.is equality" type="AssertionError">
AssertionError: expected 1 to be 2 // Object.is equality

- Expected
+ Received

- 2
+ 1

 ❯ tests/memory/memory-integration.test.ts:109:26
            </failure>
        </testcase>
        <testcase classname="tests/memory/memory-integration.test.ts" name="Memory System Integration &gt; memory file watching recovers from errors" time="1.008987875">
            <failure message="expected &quot;spy&quot; to be called 2 times, but got 0 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 2 times, but got 0 times
 ❯ tests/memory/memory-integration.test.ts:161:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/memory/memory.test.ts" timestamp="2025-07-06T18:54:21.308Z" hostname="Seths-MacBook-Pro.local" tests="14" failures="2" errors="0" skipped="0" time="0.057426125">
        <testcase classname="tests/memory/memory.test.ts" name="Memory System &gt; loadMemoryFiles &gt; loads VIBEX.md from project root" time="0.005844">
        </testcase>
        <testcase classname="tests/memory/memory.test.ts" name="Memory System &gt; loadMemoryFiles &gt; loads CLAUDE.md from project root" time="0.003157917">
        </testcase>
        <testcase classname="tests/memory/memory.test.ts" name="Memory System &gt; loadMemoryFiles &gt; loads GEMINI.md from project root" time="0.003137167">
        </testcase>
        <testcase classname="tests/memory/memory.test.ts" name="Memory System &gt; loadMemoryFiles &gt; loads multiple memory files and sorts by priority" time="0.007882916">
        </testcase>
        <testcase classname="tests/memory/memory.test.ts" name="Memory System &gt; loadMemoryFiles &gt; loads files from .vibex directory" time="0.003756875">
        </testcase>
        <testcase classname="tests/memory/memory.test.ts" name="Memory System &gt; loadMemoryFiles &gt; loads JSON files when includeJsonFiles is true" time="0.006752416">
            <failure message="expected +0 to be 1 // Object.is equality" type="AssertionError">
AssertionError: expected +0 to be 1 // Object.is equality

- Expected
+ Received

- 1
+ 0

 ❯ tests/memory/memory.test.ts:150:28
            </failure>
        </testcase>
        <testcase classname="tests/memory/memory.test.ts" name="Memory System &gt; loadMemoryFiles &gt; ignores JSON files when includeJsonFiles is false" time="0.002304083">
        </testcase>
        <testcase classname="tests/memory/memory.test.ts" name="Memory System &gt; loadMemoryFiles &gt; ignores deeper nested files when maxDepth is set" time="0.004628375">
            <failure message="expected +0 to be 1 // Object.is equality" type="AssertionError">
AssertionError: expected +0 to be 1 // Object.is equality

- Expected
+ Received

- 1
+ 0

 ❯ tests/memory/memory.test.ts:187:28
            </failure>
        </testcase>
        <testcase classname="tests/memory/memory.test.ts" name="Memory System &gt; loadMemoryFiles &gt; handles empty or non-existent directories" time="0.001868459">
        </testcase>
        <testcase classname="tests/memory/memory.test.ts" name="Memory System &gt; saveMemoryFile &gt; saves a file to the .vibex directory" time="0.001912167">
        </testcase>
        <testcase classname="tests/memory/memory.test.ts" name="Memory System &gt; saveMemoryFile &gt; creates .vibex directory if it does not exist" time="0.002099792">
        </testcase>
        <testcase classname="tests/memory/memory.test.ts" name="Memory System &gt; saveMemoryFile &gt; overwrites existing file with same name" time="0.003514334">
        </testcase>
        <testcase classname="tests/memory/memory.test.ts" name="Memory System &gt; createDefaultMemoryFile &gt; creates a default VIBEX.md file if it does not exist" time="0.00533575">
        </testcase>
        <testcase classname="tests/memory/memory.test.ts" name="Memory System &gt; createDefaultMemoryFile &gt; does not overwrite existing VIBEX.md file" time="0.002594584">
        </testcase>
    </testsuite>
    <testsuite name="tests/telemetry/telemetry.test.ts" timestamp="2025-07-06T18:54:21.309Z" hostname="Seths-MacBook-Pro.local" tests="11" failures="2" errors="0" skipped="0" time="0.015156167">
        <testcase classname="tests/telemetry/telemetry.test.ts" name="TelemetryService &gt; should initialize with default configuration" time="0.001307958">
        </testcase>
        <testcase classname="tests/telemetry/telemetry.test.ts" name="TelemetryService &gt; should track events correctly" time="0.00067725">
        </testcase>
        <testcase classname="tests/telemetry/telemetry.test.ts" name="TelemetryService &gt; should sanitize sensitive arguments" time="0.000624375">
        </testcase>
        <testcase classname="tests/telemetry/telemetry.test.ts" name="TelemetryService &gt; should add breadcrumbs correctly" time="0.000164125">
        </testcase>
        <testcase classname="tests/telemetry/telemetry.test.ts" name="TelemetryService &gt; should capture exceptions with stack trace processing" time="0.006550958">
        </testcase>
        <testcase classname="tests/telemetry/telemetry.test.ts" name="TelemetryService &gt; should track metrics correctly" time="0.000256">
        </testcase>
        <testcase classname="tests/telemetry/telemetry.test.ts" name="TelemetryService &gt; should track API calls" time="0.000219208">
        </testcase>
        <testcase classname="tests/telemetry/telemetry.test.ts" name="TelemetryService &gt; should handle disabled service" time="0.000185875">
        </testcase>
        <testcase classname="tests/telemetry/telemetry.test.ts" name="TelemetryService &gt; should manage sessions" time="0.001177666">
            <failure message="expected 1751828051408 to be greater than 1751828051408" type="AssertionError">
AssertionError: expected 1751828051408 to be greater than 1751828051408
 ❯ tests/telemetry/telemetry.test.ts:176:30
            </failure>
        </testcase>
        <testcase classname="tests/telemetry/telemetry.test.ts" name="TelemetryService &gt; should limit breadcrumbs to maxBreadcrumbs" time="0.000199334">
        </testcase>
        <testcase classname="tests/telemetry/telemetry.test.ts" name="TelemetryService &gt; should clear data correctly" time="0.003085041">
            <failure message="expected [ { category: &apos;event&apos;, …(4) }, …(1) ] to have a length of 1 but got 2" type="AssertionError">
AssertionError: expected [ { category: &apos;event&apos;, …(4) }, …(1) ] to have a length of 1 but got 2

- Expected
+ Received

- 1
+ 2

 ❯ tests/telemetry/telemetry.test.ts:206:47
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/adapters/cli-adapter.test.ts" timestamp="2025-07-06T18:54:21.310Z" hostname="Seths-MacBook-Pro.local" tests="7" failures="1" errors="0" skipped="0" time="0.012652084">
        <testcase classname="src/adapters/cli-adapter.test.ts" name="CliAdapter &gt; initialize() &gt; should configure the service factory and create a conversation service" time="0.00237625">
        </testcase>
        <testcase classname="src/adapters/cli-adapter.test.ts" name="CliAdapter &gt; sendMessage() &gt; should send a message and return the response" time="0.001051375">
        </testcase>
        <testcase classname="src/adapters/cli-adapter.test.ts" name="CliAdapter &gt; sendMessage() &gt; should throw error if not initialized" time="0.001049875">
        </testcase>
        <testcase classname="src/adapters/cli-adapter.test.ts" name="CliAdapter &gt; sendStreamingMessage() &gt; should setup event listeners and call sendMessageStream" time="0.000771333">
        </testcase>
        <testcase classname="src/adapters/cli-adapter.test.ts" name="CliAdapter &gt; sendStreamingMessage() &gt; should handle errors during streaming" time="0.000362625">
        </testcase>
        <testcase classname="src/adapters/cli-adapter.test.ts" name="CliAdapter &gt; getConversationHistory() &gt; should return formatted conversation history" time="0.005064958">
            <failure message="expected &apos;A very long message that should be tr…&apos; to be &apos;A very long message that should be tr…&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;A very long message that should be tr…&apos; to be &apos;A very long message that should be tr…&apos; // Object.is equality

Expected: &quot;A very long message that should be truncated in the...&quot;
Received: &quot;A very long message that should be truncated in...&quot;

 ❯ src/adapters/cli-adapter.test.ts:281:34
            </failure>
        </testcase>
        <testcase classname="src/adapters/cli-adapter.test.ts" name="CliAdapter &gt; formatMessage() &gt; should format messages with correct prefixes" time="0.001112625">
        </testcase>
    </testsuite>
    <testsuite name="src/telemetry/telemetry.test.ts" timestamp="2025-07-06T18:54:21.310Z" hostname="Seths-MacBook-Pro.local" tests="8" failures="0" errors="0" skipped="0" time="0.030286041">
        <testcase classname="src/telemetry/telemetry.test.ts" name="TelemetryService &gt; should initialize with default config" time="0.002233">
        </testcase>
        <testcase classname="src/telemetry/telemetry.test.ts" name="TelemetryService &gt; should track events" time="0.000276917">
        </testcase>
        <testcase classname="src/telemetry/telemetry.test.ts" name="TelemetryService &gt; should add breadcrumbs" time="0.000167666">
        </testcase>
        <testcase classname="src/telemetry/telemetry.test.ts" name="TelemetryService &gt; should sanitize sensitive arguments" time="0.000394625">
        </testcase>
        <testcase classname="src/telemetry/telemetry.test.ts" name="TelemetryService &gt; should handle errors properly" time="0.014135833">
        </testcase>
        <testcase classname="src/telemetry/telemetry.test.ts" name="TelemetryService &gt; should process stack traces correctly" time="0.001246083">
        </testcase>
        <testcase classname="src/telemetry/telemetry.test.ts" name="TelemetryService &gt; should track metrics" time="0.000244375">
        </testcase>
        <testcase classname="src/telemetry/telemetry.test.ts" name="TelemetryService &gt; should clear data when requested" time="0.000346375">
        </testcase>
    </testsuite>
    <testsuite name="src/services/app-orchestration.test.ts" timestamp="2025-07-06T18:54:21.311Z" hostname="Seths-MacBook-Pro.local" tests="20" failures="1" errors="0" skipped="0" time="0.010076">
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; initializeApp &gt; should initialize app with context successfully" time="0.001848167">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; initializeApp &gt; should handle initialization errors" time="0.000919959">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; processUserInput &gt; should process input with @ commands successfully" time="0.00017">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; processUserInput &gt; should handle @ command processing errors" time="0.0001625">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; processUserInput &gt; should throw error for empty input" time="0.000195417">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; processUserInput &gt; should return original input when no processed query" time="0.000079834">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; clearAppState &gt; should clear console successfully" time="0.0001985">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; clearAppState &gt; should handle clear errors gracefully" time="0.000152125">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; handleExit &gt; should use quit command when available" time="0.000238667">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; handleExit &gt; should use exit command when quit not available" time="0.003586959">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ &apos;exit&apos;, &apos;&apos;, &apos;&apos; ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ &apos;exit&apos;, &apos;&apos;, &apos;&apos; ]

Number of calls: 0

 ❯ src/services/app-orchestration.test.ts:167:26
            </failure>
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; handleExit &gt; should use onExit callback when no commands available" time="0.000168167">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; handleExit &gt; should use process.exit as fallback" time="0.000137041">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; handleExit &gt; should handle exit errors" time="0.000170166">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; extractUserMessages &gt; should extract user messages correctly" time="0.000198041">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; extractUserMessages &gt; should handle empty history" time="0.000081875">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; extractUserMessages &gt; should handle extraction errors" time="0.000586708">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; findLastAssistantMessage &gt; should find last assistant message" time="0.000112625">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; findLastAssistantMessage &gt; should return null when no assistant messages" time="0.000082792">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; findLastAssistantMessage &gt; should handle empty history" time="0.000098458">
        </testcase>
        <testcase classname="src/services/app-orchestration.test.ts" name="AppOrchestrationService &gt; findLastAssistantMessage &gt; should handle search errors" time="0.000159708">
        </testcase>
    </testsuite>
    <testsuite name="src/services/clipboard-service.test.ts" timestamp="2025-07-06T18:54:21.312Z" hostname="Seths-MacBook-Pro.local" tests="9" failures="0" errors="0" skipped="0" time="0.02919325">
        <testcase classname="src/services/clipboard-service.test.ts" name="ClipboardService &gt; copyToClipboard &gt; should copy text using navigator.clipboard when available" time="0.0027375">
        </testcase>
        <testcase classname="src/services/clipboard-service.test.ts" name="ClipboardService &gt; copyToClipboard &gt; should handle navigator.clipboard errors" time="0.000389958">
        </testcase>
        <testcase classname="src/services/clipboard-service.test.ts" name="ClipboardService &gt; copyToClipboard &gt; should reject empty text" time="0.00018475">
        </testcase>
        <testcase classname="src/services/clipboard-service.test.ts" name="ClipboardService &gt; copyToClipboard &gt; should use platform-specific commands when navigator unavailable" time="0.010947666">
        </testcase>
        <testcase classname="src/services/clipboard-service.test.ts" name="ClipboardService &gt; copyToClipboard &gt; should handle unsupported platforms" time="0.001880542">
        </testcase>
        <testcase classname="src/services/clipboard-service.test.ts" name="ClipboardService &gt; readFromClipboard &gt; should read text using navigator.clipboard when available" time="0.000425458">
        </testcase>
        <testcase classname="src/services/clipboard-service.test.ts" name="ClipboardService &gt; readFromClipboard &gt; should handle navigator.clipboard read errors" time="0.000245125">
        </testcase>
        <testcase classname="src/services/clipboard-service.test.ts" name="ClipboardService &gt; readFromClipboard &gt; should use platform-specific commands when navigator unavailable" time="0.006352333">
        </testcase>
        <testcase classname="src/services/clipboard-service.test.ts" name="ClipboardService &gt; readFromClipboard &gt; should handle platform command failures" time="0.004664625">
        </testcase>
    </testsuite>
    <testsuite name="src/services/context-loading-service.test.ts" timestamp="2025-07-06T18:54:21.312Z" hostname="Seths-MacBook-Pro.local" tests="23" failures="11" errors="0" skipped="0" time="0.012315333">
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; constructor &gt; should create service with default configuration" time="0.000972708">
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; constructor &gt; should merge provided configuration with defaults" time="0.000505625">
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; loadGlobalContext &gt; should load global context files successfully" time="0.005385791">
            <failure message="expected [] to have a length of 2 but got +0" type="AssertionError">
AssertionError: expected [] to have a length of 2 but got +0

- Expected
+ Received

- 2
+ 0

 ❯ src/services/context-loading-service.test.ts:88:23
            </failure>
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; loadGlobalContext &gt; should return empty array when global context disabled" time="0.000146208">
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; loadGlobalContext &gt; should return empty array when global context directory does not exist" time="0.0001815">
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; loadGlobalContext &gt; should skip missing context files gracefully" time="0.000331292">
            <failure message="expected [] to have a length of 1 but got +0" type="AssertionError">
AssertionError: expected [] to have a length of 1 but got +0

- Expected
+ Received

- 1
+ 0

 ❯ src/services/context-loading-service.test.ts:134:23
            </failure>
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; loadProjectContext &gt; should load project context files successfully" time="0.000334667">
            <failure message="expected [] to have a length of 2 but got +0" type="AssertionError">
AssertionError: expected [] to have a length of 2 but got +0

- Expected
+ Received

- 2
+ 0

 ❯ src/services/context-loading-service.test.ts:158:23
            </failure>
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; loadProjectContext &gt; should return empty array when project context disabled" time="0.000109333">
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; loadProjectContext &gt; should return empty array when no project root found" time="0.0001395">
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; loadDirectoryContext &gt; should load directory context files with decreasing priority" time="0.000382167">
            <failure message="expected 0 to be greater than 0" type="AssertionError">
AssertionError: expected 0 to be greater than 0
 ❯ src/services/context-loading-service.test.ts:203:30
            </failure>
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; loadDirectoryContext &gt; should return empty array when directory context disabled" time="0.000097833">
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; loadDirectoryContext &gt; should respect maxDepth configuration" time="0.000247167">
            <failure message="expected &quot;spy&quot; to be called 4 times, but got 0 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 4 times, but got 0 times
 ❯ src/services/context-loading-service.test.ts:234:26
            </failure>
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; validateContextFile &gt; should validate existing readable file" time="0.000362125">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/context-loading-service.test.ts:254:30
            </failure>
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; validateContextFile &gt; should detect non-existent files" time="0.000635959">
            <failure message="expected [ Array(1) ] to include &apos;Cannot read file: File not found&apos;" type="AssertionError">
AssertionError: expected [ Array(1) ] to include &apos;Cannot read file: File not found&apos;
 ❯ src/services/context-loading-service.test.ts:265:29
            </failure>
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; validateContextFile &gt; should detect directories instead of files" time="0.00026">
            <failure message="expected [ Array(1) ] to include &apos;Path is not a file&apos;" type="AssertionError">
AssertionError: expected [ Array(1) ] to include &apos;Path is not a file&apos;
 ❯ src/services/context-loading-service.test.ts:281:29
            </failure>
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; validateContextFile &gt; should warn about large files" time="0.00021575">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/context-loading-service.test.ts:299:30
            </failure>
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; validateContextFile &gt; should warn about empty files" time="0.000167166">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/context-loading-service.test.ts:317:30
            </failure>
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; validateContextFile &gt; should warn about old files" time="0.000165459">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/context-loading-service.test.ts:338:30
            </failure>
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; edge cases and error handling &gt; should handle file system errors gracefully" time="0.000140625">
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; edge cases and error handling &gt; should handle invalid file content encoding" time="0.000112125">
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; edge cases and error handling &gt; should handle stat errors gracefully" time="0.000106417">
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; configuration &gt; should return current configuration" time="0.0003855">
        </testcase>
        <testcase classname="src/services/context-loading-service.test.ts" name="ContextLoadingService &gt; configuration &gt; should not mutate original configuration" time="0.000126917">
        </testcase>
    </testsuite>
    <testsuite name="src/services/conversation-service.test.ts" timestamp="2025-07-06T18:54:21.314Z" hostname="Seths-MacBook-Pro.local" tests="9" failures="2" errors="0" skipped="0" time="0.009216084">
        <testcase classname="src/services/conversation-service.test.ts" name="ConversationService &gt; createConversation() &gt; should create a new conversation without initial message" time="0.001877167">
        </testcase>
        <testcase classname="src/services/conversation-service.test.ts" name="ConversationService &gt; createConversation() &gt; should create a new conversation with initial message" time="0.000356666">
        </testcase>
        <testcase classname="src/services/conversation-service.test.ts" name="ConversationService &gt; getConversation() &gt; should retrieve a conversation by ID" time="0.000743042">
        </testcase>
        <testcase classname="src/services/conversation-service.test.ts" name="ConversationService &gt; getConversation() &gt; should return null for non-existent conversation" time="0.000291208">
        </testcase>
        <testcase classname="src/services/conversation-service.test.ts" name="ConversationService &gt; deleteConversation() &gt; should delete a conversation by ID" time="0.000321417">
        </testcase>
        <testcase classname="src/services/conversation-service.test.ts" name="ConversationService &gt; sendMessage() &gt; should add user message and generate response" time="0.000398417">
        </testcase>
        <testcase classname="src/services/conversation-service.test.ts" name="ConversationService &gt; sendMessageStream() &gt; should stream response and emit events" time="0.003555333">
            <failure message="expected &quot;spy&quot; to be called 2 times, but got 0 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 2 times, but got 0 times
 ❯ src/services/conversation-service.test.ts:192:28
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-service.test.ts" name="ConversationService &gt; sendMessageStream() &gt; should handle tool calls correctly" time="0.00051425">
            <failure message="expected &quot;spy&quot; to be called 1 times, but got 0 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 1 times, but got 0 times
 ❯ src/services/conversation-service.test.ts:232:29
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-service.test.ts" name="ConversationService &gt; sendMessageStream() &gt; should handle errors during streaming" time="0.000375125">
        </testcase>
    </testsuite>
    <testsuite name="src/services/conversation-tree-lifecycle.test.ts" timestamp="2025-07-06T18:54:21.315Z" hostname="Seths-MacBook-Pro.local" tests="20" failures="17" errors="0" skipped="0" time="0.015420458">
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; initialization &gt; should create service with valid configuration" time="0.003571083">
            <failure message="service.getConfig is not a function" type="TypeError">
TypeError: service.getConfig is not a function
 ❯ src/services/conversation-tree-lifecycle.test.ts:59:22
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; initialization &gt; should throw error with invalid configuration" time="0.002006917">
            <failure message="expected [Function] to throw an error" type="AssertionError">
AssertionError: expected [Function] to throw an error
 ❯ src/services/conversation-tree-lifecycle.test.ts:64:73
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; initialization &gt; should use default configuration when none provided" time="0.000258125">
            <failure message="defaultService.getConfig is not a function" type="TypeError">
TypeError: defaultService.getConfig is not a function
 ❯ src/services/conversation-tree-lifecycle.test.ts:69:44
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; tree creation &gt; should create new conversation tree successfully" time="0.002961958">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/conversation-tree-lifecycle.test.ts:85:30
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; tree creation &gt; should handle tree creation errors gracefully" time="0.000472542">
            <failure message="the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string" type="AssertionError">
AssertionError: the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string
 ❯ src/services/conversation-tree-lifecycle.test.ts:102:37
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; tree creation &gt; should validate tree ID format" time="0.000193834">
            <failure message="the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string" type="AssertionError">
AssertionError: the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string
 ❯ src/services/conversation-tree-lifecycle.test.ts:109:37
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; tree loading &gt; should load existing tree successfully" time="0.000509167">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/conversation-tree-lifecycle.test.ts:165:30
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; tree loading &gt; should handle missing tree files" time="0.00110125">
            <failure message="expected &apos;Lifecycle service not initialized&apos; to contain &apos;Tree not found&apos;" type="AssertionError">
AssertionError: expected &apos;Lifecycle service not initialized&apos; to contain &apos;Tree not found&apos;

Expected: &quot;Tree not found&quot;
Received: &quot;Lifecycle service not initialized&quot;

 ❯ src/services/conversation-tree-lifecycle.test.ts:176:28
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; tree saving &gt; should save tree successfully" time="0.000336625">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/conversation-tree-lifecycle.test.ts:210:30
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; tree saving &gt; should create backup before saving" time="0.000172458">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/conversation-tree-lifecycle.test.ts:219:30
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; tree saving &gt; should validate tree before saving" time="0.000331667">
            <failure message="expected &apos;Lifecycle service not initialized&apos; to contain &apos;Invalid tree ID&apos;" type="AssertionError">
AssertionError: expected &apos;Lifecycle service not initialized&apos; to contain &apos;Invalid tree ID&apos;

Expected: &quot;Invalid tree ID&quot;
Received: &quot;Lifecycle service not initialized&quot;

 ❯ src/services/conversation-tree-lifecycle.test.ts:228:28
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; tree deletion &gt; should delete tree successfully" time="0.000242292">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/conversation-tree-lifecycle.test.ts:238:30
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; tree deletion &gt; should handle deletion of nonexistent tree" time="0.000218666">
            <failure message="expected &apos;Lifecycle service not initialized&apos; to contain &apos;Tree not found&apos;" type="AssertionError">
AssertionError: expected &apos;Lifecycle service not initialized&apos; to contain &apos;Tree not found&apos;

Expected: &quot;Tree not found&quot;
Received: &quot;Lifecycle service not initialized&quot;

 ❯ src/services/conversation-tree-lifecycle.test.ts:247:28
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; tree deletion &gt; should create backup before deletion" time="0.000170209">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/conversation-tree-lifecycle.test.ts:255:30
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; event handling &gt; should emit tree-created event" time="0.000910666">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ ObjectContaining{…} ]

Number of calls: 0

 ❯ src/services/conversation-tree-lifecycle.test.ts:267:24
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; event handling &gt; should emit tree-saved event" time="0.000209709">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ ObjectContaining{…} ]

Number of calls: 0

 ❯ src/services/conversation-tree-lifecycle.test.ts:302:24
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; configuration management &gt; should update configuration" time="0.000190167">
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; configuration management &gt; should validate configuration updates" time="0.000132167">
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; storage management &gt; should check storage directory exists" time="0.000092875">
        </testcase>
        <testcase classname="src/services/conversation-tree-lifecycle.test.ts" name="ConversationTreeLifecycleService &gt; storage management &gt; should create storage directory if missing" time="0.000432875">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ &apos;/tmp/test-trees&apos;, …(1) ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ &apos;/tmp/test-trees&apos;, …(1) ]

Number of calls: 0

 ❯ src/services/conversation-tree-lifecycle.test.ts:340:29
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/services/conversation-tree-storage.test.ts" timestamp="2025-07-06T18:54:21.317Z" hostname="Seths-MacBook-Pro.local" tests="25" failures="19" errors="0" skipped="0" time="0.016326791">
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; initialization &gt; should initialize storage directories successfully" time="0.005462292">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ Array(2) ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ Array(2) ]

Number of calls: 0

 ❯ src/services/conversation-tree-storage.test.ts:162:25
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; initialization &gt; should handle initialization errors gracefully" time="0.00194325">
            <failure message="expected true to be false // Object.is equality" type="AssertionError">
AssertionError: expected true to be false // Object.is equality

- Expected
+ Received

- false
+ true

 ❯ src/services/conversation-tree-storage.test.ts:177:30
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; initialization &gt; should not create backup directory when backups disabled" time="0.000281542">
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; saveTree &gt; should save tree successfully" time="0.001209875">
            <failure message="expected undefined to deeply equal { nodeCount: 1, duration: Any&lt;Number&gt; }" type="AssertionError">
AssertionError: expected undefined to deeply equal { nodeCount: 1, duration: Any&lt;Number&gt; }

- Expected: 
{
  &quot;duration&quot;: Any&lt;Number&gt;,
  &quot;nodeCount&quot;: 1,
}

+ Received: 
undefined

 ❯ src/services/conversation-tree-storage.test.ts:209:27
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; saveTree &gt; should create backup when enabled" time="0.000345667">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ &apos;/test/storage/tree-1&apos;, …(2) ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ &apos;/test/storage/tree-1&apos;, …(2) ]

Number of calls: 0

 ❯ src/services/conversation-tree-storage.test.ts:225:22
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; saveTree &gt; should handle save errors gracefully" time="0.000262084">
            <failure message="expected true to be false // Object.is equality" type="AssertionError">
AssertionError: expected true to be false // Object.is equality

- Expected
+ Received

- false
+ true

 ❯ src/services/conversation-tree-storage.test.ts:241:30
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; saveTree &gt; should save multiple nodes correctly" time="0.000261208">
            <failure message="expected undefined to be 2 // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be 2 // Object.is equality

- Expected: 
2

+ Received: 
undefined

 ❯ src/services/conversation-tree-storage.test.ts:260:38
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; loadTree &gt; should load tree successfully" time="0.000302208">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/conversation-tree-storage.test.ts:279:30
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; loadTree &gt; should handle non-existent tree" time="0.001091875">
            <failure message="expected &apos;Failed to load tree: &quot;undefined&quot; is n…&apos; to be &apos;Tree not found: non-existent&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;Failed to load tree: &quot;undefined&quot; is n…&apos; to be &apos;Tree not found: non-existent&apos; // Object.is equality

Expected: &quot;Tree not found: non-existent&quot;
Received: &quot;Failed to load tree: &quot;undefined&quot; is not valid JSON&quot;

 ❯ src/services/conversation-tree-storage.test.ts:298:28
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; loadTree &gt; should handle corrupted metadata" time="0.00015725">
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; loadTree &gt; should skip non-JSON files in nodes directory" time="0.000188458">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/conversation-tree-storage.test.ts:325:30
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; deleteTree &gt; should delete tree successfully" time="0.000251833">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ &apos;/test/storage/tree-1&apos;, …(1) ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ &apos;/test/storage/tree-1&apos;, …(1) ]

Number of calls: 0

 ❯ src/services/conversation-tree-storage.test.ts:351:22
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; deleteTree &gt; should handle non-existent tree deletion" time="0.000173958">
            <failure message="expected true to be false // Object.is equality" type="AssertionError">
AssertionError: expected true to be false // Object.is equality

- Expected
+ Received

- false
+ true

 ❯ src/services/conversation-tree-storage.test.ts:363:30
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; deleteTree &gt; should create final backup before deletion when enabled" time="0.000187458">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ &apos;/test/storage/tree-1&apos;, …(2) ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ &apos;/test/storage/tree-1&apos;, …(2) ]

Number of calls: 0

 ❯ src/services/conversation-tree-storage.test.ts:384:22
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; listTrees &gt; should list trees successfully" time="0.000493458">
            <failure message="expected [] to have a length of 2 but got +0" type="AssertionError">
AssertionError: expected [] to have a length of 2 but got +0

- Expected
+ Received

- 2
+ 0

 ❯ src/services/conversation-tree-storage.test.ts:409:27
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; listTrees &gt; should handle empty storage directory" time="0.000175625">
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; listTrees &gt; should skip corrupted tree metadata" time="0.000254959">
            <failure message="expected [] to have a length of 1 but got +0" type="AssertionError">
AssertionError: expected [] to have a length of 1 but got +0

- Expected
+ Received

- 1
+ 0

 ❯ src/services/conversation-tree-storage.test.ts:438:27
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; utility methods &gt; should check tree existence correctly" time="0.00016825">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ &apos;/test/storage/tree-1&apos; ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ &apos;/test/storage/tree-1&apos; ]

Number of calls: 0

 ❯ src/services/conversation-tree-storage.test.ts:460:26
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; utility methods &gt; should return false for non-existent tree" time="0.00015425">
            <failure message="expected true to be false // Object.is equality" type="AssertionError">
AssertionError: expected true to be false // Object.is equality

- Expected
+ Received

- false
+ true

 ❯ src/services/conversation-tree-storage.test.ts:471:22
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; utility methods &gt; should get storage statistics" time="0.000678083">
            <failure message="expected { totalTrees: +0, totalSize: +0, …(2) } to deeply equal { Object (totalTrees, totalSize, ...) }" type="AssertionError">
AssertionError: expected { totalTrees: +0, totalSize: +0, …(2) } to deeply equal { Object (totalTrees, totalSize, ...) }

- Expected
+ Received

  {
-   &quot;newestTree&quot;: 2000,
-   &quot;oldestTree&quot;: 1000,
-   &quot;totalSize&quot;: 3072,
-   &quot;totalTrees&quot;: 2,
+   &quot;newestTree&quot;: 0,
+   &quot;oldestTree&quot;: 1751828051184,
+   &quot;totalSize&quot;: 0,
+   &quot;totalTrees&quot;: 0,
  }

 ❯ src/services/conversation-tree-storage.test.ts:504:27
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; error handling &gt; should require initialization before operations" time="0.000848">
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; error handling &gt; should handle filesystem permission errors" time="0.000236625">
            <failure message="expected true to be false // Object.is equality" type="AssertionError">
AssertionError: expected true to be false // Object.is equality

- Expected
+ Received

- false
+ true

 ❯ src/services/conversation-tree-storage.test.ts:541:30
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="ConversationTreeStorageService &gt; backup management &gt; should clean old backups when limit exceeded" time="0.00021075">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ …(2) ]

Number of calls: 0

 ❯ src/services/conversation-tree-storage.test.ts:572:22
            </failure>
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="createTreeStorageService factory &gt; should create service with provided config" time="0.000110958">
        </testcase>
        <testcase classname="src/services/conversation-tree-storage.test.ts" name="createTreeStorageService factory &gt; should create service with minimal config" time="0.000061209">
        </testcase>
    </testsuite>
    <testsuite name="src/services/file-io-service.test.ts" timestamp="2025-07-06T18:54:21.319Z" hostname="Seths-MacBook-Pro.local" tests="28" failures="22" errors="0" skipped="0" time="0.020709">
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; readFile &gt; should read text file successfully" time="0.007650834">
            <system-out>
TEST RESULT: {&quot;success&quot;:false,&quot;error&quot;:&quot;Read failed: Cannot read properties of undefined (reading &apos;size&apos;)&quot;,&quot;timing&quot;:{&quot;startTime&quot;:1751828053935,&quot;duration&quot;:1}}

            </system-out>
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/file-io-service.test.ts:133:30
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; readFile &gt; should read binary file as base64" time="0.000542709">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/file-io-service.test.ts:165:30
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; readFile &gt; should handle file not found" time="0.00152175">
            <failure message="expected &apos;Read failed: Cannot read properties o…&apos; to contain &apos;File not found&apos;" type="AssertionError">
AssertionError: expected &apos;Read failed: Cannot read properties o…&apos; to contain &apos;File not found&apos;

Expected: &quot;File not found&quot;
Received: &quot;Read failed: Cannot read properties of undefined (reading &apos;size&apos;)&quot;

 ❯ src/services/file-io-service.test.ts:181:28
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; readFile &gt; should handle file size limit exceeded" time="0.000681375">
            <failure message="expected &apos;Read failed: Cannot read properties o…&apos; to contain &apos;File size exceeds limit&apos;" type="AssertionError">
AssertionError: expected &apos;Read failed: Cannot read properties o…&apos; to contain &apos;File size exceeds limit&apos;

Expected: &quot;File size exceeds limit&quot;
Received: &quot;Read failed: Cannot read properties of undefined (reading &apos;size&apos;)&quot;

 ❯ src/services/file-io-service.test.ts:205:28
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; readFile &gt; should handle read errors" time="0.000285">
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; writeFile &gt; should write file successfully" time="0.000432209">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/file-io-service.test.ts:271:30
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; writeFile &gt; should handle write errors" time="0.000576083">
            <failure message="expected &apos;Failed to get file stats after write&apos; to contain &apos;Write failed&apos;" type="AssertionError">
AssertionError: expected &apos;Failed to get file stats after write&apos; to contain &apos;Write failed&apos;

Expected: &quot;Write failed&quot;
Received: &quot;Failed to get file stats after write&quot;

 ❯ src/services/file-io-service.test.ts:289:28
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; writeFile &gt; should use custom encoding" time="0.001584292">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ &apos;/test/output.txt&apos;, …(2) ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ &apos;/test/output.txt&apos;, …(2) ]

Number of calls: 0

 ❯ src/services/file-io-service.test.ts:325:29
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; deleteFile &gt; should delete file successfully" time="0.000505708">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ &apos;/test/delete.txt&apos; ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ &apos;/test/delete.txt&apos; ]

Number of calls: 0

 ❯ src/services/file-io-service.test.ts:344:26
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; deleteFile &gt; should handle delete errors" time="0.000320709">
            <failure message="expected true to be false // Object.is equality" type="AssertionError">
AssertionError: expected true to be false // Object.is equality

- Expected
+ Received

- false
+ true

 ❯ src/services/file-io-service.test.ts:355:30
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; moveFile &gt; should move file successfully" time="0.000436917">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/file-io-service.test.ts:401:30
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; moveFile &gt; should handle move errors" time="0.000384083">
            <failure message="expected &apos;Failed to get file stats after move&apos; to contain &apos;Move failed&apos;" type="AssertionError">
AssertionError: expected &apos;Failed to get file stats after move&apos; to contain &apos;Move failed&apos;

Expected: &quot;Move failed&quot;
Received: &quot;Failed to get file stats after move&quot;

 ❯ src/services/file-io-service.test.ts:424:28
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; copyFile &gt; should copy file successfully" time="0.000374875">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/file-io-service.test.ts:469:30
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; copyFile &gt; should handle copy errors" time="0.000316417">
            <failure message="expected &apos;Failed to get file stats after copy&apos; to contain &apos;Copy failed&apos;" type="AssertionError">
AssertionError: expected &apos;Failed to get file stats after copy&apos; to contain &apos;Copy failed&apos;

Expected: &quot;Copy failed&quot;
Received: &quot;Failed to get file stats after copy&quot;

 ❯ src/services/file-io-service.test.ts:492:28
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; fileExists &gt; should return true for existing file" time="0.000197792">
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; fileExists &gt; should return false for non-existing file" time="0.000356625">
            <failure message="expected true to be false // Object.is equality" type="AssertionError">
AssertionError: expected true to be false // Object.is equality

- Expected
+ Received

- false
+ true

 ❯ src/services/file-io-service.test.ts:529:27
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; getFileStats &gt; should return file statistics" time="0.000291917">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/file-io-service.test.ts:555:30
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; getFileStats &gt; should handle stat errors" time="0.000194792">
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; readFileLines &gt; should read file as lines" time="0.000346709">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/file-io-service.test.ts:605:30
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; readFileLines &gt; should handle binary files" time="0.000494709">
            <failure message="expected &apos;Read failed: Cannot read properties o…&apos; to contain &apos;Cannot read binary file as lines&apos;" type="AssertionError">
AssertionError: expected &apos;Read failed: Cannot read properties o…&apos; to contain &apos;Cannot read binary file as lines&apos;

Expected: &quot;Cannot read binary file as lines&quot;
Received: &quot;Read failed: Cannot read properties of undefined (reading &apos;size&apos;)&quot;

 ❯ src/services/file-io-service.test.ts:634:28
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; writeFileLines &gt; should write lines to file" time="0.0003105">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/file-io-service.test.ts:680:30
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; appendToFile &gt; should append to existing file" time="0.000359791">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/file-io-service.test.ts:735:30
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; appendToFile &gt; should create new file if not exists" time="0.000317334">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/file-io-service.test.ts:780:30
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; configuration &gt; should use custom configuration" time="0.000162625">
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; configuration &gt; should update configuration" time="0.000178209">
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; binary file detection &gt; should detect binary extensions" time="0.000328625">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/file-io-service.test.ts:836:32
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; binary file detection &gt; should detect text extensions" time="0.000297125">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/services/file-io-service.test.ts:875:32
            </failure>
        </testcase>
        <testcase classname="src/services/file-io-service.test.ts" name="FileIOService &gt; timing &gt; should include timing information" time="0.000277708">
        </testcase>
    </testsuite>
    <testsuite name="src/services/layout-service.test.ts" timestamp="2025-07-06T18:54:21.322Z" hostname="Seths-MacBook-Pro.local" tests="30" failures="1" errors="0" skipped="0" time="0.009548417">
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Basic Dimension Calculations &gt; should calculate dimensions with default terminal size" time="0.001067541">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Basic Dimension Calculations &gt; should use fallback dimensions when terminal size unavailable" time="0.000164875">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Basic Dimension Calculations &gt; should handle large terminal sizes" time="0.000161875">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Basic Dimension Calculations &gt; should handle small terminal sizes" time="0.004558333">
            <failure message="expected 33 to be 20 // Object.is equality" type="AssertionError">
AssertionError: expected 33 to be 20 // Object.is equality

- Expected
+ Received

- 20
+ 33

 ❯ src/services/layout-service.test.ts:80:37
            </failure>
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Layout Options &gt; should apply footer height option" time="0.000130875">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Layout Options &gt; should apply constrain height option" time="0.00008075">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Layout Options &gt; should ensure minimum available height" time="0.000057791">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Terminal Size Detection &gt; should detect small terminals correctly" time="0.000085792">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Terminal Size Detection &gt; should detect adequate terminals correctly" time="0.000066583">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Terminal Size Detection &gt; should detect small width but adequate height" time="0.000055125">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Terminal Size Detection &gt; should detect adequate width but small height" time="0.000048083">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Layout Warnings &gt; should warn about narrow width" time="0.000320083">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Layout Warnings &gt; should warn about short height" time="0.000073666">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Layout Warnings &gt; should warn about narrow input area" time="0.000059625">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Layout Warnings &gt; should return no warnings for adequate terminal" time="0.000206791">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Layout Warnings &gt; should return multiple warnings for very small terminal" time="0.000052834">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Component Height Calculations &gt; should calculate history component height" time="0.000073042">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Component Height Calculations &gt; should calculate input component height" time="0.000061">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Component Height Calculations &gt; should calculate dialog component height" time="0.000048125">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Component Height Calculations &gt; should calculate debug component height" time="0.000045083">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Component Height Calculations &gt; should use default height for unknown component" time="0.000046541">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Font Size Calculations &gt; should calculate appropriate font sizes for normal terminal" time="0.000139458">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Font Size Calculations &gt; should handle very wide terminals" time="0.000053334">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Font Size Calculations &gt; should handle very narrow terminals" time="0.00005225">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Spacing Calculations &gt; should calculate spacing for large terminals" time="0.000088584">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Spacing Calculations &gt; should calculate spacing for normal terminals" time="0.000064708">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Spacing Calculations &gt; should ensure minimum spacing values" time="0.000054125">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Error Handling &gt; should handle calculation errors gracefully" time="0.000630583">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Singleton Instance &gt; should provide singleton instance" time="0.000088125">
        </testcase>
        <testcase classname="src/services/layout-service.test.ts" name="LayoutService &gt; Singleton Instance &gt; should return same instance on multiple accesses" time="0.000042542">
        </testcase>
    </testsuite>
    <testsuite name="src/services/memory-service.test.ts" timestamp="2025-07-06T18:54:21.324Z" hostname="Seths-MacBook-Pro.local" tests="10" failures="0" errors="0" skipped="0" time="0.036365417">
        <testcase classname="src/services/memory-service.test.ts" name="FileMemoryService &gt; store() &gt; should store data by key" time="0.006221541">
        </testcase>
        <testcase classname="src/services/memory-service.test.ts" name="FileMemoryService &gt; store() &gt; should sanitize keys with invalid filename characters" time="0.006408166">
        </testcase>
        <testcase classname="src/services/memory-service.test.ts" name="FileMemoryService &gt; retrieve() &gt; should retrieve stored data by key" time="0.0030765">
        </testcase>
        <testcase classname="src/services/memory-service.test.ts" name="FileMemoryService &gt; retrieve() &gt; should return null for non-existent keys" time="0.001564083">
        </testcase>
        <testcase classname="src/services/memory-service.test.ts" name="FileMemoryService &gt; exists() &gt; should return true for existing keys" time="0.002355667">
        </testcase>
        <testcase classname="src/services/memory-service.test.ts" name="FileMemoryService &gt; exists() &gt; should return false for non-existent keys" time="0.001213">
        </testcase>
        <testcase classname="src/services/memory-service.test.ts" name="FileMemoryService &gt; delete() &gt; should delete data by key" time="0.002313375">
        </testcase>
        <testcase classname="src/services/memory-service.test.ts" name="FileMemoryService &gt; delete() &gt; should return false when deleting non-existent keys" time="0.001047958">
        </testcase>
        <testcase classname="src/services/memory-service.test.ts" name="FileMemoryService &gt; listKeys() &gt; should list all stored keys" time="0.009495208">
        </testcase>
        <testcase classname="src/services/memory-service.test.ts" name="FileMemoryService &gt; listKeys() &gt; should return an empty array when no keys exist" time="0.001243208">
        </testcase>
    </testsuite>
    <testsuite name="src/services/phase-lifecycle-service.test.ts" timestamp="2025-07-06T18:54:21.324Z" hostname="Seths-MacBook-Pro.local" tests="29" failures="7" errors="0" skipped="0" time="0.019286916">
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Initialization &gt; should initialize successfully" time="0.005307458">
            <failure message="expected 0 to be greater than 0" type="AssertionError">
AssertionError: expected 0 to be greater than 0
 ❯ src/services/phase-lifecycle-service.test.ts:36:39
            </failure>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Initialization &gt; should handle double initialization gracefully" time="0.000623958">
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Initialization &gt; should validate configuration on creation" time="0.000508333">
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Creation &gt; should create a problem discovery phase successfully" time="0.001000708">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054101_sc887zohx)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Creation &gt; should create a solution discovery phase successfully" time="0.000209083">
            <system-out>
✅ Phase created: Solution Discovery (phase_1751828054102_vkwwrfdk2)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Creation &gt; should create a delivery support phase successfully" time="0.000168209">
            <system-out>
✅ Phase created: Delivery &amp; Support (phase_1751828054102_4m1a3u621)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Creation &gt; should respect concurrent phase limits" time="0.002183834">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054102_effz7s25m)

✅ Phase created: Problem Discovery (phase_1751828054102_gi45h3s01)

✅ Phase created: Problem Discovery (phase_1751828054102_8o7zmbfbz)

            </system-out>
            <failure message="Maximum concurrent phases (3) reached for product product-1" type="UserError">
UserError: Maximum concurrent phases (3) reached for product product-1
 ❯ createUserError src/errors/formatter.ts:35:21
 ❯ PhaseLifecycleService.createPhase src/services/phase-lifecycle-service.ts:273:26
 ❯ src/services/phase-lifecycle-service.test.ts:98:36

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { category: 8, level: 2, resolution: undefined, details: {}, code: undefined }
            </failure>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Creation &gt; should accept custom phase options" time="0.000389875">
            <system-out>
✅ Phase created: Custom Phase Name (phase_1751828054104_esfv3yopz)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Creation &gt; should fail when service not initialized" time="0.00026425">
            <failure message="Service not initialized" type="UserError">
UserError: Service not initialized
 ❯ createUserError src/errors/formatter.ts:35:21
 ❯ PhaseLifecycleService.createPhase src/services/phase-lifecycle-service.ts:273:26
 ❯ src/services/phase-lifecycle-service.test.ts:127:49

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { category: 8, level: 2, resolution: undefined, details: {}, code: undefined }
            </failure>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Lifecycle &gt; should start a phase successfully" time="0.000237375">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054105_1n8rvkflf)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Lifecycle &gt; should prevent starting already started phase" time="0.00022125">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054105_h8286cmi8)

            </system-out>
            <failure message="Phase phase_1751828054105_h8286cmi8 cannot be started from status in_progress" type="UserError">
UserError: Phase phase_1751828054105_h8286cmi8 cannot be started from status in_progress
 ❯ createUserError src/errors/formatter.ts:35:21
 ❯ PhaseLifecycleService.startPhase src/services/phase-lifecycle-service.ts:327:26
 ❯ src/services/phase-lifecycle-service.test.ts:153:36

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { category: 8, level: 2, resolution: undefined, details: {}, code: undefined }
            </failure>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Lifecycle &gt; should complete a phase when criteria are met" time="0.000390042">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054105_lazewgpxh)

🎉 Phase completed: Problem Discovery (phase_1751828054105_lazewgpxh)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Lifecycle &gt; should prevent completion when criteria not met" time="0.000149917">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054106_rijvr5xq3)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Lifecycle &gt; should cancel a phase with reason" time="0.000254666">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054106_10s88eqee)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Lifecycle &gt; should prevent cancelling completed phase" time="0.000216334">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054106_v19vg603s)

            </system-out>
            <failure message="Cannot cancel completed phase phase_1751828054106_v19vg603s" type="UserError">
UserError: Cannot cancel completed phase phase_1751828054106_v19vg603s
 ❯ createUserError src/errors/formatter.ts:35:21
 ❯ PhaseLifecycleService.cancelPhase src/services/phase-lifecycle-service.ts:447:26
 ❯ src/services/phase-lifecycle-service.test.ts:216:36

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { category: 8, level: 2, resolution: undefined, details: {}, code: undefined }
            </failure>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Dependencies &gt; should prevent starting phase with unmet dependencies" time="0.000279791">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054106_0zqoqovms)

✅ Phase created: Solution Discovery (phase_1751828054106_uy2vvzmqd)

            </system-out>
            <failure message="Dependencies not met: Unmet dependencies: phase_1751828054106_0zqoqovms" type="UserError">
UserError: Dependencies not met: Unmet dependencies: phase_1751828054106_0zqoqovms
 ❯ createUserError src/errors/formatter.ts:35:21
 ❯ PhaseLifecycleService.startPhase src/services/phase-lifecycle-service.ts:327:26
 ❯ src/services/phase-lifecycle-service.test.ts:240:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { category: 8, level: 2, resolution: undefined, details: {}, code: undefined }
            </failure>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Dependencies &gt; should allow starting phase when dependencies are completed" time="0.000173958">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054107_zkb7aqsa8)

✅ Phase created: Solution Discovery (phase_1751828054107_qklyfbr3f)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Queries &gt; should get phase by ID" time="0.000244916">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054107_s7xdbdndq)

✅ Phase created: Solution Discovery (phase_1751828054107_i7xqldv8k)

✅ Phase created: Problem Discovery (phase_1751828054107_wvxcay7ga)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Queries &gt; should return undefined for non-existent phase" time="0.000155584">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054107_2q6ilyu3t)

✅ Phase created: Solution Discovery (phase_1751828054107_5oqr1kbve)

✅ Phase created: Problem Discovery (phase_1751828054107_feqvk13cy)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Queries &gt; should get phases by product ID" time="0.000752375">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054108_wz0fmjuoy)

✅ Phase created: Solution Discovery (phase_1751828054108_g6k8xtkfk)

✅ Phase created: Problem Discovery (phase_1751828054108_m071ku71i)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Phase Queries &gt; should get phases by status" time="0.000570917">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054108_zgq1myyhn)

✅ Phase created: Solution Discovery (phase_1751828054108_4np6s63qn)

✅ Phase created: Problem Discovery (phase_1751828054108_n9idwnxew)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Event Emission &gt; should emit phase-created event" time="0.001717292">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054109_maao5r9ta)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Event Emission &gt; should emit phase-started event" time="0.000611208">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054111_ubbb6tvg6)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Event Emission &gt; should emit phase-completed event" time="0.00032725">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054111_hgh7wn0q3)

🎉 Phase completed: Problem Discovery (phase_1751828054111_hgh7wn0q3)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Event Emission &gt; should emit transition-ready event for auto-transitions" time="0.000396666">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054111_r5lm9pmv9)

🎉 Phase completed: Problem Discovery (phase_1751828054111_r5lm9pmv9)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Error Handling &gt; should handle errors gracefully and emit error events" time="0.0002325">
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Error Handling &gt; should include timing information in error results" time="0.000250833">
            <failure message="Phase non-existent-id not found" type="UserError">
UserError: Phase non-existent-id not found
 ❯ createUserError src/errors/formatter.ts:35:21
 ❯ PhaseLifecycleService.startPhase src/services/phase-lifecycle-service.ts:327:26
 ❯ src/services/phase-lifecycle-service.test.ts:403:36

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { category: 8, level: 2, resolution: undefined, details: {}, code: undefined }
            </failure>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Cleanup &gt; should cleanup resources properly" time="0.000132041">
            <system-out>
✅ Phase created: Problem Discovery (phase_1751828054112_4rp4wcpmj)

            </system-out>
        </testcase>
        <testcase classname="src/services/phase-lifecycle-service.test.ts" name="PhaseLifecycleService &gt; Cleanup &gt; should remove all event listeners on cleanup" time="0.000191208">
        </testcase>
    </testsuite>
    <testsuite name="src/services/simple.test.ts" timestamp="2025-07-06T18:54:21.328Z" hostname="Seths-MacBook-Pro.local" tests="3" failures="0" errors="0" skipped="0" time="0.003250958">
        <testcase classname="src/services/simple.test.ts" name="Vitest Setup &gt; should run basic tests" time="0.001273333">
        </testcase>
        <testcase classname="src/services/simple.test.ts" name="Vitest Setup &gt; should handle async tests" time="0.0001325">
        </testcase>
        <testcase classname="src/services/simple.test.ts" name="Vitest Setup &gt; should support test utilities" time="0.000897417">
        </testcase>
    </testsuite>
    <testsuite name="src/services/vitest-compatibility.test.ts" timestamp="2025-07-06T18:54:21.328Z" hostname="Seths-MacBook-Pro.local" tests="4" failures="0" errors="0" skipped="0" time="0.004317375">
        <testcase classname="src/services/vitest-compatibility.test.ts" name="Jest Compatibility &gt; should support jest.fn()" time="0.002456833">
        </testcase>
        <testcase classname="src/services/vitest-compatibility.test.ts" name="Jest Compatibility &gt; should support jest.spyOn()" time="0.000467459">
        </testcase>
        <testcase classname="src/services/vitest-compatibility.test.ts" name="Jest Compatibility &gt; should support jest.mock()" time="0.000133417">
        </testcase>
        <testcase classname="src/services/vitest-compatibility.test.ts" name="Jest Compatibility &gt; should support MockedFunction type compatibility" time="0.000141041">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/AdvancedStreamingDisplay.test.tsx" timestamp="2025-07-06T18:54:21.328Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/AdvancedStreamingDisplay.test.tsx" name="src/ui/AdvancedStreamingDisplay.test.tsx" time="0">
            <failure message="Failed to resolve import &quot;../../../src/ui/components/AdvancedStreamingDisplay.tsx&quot; from &quot;src/ui/AdvancedStreamingDisplay.test.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../src/ui/components/AdvancedStreamingDisplay.tsx&quot; from &quot;src/ui/AdvancedStreamingDisplay.test.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/src/ui/AdvancedStreamingDisplay.test.tsx:18:0
  22 |  const __vi_import_2__ = await import(&quot;@testing-library/react&quot;);
  23 |  const __vi_import_3__ = await import(&quot;@testing-library/jest-dom&quot;);
  24 |  const __vi_import_4__ = await import(&quot;../../../src/ui/components/AdvancedStreamingDisplay.tsx&quot;);
     |                                       ^
  25 |  
  26 |  /**
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/App-performance.test.tsx" timestamp="2025-07-06T18:54:21.328Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/App-performance.test.tsx" name="src/ui/App-performance.test.tsx" time="0">
            <failure message="Failed to resolve import &quot;../types.js&quot; from &quot;src/ui/App-performance.test.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../types.js&quot; from &quot;src/ui/App-performance.test.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/src/ui/App-performance.test.tsx:20:0
  235|  const __vi_import_1__ = await import(&quot;@testing-library/react&quot;);
  236|  const __vi_import_2__ = await import(&quot;perf_hooks&quot;);
  237|  const __vi_import_3__ = await import(&quot;../types.js&quot;);
     |                                       ^
  238|  const __vi_import_4__ = await import(&quot;../config/performance-config.js&quot;);
  239|  const __vi_import_5__ = await import(&quot;./App.js&quot;);
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/App.test.tsx" timestamp="2025-07-06T18:54:21.328Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/App.test.tsx" name="src/ui/App.test.tsx" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ui/App.tsx:13:1

Caused by: Caused by: ReferenceError: Cannot access &apos;MessageType&apos; before initialization
 ❯ src/ui/App.test.tsx:71:15
 ❯ src/ui/App.tsx:13:1
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/integration/ai-architecture-integration.test.ts" timestamp="2025-07-06T18:54:21.329Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/ai/integration/ai-architecture-integration.test.ts" name="tests/ai/integration/ai-architecture-integration.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../src/ai/claude-content-generator.js&quot; from &quot;tests/ai/integration/ai-architecture-integration.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../src/ai/claude-content-generator.js&quot; from &quot;tests/ai/integration/ai-architecture-integration.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/ai/integration/ai-architecture-integration.test.ts:16:0
  28 |    };
  29 |  });
  30 |  const __vi_import_0__ = await import(&quot;../../src/ai/claude-content-generator.js&quot;);
     |                                       ^
  31 |  const __vi_import_1__ = await import(&quot;../../src/ai/turn-manager.js&quot;);
  32 |  const __vi_import_2__ = await import(&quot;../../src/ai/memory-manager.js&quot;);
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/integration/turn-manager-content-generator.test.ts" timestamp="2025-07-06T18:54:21.329Z" hostname="Seths-MacBook-Pro.local" tests="5" failures="5" errors="0" skipped="0" time="0.008156916">
        <testcase classname="tests/ai/integration/turn-manager-content-generator.test.ts" name="Integration: TurnManager and ContentGenerator &gt; TurnManager correctly uses ContentGenerator for basic queries" time="0.006008708">
            <failure message="createClaudeContentGenerator is not a function" type="TypeError">
TypeError: createClaudeContentGenerator is not a function
 ❯ tests/ai/integration/turn-manager-content-generator.test.ts:28:30
            </failure>
        </testcase>
        <testcase classname="tests/ai/integration/turn-manager-content-generator.test.ts" name="Integration: TurnManager and ContentGenerator &gt; TurnManager correctly uses ContentGenerator for streaming" time="0.000314667">
            <failure message="createClaudeContentGenerator is not a function" type="TypeError">
TypeError: createClaudeContentGenerator is not a function
 ❯ tests/ai/integration/turn-manager-content-generator.test.ts:60:30
            </failure>
        </testcase>
        <testcase classname="tests/ai/integration/turn-manager-content-generator.test.ts" name="Integration: TurnManager and ContentGenerator &gt; TurnManager correctly handles tool calls from ContentGenerator" time="0.000242">
            <failure message="createClaudeContentGenerator is not a function" type="TypeError">
TypeError: createClaudeContentGenerator is not a function
 ❯ tests/ai/integration/turn-manager-content-generator.test.ts:107:30
            </failure>
        </testcase>
        <testcase classname="tests/ai/integration/turn-manager-content-generator.test.ts" name="Integration: TurnManager and ContentGenerator &gt; TurnManager and ContentGenerator handle errors gracefully" time="0.000199167">
            <failure message="createClaudeContentGenerator is not a function" type="TypeError">
TypeError: createClaudeContentGenerator is not a function
 ❯ tests/ai/integration/turn-manager-content-generator.test.ts:169:30
            </failure>
        </testcase>
        <testcase classname="tests/ai/integration/turn-manager-content-generator.test.ts" name="Integration: TurnManager and ContentGenerator &gt; TurnManager passes options correctly to ContentGenerator" time="0.000189167">
            <failure message="createClaudeContentGenerator is not a function" type="TypeError">
TypeError: createClaudeContentGenerator is not a function
 ❯ tests/ai/integration/turn-manager-content-generator.test.ts:192:30
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/e2e/memory-optimization-flow.test.ts" timestamp="2025-07-06T18:54:21.329Z" hostname="Seths-MacBook-Pro.local" tests="3" failures="3" errors="0" skipped="0" time="0.005004667">
        <testcase classname="tests/ai/e2e/memory-optimization-flow.test.ts" name="E2E: Memory Optimization Flow &gt; Memory optimization activates when token limit is exceeded" time="0.003424291">
            <failure message="resetAIClient is not a function" type="TypeError">
TypeError: resetAIClient is not a function
 ❯ tests/ai/e2e/memory-optimization-flow.test.ts:84:5
            </failure>
        </testcase>
        <testcase classname="tests/ai/e2e/memory-optimization-flow.test.ts" name="E2E: Memory Optimization Flow &gt; Streaming with memory optimization" time="0.000224834">
            <failure message="resetAIClient is not a function" type="TypeError">
TypeError: resetAIClient is not a function
 ❯ tests/ai/e2e/memory-optimization-flow.test.ts:84:5
            </failure>
        </testcase>
        <testcase classname="tests/ai/e2e/memory-optimization-flow.test.ts" name="E2E: Memory Optimization Flow &gt; Memory optimization strategies yield different results" time="0.000196167">
            <failure message="resetAIClient is not a function" type="TypeError">
TypeError: resetAIClient is not a function
 ❯ tests/ai/e2e/memory-optimization-flow.test.ts:84:5
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/e2e/query-flow.test.ts" timestamp="2025-07-06T18:54:21.330Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/ai/e2e/query-flow.test.ts" name="tests/ai/e2e/query-flow.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../../src/ai/unified-client.js&quot; from &quot;tests/ai/e2e/query-flow.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../src/ai/unified-client.js&quot; from &quot;tests/ai/e2e/query-flow.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/ai/e2e/query-flow.test.ts:8:0
  22 |  });
  23 |  const __vi_import_0__ = await import(&quot;../../../src/ai/index.js&quot;);
  24 |  const __vi_import_1__ = await import(&quot;../../../src/ai/unified-client.js&quot;);
     |                                       ^
  25 |  /**
  26 |   * @license
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/e2e/tool-call-flow.test.ts" timestamp="2025-07-06T18:54:21.330Z" hostname="Seths-MacBook-Pro.local" tests="2" failures="2" errors="0" skipped="0" time="0.0043205">
        <testcase classname="tests/ai/e2e/tool-call-flow.test.ts" name="E2E: Tool Call Flow &gt; Complete tool call flow from query to tool execution to response" time="0.003316125">
            <failure message="resetAIClient is not a function" type="TypeError">
TypeError: resetAIClient is not a function
 ❯ tests/ai/e2e/tool-call-flow.test.ts:79:5
            </failure>
        </testcase>
        <testcase classname="tests/ai/e2e/tool-call-flow.test.ts" name="E2E: Tool Call Flow &gt; Streaming tool call flow" time="0.000252792">
            <failure message="resetAIClient is not a function" type="TypeError">
TypeError: resetAIClient is not a function
 ❯ tests/ai/e2e/tool-call-flow.test.ts:79:5
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/unit/content-generator.test.ts" timestamp="2025-07-06T18:54:21.330Z" hostname="Seths-MacBook-Pro.local" tests="5" failures="5" errors="0" skipped="0" time="0.005360542">
        <testcase classname="tests/ai/unit/content-generator.test.ts" name="ContentGenerator Unit Tests &gt; ContentGenerator emits events correctly" time="0.003615417">
            <failure message="createClaudeContentGenerator is not a function" type="TypeError">
TypeError: createClaudeContentGenerator is not a function
 ❯ tests/ai/unit/content-generator.test.ts:32:23
            </failure>
        </testcase>
        <testcase classname="tests/ai/unit/content-generator.test.ts" name="ContentGenerator Unit Tests &gt; ContentGenerator handles options correctly" time="0.00028275">
            <failure message="createClaudeContentGenerator is not a function" type="TypeError">
TypeError: createClaudeContentGenerator is not a function
 ❯ tests/ai/unit/content-generator.test.ts:55:23
            </failure>
        </testcase>
        <testcase classname="tests/ai/unit/content-generator.test.ts" name="ContentGenerator Unit Tests &gt; ContentGenerator handles token counting correctly" time="0.000218334">
            <failure message="createClaudeContentGenerator is not a function" type="TypeError">
TypeError: createClaudeContentGenerator is not a function
 ❯ tests/ai/unit/content-generator.test.ts:74:23
            </failure>
        </testcase>
        <testcase classname="tests/ai/unit/content-generator.test.ts" name="ContentGenerator Unit Tests &gt; ContentGenerator properly formats tool calls" time="0.000243958">
            <failure message="createClaudeContentGenerator is not a function" type="TypeError">
TypeError: createClaudeContentGenerator is not a function
 ❯ tests/ai/unit/content-generator.test.ts:90:23
            </failure>
        </testcase>
        <testcase classname="tests/ai/unit/content-generator.test.ts" name="ContentGenerator Unit Tests &gt; ContentGenerator handles errors correctly" time="0.000203">
            <failure message="createClaudeContentGenerator is not a function" type="TypeError">
TypeError: createClaudeContentGenerator is not a function
 ❯ tests/ai/unit/content-generator.test.ts:117:23
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/unit/index.test.ts" timestamp="2025-07-06T18:54:21.331Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/ai/unit/index.test.ts" name="tests/ai/unit/index.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../src/ai/index.js&quot; from &quot;tests/ai/unit/index.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../src/ai/index.js&quot; from &quot;tests/ai/unit/index.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/ai/unit/index.test.ts:14:0
  30 |    })
  31 |  }));
  32 |  const __vi_import_0__ = await import(&quot;../../src/ai/index.js&quot;);
     |                                       ^
  33 |  const __vi_import_1__ = await import(&quot;../../src/ai/unified-client.js&quot;);
  34 |  /**
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/unit/memory-manager.test.ts" timestamp="2025-07-06T18:54:21.331Z" hostname="Seths-MacBook-Pro.local" tests="5" failures="5" errors="0" skipped="0" time="0.004795625">
        <testcase classname="tests/ai/unit/memory-manager.test.ts" name="MemoryManager Unit Tests &gt; MemoryManager correctly counts tokens" time="0.00330225">
            <failure message="createMemoryManager is not a function" type="TypeError">
TypeError: createMemoryManager is not a function
 ❯ tests/ai/unit/memory-manager.test.ts:68:27
            </failure>
        </testcase>
        <testcase classname="tests/ai/unit/memory-manager.test.ts" name="MemoryManager Unit Tests &gt; MemoryManager detects when optimization is needed" time="0.000250125">
            <failure message="createMemoryManager is not a function" type="TypeError">
TypeError: createMemoryManager is not a function
 ❯ tests/ai/unit/memory-manager.test.ts:89:27
            </failure>
        </testcase>
        <testcase classname="tests/ai/unit/memory-manager.test.ts" name="MemoryManager Unit Tests &gt; MemoryManager optimizes with summarize strategy" time="0.000198542">
            <failure message="createMemoryManager is not a function" type="TypeError">
TypeError: createMemoryManager is not a function
 ❯ tests/ai/unit/memory-manager.test.ts:122:27
            </failure>
        </testcase>
        <testcase classname="tests/ai/unit/memory-manager.test.ts" name="MemoryManager Unit Tests &gt; MemoryManager optimizes with truncate strategy" time="0.000175583">
            <failure message="createMemoryManager is not a function" type="TypeError">
TypeError: createMemoryManager is not a function
 ❯ tests/ai/unit/memory-manager.test.ts:156:27
            </failure>
        </testcase>
        <testcase classname="tests/ai/unit/memory-manager.test.ts" name="MemoryManager Unit Tests &gt; MemoryManager provides accurate memory stats" time="0.000178833">
            <failure message="createMemoryManager is not a function" type="TypeError">
TypeError: createMemoryManager is not a function
 ❯ tests/ai/unit/memory-manager.test.ts:192:27
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/unit/turn-manager.test.ts" timestamp="2025-07-06T18:54:21.332Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/ai/unit/turn-manager.test.ts" name="tests/ai/unit/turn-manager.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../../src/ai/turn-manager.js&quot; from &quot;tests/ai/unit/turn-manager.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../src/ai/turn-manager.js&quot; from &quot;tests/ai/unit/turn-manager.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/ai/unit/turn-manager.test.ts:7:70
  4  |   * SPDX-License-Identifier: MIT
  5  |   */
  6  |  import { TurnEvent, TurnStatus, createTurnManager } from &quot;../../../src/ai/turn-manager.js&quot;;
     |                                                            ^
  7  |  import { ContentEvent } from &quot;../../../src/ai/content-generator.js&quot;;
  8  |  import { EventEmitter } from &quot;events&quot;;
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/unit/unified-client.test.ts" timestamp="2025-07-06T18:54:21.332Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/ai/unit/unified-client.test.ts" name="tests/ai/unit/unified-client.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../src/ai/unified-client.js&quot; from &quot;tests/ai/unit/unified-client.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../src/ai/unified-client.js&quot; from &quot;tests/ai/unit/unified-client.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/ai/unit/unified-client.test.ts:14:0
  4  |    };
  5  |  });
  6  |  const __vi_import_0__ = await import(&quot;../../src/ai/unified-client.js&quot;);
     |                                       ^
  7  |  const __vi_import_1__ = await import(&quot;events&quot;);
  8  |  const __vi_import_2__ = await import(&quot;../../src/utils/retry.js&quot;);
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/property/error-handling.test.ts" timestamp="2025-07-06T18:54:21.332Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/ai/property/error-handling.test.ts" name="tests/ai/property/error-handling.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ai/claude-client.ts:11:1

Caused by: Caused by: ReferenceError: Cannot access &apos;ErrorTestContentGenerator&apos; before initialization
 ❯ tests/ai/property/error-handling.test.ts:79:29
 ❯ src/ai/claude-client.ts:11:1
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/property/memory-optimization.test.ts" timestamp="2025-07-06T18:54:21.332Z" hostname="Seths-MacBook-Pro.local" tests="3" failures="3" errors="0" skipped="0" time="0.006854666">
        <testcase classname="tests/ai/property/memory-optimization.test.ts" name="Property: Memory Optimization &gt; Property: Memory optimization always reduces token count" time="0.004203459">
            <failure message="createMemoryManager is not a function" type="TypeError">
TypeError: createMemoryManager is not a function
 ❯ tests/ai/property/memory-optimization.test.ts:83:29
            </failure>
        </testcase>
        <testcase classname="tests/ai/property/memory-optimization.test.ts" name="Property: Memory Optimization &gt; Property: Memory stats correctly reports percentage used" time="0.0003075">
            <failure message="createMemoryManager is not a function" type="TypeError">
TypeError: createMemoryManager is not a function
 ❯ tests/ai/property/memory-optimization.test.ts:105:27
            </failure>
        </testcase>
        <testcase classname="tests/ai/property/memory-optimization.test.ts" name="Property: Memory Optimization &gt; Property: Optimization strategy respects token limit" time="0.0002555">
            <failure message="createMemoryManager is not a function" type="TypeError">
TypeError: createMemoryManager is not a function
 ❯ tests/ai/property/memory-optimization.test.ts:134:27
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ai/property/response-consistency.test.ts" timestamp="2025-07-06T18:54:21.333Z" hostname="Seths-MacBook-Pro.local" tests="4" failures="4" errors="0" skipped="0" time="0.009904209">
        <testcase classname="tests/ai/property/response-consistency.test.ts" name="Property: Response Consistency with Seeds &gt; Same seed produces identical responses" time="0.007842458">
            <failure message="createClaudeContentGenerator is not a function" type="TypeError">
TypeError: createClaudeContentGenerator is not a function
 ❯ tests/ai/property/response-consistency.test.ts:50:30
            </failure>
        </testcase>
        <testcase classname="tests/ai/property/response-consistency.test.ts" name="Property: Response Consistency with Seeds &gt; Different seeds produce different responses" time="0.00030175">
            <failure message="createClaudeContentGenerator is not a function" type="TypeError">
TypeError: createClaudeContentGenerator is not a function
 ❯ tests/ai/property/response-consistency.test.ts:75:30
            </failure>
        </testcase>
        <testcase classname="tests/ai/property/response-consistency.test.ts" name="Property: Response Consistency with Seeds &gt; Streaming responses are consistent with the same seed" time="0.000232125">
            <failure message="createClaudeContentGenerator is not a function" type="TypeError">
TypeError: createClaudeContentGenerator is not a function
 ❯ tests/ai/property/response-consistency.test.ts:98:30
            </failure>
        </testcase>
        <testcase classname="tests/ai/property/response-consistency.test.ts" name="Property: Response Consistency with Seeds &gt; No seed produces consistent results within a single conversation" time="0.000181833">
            <failure message="createClaudeContentGenerator is not a function" type="TypeError">
TypeError: createClaudeContentGenerator is not a function
 ❯ tests/ai/property/response-consistency.test.ts:131:30
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/auth/integration/auth-flow.test.ts" timestamp="2025-07-06T18:54:21.333Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/auth/integration/auth-flow.test.ts" name="tests/auth/integration/auth-flow.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../../src/auth/instance.js&quot; from &quot;tests/auth/integration/auth-flow.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../src/auth/instance.js&quot; from &quot;tests/auth/integration/auth-flow.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/auth/integration/auth-flow.test.ts:15:0
  16 |    };
  17 |  });
  18 |  const __vi_import_0__ = await import(&quot;../../../src/auth/instance.js&quot;);
     |                                       ^
  19 |  const __vi_import_1__ = await import(&quot;../../../src/auth/manager.js&quot;);
  20 |  const __vi_import_2__ = await import(&quot;../../../src/auth/types.js&quot;);
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/auth/unit/manager.test.ts" timestamp="2025-07-06T18:54:21.333Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/auth/unit/manager.test.ts" name="tests/auth/unit/manager.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../../src/auth/manager.js&quot; from &quot;tests/auth/unit/manager.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../src/auth/manager.js&quot; from &quot;tests/auth/unit/manager.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/auth/unit/manager.test.ts:13:0
  25 |  }));
  26 |  const __vi_import_0__ = await import(&quot;events&quot;);
  27 |  const __vi_import_1__ = await import(&quot;../../../src/auth/manager.js&quot;);
     |                                       ^
  28 |  const __vi_import_2__ = await import(&quot;../../../src/auth/types.js&quot;);
  29 |  const __vi_import_3__ = await import(&quot;../../../src/auth/tokens.js&quot;);
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/auth/unit/oauth.test.ts" timestamp="2025-07-06T18:54:21.334Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/auth/unit/oauth.test.ts" name="tests/auth/unit/oauth.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../../src/auth/oauth.js&quot; from &quot;tests/auth/unit/oauth.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../src/auth/oauth.js&quot; from &quot;tests/auth/unit/oauth.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/auth/unit/oauth.test.ts:12:0
  19 |    createDeferred: vi.fn()
  20 |  }));
  21 |  const __vi_import_0__ = await import(&quot;../../../src/auth/oauth.js&quot;);
     |                                       ^
  22 |  const __vi_import_1__ = await import(&quot;../../../src/auth/types.js&quot;);
  23 |  const __vi_import_2__ = await import(&quot;../../../src/utils/async.js&quot;);
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/auth/unit/tokens.test.ts" timestamp="2025-07-06T18:54:21.334Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/auth/unit/tokens.test.ts" name="tests/auth/unit/tokens.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../../src/auth/tokens.js&quot; from &quot;tests/auth/unit/tokens.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../src/auth/tokens.js&quot; from &quot;tests/auth/unit/tokens.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/auth/unit/tokens.test.ts:14:0
  9  |  const __vi_import_0__ = await import(&quot;path&quot;);
  10 |  const __vi_import_1__ = await import(&quot;fs/promises&quot;);
  11 |  const __vi_import_2__ = await import(&quot;../../../src/auth/tokens.js&quot;);
     |                                       ^
  12 |  /**
  13 |   * @license
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/commands/integration/command-execution-flow.test.ts" timestamp="2025-07-06T18:54:21.334Z" hostname="Seths-MacBook-Pro.local" tests="6" failures="6" errors="0" skipped="0" time="0.013610708">
        <testcase classname="tests/commands/integration/command-execution-flow.test.ts" name="Command Execution Flow Integration &gt; Command Chaining &gt; should execute commands in sequence" time="0.005361792">
            <failure message="expected undefined to be &apos;test-value&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;test-value&apos; // Object.is equality

- Expected: 
&quot;test-value&quot;

+ Received: 
undefined

 ❯ tests/commands/integration/command-execution-flow.test.ts:189:35
            </failure>
        </testcase>
        <testcase classname="tests/commands/integration/command-execution-flow.test.ts" name="Command Execution Flow Integration &gt; Command Chaining &gt; should chain commands together" time="0.001012541">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ tests/commands/integration/command-execution-flow.test.ts:208:35
            </failure>
        </testcase>
        <testcase classname="tests/commands/integration/command-execution-flow.test.ts" name="Command Execution Flow Integration &gt; Command Chaining &gt; should handle conditional command execution" time="0.000961458">
            <failure message="expected &apos;Condition was false, did not execute …&apos; to contain &apos;Condition was true&apos;" type="AssertionError">
AssertionError: expected &apos;Condition was false, did not execute …&apos; to contain &apos;Condition was true&apos;

Expected: &quot;Condition was true&quot;
Received: &quot;Condition was false, did not execute command&quot;

 ❯ tests/commands/integration/command-execution-flow.test.ts:225:34
            </failure>
        </testcase>
        <testcase classname="tests/commands/integration/command-execution-flow.test.ts" name="Command Execution Flow Integration &gt; Error Handling in Command Chains &gt; should handle errors in command chains" time="0.000867958">
            <failure message="expected [ &apos;chain&apos; ] to deeply equal [ &apos;chain&apos;, &apos;fail&apos; ]" type="AssertionError">
AssertionError: expected [ &apos;chain&apos; ] to deeply equal [ &apos;chain&apos;, &apos;fail&apos; ]

- Expected
+ Received

  [
    &quot;chain&quot;,
-   &quot;fail&quot;,
  ]

 ❯ tests/commands/integration/command-execution-flow.test.ts:257:34
            </failure>
        </testcase>
        <testcase classname="tests/commands/integration/command-execution-flow.test.ts" name="Command Execution Flow Integration &gt; Error Handling in Command Chains &gt; should handle errors in nested command chains" time="0.000467709">
            <failure message="expected [ &apos;nested_chain&apos;, &apos;chain&apos; ] to deeply equal [ &apos;nested_chain&apos;, &apos;chain&apos;, &apos;fail&apos; ]" type="AssertionError">
AssertionError: expected [ &apos;nested_chain&apos;, &apos;chain&apos; ] to deeply equal [ &apos;nested_chain&apos;, &apos;chain&apos;, &apos;fail&apos; ]

- Expected
+ Received

  [
    &quot;nested_chain&quot;,
    &quot;chain&quot;,
-   &quot;fail&quot;,
  ]

 ❯ tests/commands/integration/command-execution-flow.test.ts:291:34
            </failure>
        </testcase>
        <testcase classname="tests/commands/integration/command-execution-flow.test.ts" name="Command Execution Flow Integration &gt; Context Preservation &gt; should preserve and merge context between commands" time="0.004294375">
            <failure message="expected &quot;spy&quot; to be called 2 times, but got 3 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 2 times, but got 3 times
 ❯ tests/commands/integration/command-execution-flow.test.ts:368:29
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/commands/unit/basic-commands.test.ts" timestamp="2025-07-06T18:54:21.335Z" hostname="Seths-MacBook-Pro.local" tests="26" failures="10" errors="0" skipped="0" time="0.02810025">
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Command Registration &gt; should register all basic commands" time="0.003864625">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Command Registration &gt; should have at least the core commands" time="0.000904209">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Help Command &gt; should show general help when no command specified" time="0.00110525">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Help Command &gt; should show specific command help" time="0.000210458">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Config Command &gt; should show all config when no key specified" time="0.009879875">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ Any&lt;String&gt; ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[32m-   Any&lt;String&gt;,[90m
[31m+   undefined,[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ Any&lt;String&gt; ]

Received: 

  1st spy call:

  [
-   Any&lt;String&gt;,
+   undefined,
  ]


Number of calls: 1

 ❯ tests/commands/unit/basic-commands.test.ts:125:33
            </failure>
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Config Command &gt; should show specific config value when key provided" time="0.000286459">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Config Command &gt; should update config when key and value provided" time="0.000261083">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Login Command &gt; should login with provided token" time="0.000187917">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Login Command &gt; should prompt for token when not provided" time="0.000198625">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Login Command &gt; should handle cancelled login" time="0.000162">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Logout Command &gt; should logout successfully" time="0.000204042">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Settings Command &gt; should list all settings by default" time="0.000277834">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Settings Command &gt; should get specific setting" time="0.000134375">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Settings Command &gt; should throw error when get action missing key" time="0.000843542">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Settings Command &gt; should set specific setting" time="0.001140333">
            <failure message="Cannot read properties of undefined (reading &apos;terminal&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;terminal&apos;)
 ❯ setNestedProperty src/commands/basic-commands.ts:227:19
 ❯ Object.handler src/commands/basic-commands.ts:238:11
 ❯ tests/commands/unit/basic-commands.test.ts:252:22
            </failure>
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Settings Command &gt; should throw error when set action missing key" time="0.000188083">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Settings Command &gt; should throw error when set action missing value" time="0.000141083">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Settings Command &gt; should reset all settings" time="0.000157125">
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Settings Command &gt; should reset specific setting" time="0.000244375">
            <failure message="Cannot read properties of undefined (reading &apos;terminal&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;terminal&apos;)
 ❯ Object.handler src/commands/basic-commands.ts:256:19
 ❯ tests/commands/unit/basic-commands.test.ts:301:22
            </failure>
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Version Command &gt; should display version information" time="0.001015125">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts
 ❯ tests/commands/unit/basic-commands.test.ts:318:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts&apos; ] }
            </failure>
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Clear Command &gt; should clear console" time="0.001129375">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts
 ❯ tests/commands/unit/basic-commands.test.ts:337:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts&apos; ] }
            </failure>
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Theme Command &gt; should list available themes" time="0.001438583">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts
 ❯ tests/commands/unit/basic-commands.test.ts:352:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts&apos; ] }
            </failure>
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Theme Command &gt; should show current theme" time="0.000761417">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts
 ❯ tests/commands/unit/basic-commands.test.ts:368:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts&apos; ] }
            </failure>
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Theme Command &gt; should change theme" time="0.000967833">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts
 ❯ tests/commands/unit/basic-commands.test.ts:381:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts&apos; ] }
            </failure>
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Debug Command &gt; should toggle debug mode" time="0.000450125">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts
 ❯ tests/commands/unit/basic-commands.test.ts:404:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts&apos; ] }
            </failure>
        </testcase>
        <testcase classname="tests/commands/unit/basic-commands.test.ts" name="Basic Commands &gt; Debug Command &gt; should set specific debug level" time="0.000344917">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts
 ❯ tests/commands/unit/basic-commands.test.ts:420:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/commands/unit/basic-commands.test.ts&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/commands/unit/command-registry.test.ts" timestamp="2025-07-06T18:54:21.337Z" hostname="Seths-MacBook-Pro.local" tests="31" failures="2" errors="0" skipped="0" time="0.013670833">
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Registration &gt; should register a command successfully" time="0.001283833">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Registration &gt; should throw error for invalid command" time="0.000548292">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Registration &gt; should warn and overwrite when registering duplicate command" time="0.00014175">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Registration &gt; should register command aliases" time="0.000146375">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Registration &gt; should warn when registering duplicate alias" time="0.000106958">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Retrieval &gt; should get command by id" time="0.000131417">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Retrieval &gt; should get command by name" time="0.000135584">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Retrieval &gt; should get command by alias" time="0.000114792">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Retrieval &gt; should return undefined for non-existent command" time="0.000133">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Retrieval &gt; should list all commands" time="0.000522625">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Retrieval &gt; should list commands by category" time="0.000218125">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Retrieval &gt; should get all categories" time="0.000317458">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Unregistration &gt; should unregister a command by id" time="0.000222167">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Unregistration &gt; should unregister a command by name" time="0.000134416">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Unregistration &gt; should return false when unregistering non-existent command" time="0.000102458">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Unregistration &gt; should unregister command aliases" time="0.000101541">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Unregistration &gt; should clear all commands" time="0.000141792">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Command Execution &gt; should execute command by id" time="0.005433167">
            <failure message="expected undefined to deeply equal { success: true, …(1) }" type="AssertionError">
AssertionError: expected undefined to deeply equal { success: true, …(1) }

- Expected: 
{
  &quot;message&quot;: &quot;Executed with args&quot;,
  &quot;success&quot;: true,
}

+ Received: 
undefined

 ❯ tests/commands/unit/command-registry.test.ts:237:22
            </failure>
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Command Execution &gt; should throw error when executing non-existent command" time="0.000535875">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Command Execution &gt; should execute command string" time="0.000531875">
            <failure message="expected undefined to deeply equal { success: true, …(1) }" type="AssertionError">
AssertionError: expected undefined to deeply equal { success: true, …(1) }

- Expected: 
{
  &quot;message&quot;: &quot;Executed with args&quot;,
  &quot;success&quot;: true,
}

+ Received: 
undefined

 ❯ tests/commands/unit/command-registry.test.ts:257:22
            </failure>
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Suggestions &gt; should get command suggestions based on prefix" time="0.000263667">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Suggestions &gt; should include aliases in suggestions" time="0.00013275">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Suggestions &gt; should return empty array for no matches" time="0.00012225">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Legacy Compatibility &gt; should use registerCommand alias" time="0.000103459">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Legacy Compatibility &gt; should use getAllCommands alias" time="0.000134209">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Legacy Compatibility &gt; should use findCommand alias" time="0.000113208">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Legacy Compatibility &gt; should use unregisterCommand alias" time="0.000128375">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="CommandRegistry &gt; Legacy Compatibility &gt; should use getCommandsByCategory alias" time="0.000147875">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="Command Help &gt; should generate help text for a simple command" time="0.000198958">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="Command Help &gt; should include parameters in help text" time="0.000215875">
        </testcase>
        <testcase classname="tests/commands/unit/command-registry.test.ts" name="Command Help &gt; should use custom usage if provided" time="0.00010175">
        </testcase>
    </testsuite>
    <testsuite name="tests/commands/unit/execute-command.test.ts" timestamp="2025-07-06T18:54:21.338Z" hostname="Seths-MacBook-Pro.local" tests="6" failures="3" errors="0" skipped="0" time="0.006588083">
        <testcase classname="tests/commands/unit/execute-command.test.ts" name="executeCommand &gt; should execute command successfully" time="0.004747791">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ tests/commands/unit/execute-command.test.ts:93:28
            </failure>
        </testcase>
        <testcase classname="tests/commands/unit/execute-command.test.ts" name="executeCommand &gt; should handle command execution errors" time="0.000290458">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ tests/commands/unit/execute-command.test.ts:104:28
            </failure>
        </testcase>
        <testcase classname="tests/commands/unit/execute-command.test.ts" name="executeCommand &gt; should handle command failure results" time="0.000186166">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ tests/commands/unit/execute-command.test.ts:115:28
            </failure>
        </testcase>
        <testcase classname="tests/commands/unit/execute-command.test.ts" name="executeCommand &gt; should handle non-existent command" time="0.00028875">
        </testcase>
        <testcase classname="tests/commands/unit/execute-command.test.ts" name="executeCommand &gt; should pass context to command handler" time="0.000251459">
        </testcase>
        <testcase classname="tests/commands/unit/execute-command.test.ts" name="executeCommand &gt; should create default context if not provided" time="0.00015475">
        </testcase>
    </testsuite>
    <testsuite name="tests/config/integration/performance-optimizations.test.ts" timestamp="2025-07-06T18:54:21.339Z" hostname="Seths-MacBook-Pro.local" tests="12" failures="5" errors="0" skipped="0" time="0.017672959">
        <testcase classname="tests/config/integration/performance-optimizations.test.ts" name="Performance Optimizations Integration &gt; applyPerformanceOptimizations &gt; should set NODE_OPTIONS with memory limits" time="0.001315833">
        </testcase>
        <testcase classname="tests/config/integration/performance-optimizations.test.ts" name="Performance Optimizations Integration &gt; applyPerformanceOptimizations &gt; should add aggressive GC flags when enabled" time="0.000263042">
        </testcase>
        <testcase classname="tests/config/integration/performance-optimizations.test.ts" name="Performance Optimizations Integration &gt; applyPerformanceOptimizations &gt; should not add GC flags when aggressive GC is disabled" time="0.005715958">
            <failure message="expected &apos;--max-old-space-size=50 --expose-gc -…&apos; not to contain &apos;--optimize-for-size&apos;" type="AssertionError">
AssertionError: expected &apos;--max-old-space-size=50 --expose-gc -…&apos; not to contain &apos;--optimize-for-size&apos;

Expected: &quot;--optimize-for-size&quot;
Received: &quot;--max-old-space-size=50 --expose-gc --optimize-for-size&quot;

 ❯ tests/config/integration/performance-optimizations.test.ts:113:44
            </failure>
        </testcase>
        <testcase classname="tests/config/integration/performance-optimizations.test.ts" name="Performance Optimizations Integration &gt; applyPerformanceOptimizations &gt; should enable memory compression when specified" time="0.000214458">
        </testcase>
        <testcase classname="tests/config/integration/performance-optimizations.test.ts" name="Performance Optimizations Integration &gt; applyPerformanceOptimizations &gt; should handle existing NODE_OPTIONS correctly" time="0.001283125">
            <failure message="expected &apos;--max-old-space-size=100 --optimize-f…&apos; to contain &apos;--inspect&apos;" type="AssertionError">
AssertionError: expected &apos;--max-old-space-size=100 --optimize-f…&apos; to contain &apos;--inspect&apos;

Expected: &quot;--inspect&quot;
Received: &quot;--max-old-space-size=100 --optimize-for-size --memory-reducer --no-lazy --max-semi-space-size=2 --max-heap-size=64 --expose-gc --optimize-for-size&quot;

 ❯ tests/config/integration/performance-optimizations.test.ts:140:40
            </failure>
        </testcase>
        <testcase classname="tests/config/integration/performance-optimizations.test.ts" name="Performance Optimizations Integration &gt; MemoryManager &gt; should start and stop cleanup interval" time="0.001550625">
            <failure message="expected &quot;spy&quot; to be called 1 times, but got 0 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 1 times, but got 0 times
 ❯ tests/config/integration/performance-optimizations.test.ts:164:33
            </failure>
        </testcase>
        <testcase classname="tests/config/integration/performance-optimizations.test.ts" name="Performance Optimizations Integration &gt; MemoryManager &gt; should perform cleanup when memory usage exceeds threshold" time="0.000450083">
        </testcase>
        <testcase classname="tests/config/integration/performance-optimizations.test.ts" name="Performance Optimizations Integration &gt; MemoryManager &gt; should not perform cleanup when memory usage is below threshold" time="0.000217125">
        </testcase>
        <testcase classname="tests/config/integration/performance-optimizations.test.ts" name="Performance Optimizations Integration &gt; MemoryManager &gt; should get current memory usage" time="0.000233292">
        </testcase>
        <testcase classname="tests/config/integration/performance-optimizations.test.ts" name="Performance Optimizations Integration &gt; Integration with CLI &gt; should apply optimizations at startup" time="0.000280291">
            <failure message="Cannot read properties of undefined (reading &apos;resetModules&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;resetModules&apos;)
 ❯ tests/config/integration/performance-optimizations.test.ts:267:12
            </failure>
        </testcase>
        <testcase classname="tests/config/integration/performance-optimizations.test.ts" name="Performance Optimizations Integration &gt; Integration with Performance Monitoring &gt; should monitor and auto-tune based on metrics" time="0.003387333">
            <failure message="Timers are not mocked. Try calling &quot;vi.useFakeTimers()&quot; first." type="Error">
Error: Timers are not mocked. Try calling &quot;vi.useFakeTimers()&quot; first.
 ❯ tests/config/integration/performance-optimizations.test.ts:363:10
            </failure>
        </testcase>
        <testcase classname="tests/config/integration/performance-optimizations.test.ts" name="Performance Optimizations Integration &gt; Integration with Performance Monitoring &gt; should calculate and track performance metrics" time="0.001707667">
        </testcase>
    </testsuite>
    <testsuite name="tests/config/property/performance-config-validation.test.ts" timestamp="2025-07-06T18:54:21.340Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/config/property/performance-config-validation.test.ts" name="tests/config/property/performance-config-validation.test.ts" time="0">
            <failure message="Failed to resolve import &quot;fast-check&quot; from &quot;tests/config/property/performance-config-validation.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;fast-check&quot; from &quot;tests/config/property/performance-config-validation.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/config/property/performance-config-validation.test.ts:15:0
  8  |    }
  9  |  }));
  10 |  const __vi_import_0__ = await import(&quot;fast-check&quot;);
     |                                       ^
  11 |  const __vi_import_1__ = await import(&quot;../../../src/config/performance-config.js&quot;);
  12 |  /**
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/core/integration/tool-system-integration.test.ts" timestamp="2025-07-06T18:54:21.340Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/core/integration/tool-system-integration.test.ts" name="tests/core/integration/tool-system-integration.test.ts" time="0">
            <system-err>
Failed to read project tool directory ./tools: Error: ENOENT: no such file or directory, scandir &apos;./tools&apos;
[90m    at Object.readdir (node:internal/fs/promises:949:18)[39m
    at ToolDiscoveryServiceImpl.discoverProjectTools [90m(/Users/sethford/Downloads/Projects/vibex/[39msrc/core/domain/tool/registry/tool-discovery.ts:113:23[90m)[39m
    at ToolDiscoveryServiceImpl.refreshAllTools [90m(/Users/sethford/Downloads/Projects/vibex/[39msrc/core/domain/tool/registry/tool-discovery.ts:171:7[90m)[39m {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;scandir&apos;[39m,
  path: [32m&apos;./tools&apos;[39m
}

            </system-err>
            <failure message="Failed to resolve import &quot;../../domain/tool/base-tool&quot; from &quot;src/core/adapters/tools/ripgrep-adapter.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../domain/tool/base-tool&quot; from &quot;src/core/adapters/tools/ripgrep-adapter.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/src/core/adapters/tools/ripgrep-adapter.ts:7:25
  4  |   * SPDX-License-Identifier: MIT
  5  |   */
  6  |  import { BaseTool } from &quot;../../domain/tool/base-tool&quot;;
     |                            ^
  7  |  import { createRipgrepTool } from &quot;../../../tools/ripgrep&quot;;
  8  |  export class RipgrepTool extends BaseTool {
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/config/unit/config-functionality.test.ts" timestamp="2025-07-06T18:54:21.340Z" hostname="Seths-MacBook-Pro.local" tests="5" failures="0" errors="0" skipped="0" time="0.003220084">
        <testcase classname="tests/config/unit/config-functionality.test.ts" name="Config Functionality &gt; should verify config system is working" time="0.001419042">
        </testcase>
        <testcase classname="tests/config/unit/config-functionality.test.ts" name="Config Functionality &gt; should handle configuration defaults correctly" time="0.000218625">
        </testcase>
        <testcase classname="tests/config/unit/config-functionality.test.ts" name="Config Functionality &gt; should handle configuration merging correctly" time="0.0002255">
        </testcase>
        <testcase classname="tests/config/unit/config-functionality.test.ts" name="Config Functionality &gt; should validate Claude 4 model configuration" time="0.000160292">
        </testcase>
        <testcase classname="tests/config/unit/config-functionality.test.ts" name="Config Functionality &gt; should handle log level conversion" time="0.000205625">
        </testcase>
    </testsuite>
    <testsuite name="tests/config/unit/performance-config-manager.test.ts" timestamp="2025-07-06T18:54:21.340Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/config/unit/performance-config-manager.test.ts" name="tests/config/unit/performance-config-manager.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/config/performance-config.ts:19:1

Caused by: Caused by: TypeError: Cannot read properties of undefined (reading &apos;requireActual&apos;)
 ❯ tests/config/unit/performance-config-manager.test.ts:38:29
 ❯ src/config/performance-config.ts:19:1
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/config/unit/performance-config-schemas.test.ts" timestamp="2025-07-06T18:54:21.341Z" hostname="Seths-MacBook-Pro.local" tests="27" failures="1" errors="0" skipped="0" time="0.012975417">
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; cachingConfigSchema &gt; should validate with defaults" time="0.001491458">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; cachingConfigSchema &gt; should validate with custom values" time="0.00017425">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; cachingConfigSchema &gt; should reject invalid values" time="0.000810542">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; parallelExecutionConfigSchema &gt; should validate with defaults" time="0.000151833">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; parallelExecutionConfigSchema &gt; should validate with custom values" time="0.000120958">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; parallelExecutionConfigSchema &gt; should reject invalid values" time="0.000162833">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; streamingConfigSchema &gt; should validate with defaults" time="0.000111459">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; streamingConfigSchema &gt; should validate with custom values" time="0.000092958">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; streamingConfigSchema &gt; should reject invalid values" time="0.000151125">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; memoryOptimizationConfigSchema &gt; should validate with defaults" time="0.000118041">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; memoryOptimizationConfigSchema &gt; should validate with custom values" time="0.000106792">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; memoryOptimizationConfigSchema &gt; should reject invalid values" time="0.000144875">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; aiOptimizationConfigSchema &gt; should validate with defaults" time="0.000118333">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; aiOptimizationConfigSchema &gt; should validate with custom values" time="0.000113209">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; aiOptimizationConfigSchema &gt; should reject invalid values" time="0.000141458">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; contextOptimizationConfigSchema &gt; should validate with defaults" time="0.000121708">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; contextOptimizationConfigSchema &gt; should validate with custom values" time="0.00009525">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; contextOptimizationConfigSchema &gt; should reject invalid values" time="0.000158625">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; monitoringConfigSchema &gt; should validate with defaults" time="0.000124042">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; monitoringConfigSchema &gt; should validate with custom values" time="0.000111625">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; monitoringConfigSchema &gt; should reject invalid values" time="0.00014475">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; performanceConfigSchema (main schema) &gt; should validate with defaults" time="0.001504125">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; performanceConfigSchema (main schema) &gt; should validate with custom values" time="0.001053084">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; performanceConfigSchema (main schema) &gt; should reject invalid performance level" time="0.000330792">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; performanceConfigSchema (main schema) &gt; should reject invalid target values" time="0.000245209">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; Performance benchmarks &gt; GEMINI_CLI_BENCHMARKS should have the correct structure" time="0.000205541">
        </testcase>
        <testcase classname="tests/config/unit/performance-config-schemas.test.ts" name="Performance Config Schemas &gt; Performance benchmarks &gt; VIBEX_PERFORMANCE_TARGETS should have 6x better values than Gemini" time="0.004027583">
            <failure message="expected 198 to be close to 200, received difference is 2, but expected 0.005" type="AssertionError">
AssertionError: expected 198 to be close to 200, received difference is 2, but expected 0.005
 ❯ tests/config/unit/performance-config-schemas.test.ts:545:59
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/config/unit/schema-validation.test.ts" timestamp="2025-07-06T18:54:21.342Z" hostname="Seths-MacBook-Pro.local" tests="8" failures="0" errors="0" skipped="0" time="0.010177">
        <testcase classname="tests/config/unit/schema-validation.test.ts" name="Config Schema Validation &gt; AppConfigSchema &gt; should validate default configuration" time="0.003519792">
        </testcase>
        <testcase classname="tests/config/unit/schema-validation.test.ts" name="Config Schema Validation &gt; AppConfigSchema &gt; should validate partial configuration" time="0.000928708">
        </testcase>
        <testcase classname="tests/config/unit/schema-validation.test.ts" name="Config Schema Validation &gt; AppConfigSchema &gt; should reject invalid configuration values" time="0.0019075">
        </testcase>
        <testcase classname="tests/config/unit/schema-validation.test.ts" name="Config Schema Validation &gt; AppConfigSchema &gt; should allow additional unknown properties" time="0.0005765">
        </testcase>
        <testcase classname="tests/config/unit/schema-validation.test.ts" name="Config Schema Validation &gt; SchemaValidator &gt; should validate valid data" time="0.001409">
        </testcase>
        <testcase classname="tests/config/unit/schema-validation.test.ts" name="Config Schema Validation &gt; SchemaValidator &gt; should reject invalid data" time="0.00030275">
        </testcase>
        <testcase classname="tests/config/unit/schema-validation.test.ts" name="Config Schema Validation &gt; SchemaValidator &gt; should handle type mismatches" time="0.000212917">
        </testcase>
        <testcase classname="tests/config/unit/schema-validation.test.ts" name="Config Schema Validation &gt; SchemaValidator &gt; should validate data with optional fields" time="0.000152">
        </testcase>
    </testsuite>
    <testsuite name="tests/errors/integration/errors-integration.test.ts" timestamp="2025-07-06T18:54:21.342Z" hostname="Seths-MacBook-Pro.local" tests="6" failures="1" errors="0" skipped="0" time="0.009953291">
        <testcase classname="tests/errors/integration/errors-integration.test.ts" name="Error System Integration &gt; End-to-end error flow &gt; should correctly process network errors through the system" time="0.007426041">
            <system-err>
Caught object: {
  &quot;cause&quot;: {},
  &quot;category&quot;: 2,
  &quot;level&quot;: 1,
  &quot;resolution&quot;: &quot;Network connection issue. Check your internet connection.&quot;,
  &quot;details&quot;: {},
  &quot;name&quot;: &quot;UserError&quot;
}

            </system-err>
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/integration/errors-integration.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/integration/errors-integration.test.ts
 ❯ tests/errors/integration/errors-integration.test.ts:78:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/errors/integration/errors-integration.test.ts&apos; ] }
            </failure>
        </testcase>
        <testcase classname="tests/errors/integration/errors-integration.test.ts" name="Error System Integration &gt; End-to-end error flow &gt; should correctly process authentication errors through the system" time="0.000544958">
            <system-err>
Caught object: {
  &quot;cause&quot;: {},
  &quot;category&quot;: 1,
  &quot;level&quot;: 1,
  &quot;resolution&quot;: &quot;Check your API key and authentication settings.&quot;,
  &quot;details&quot;: {},
  &quot;name&quot;: &quot;AuthenticationError&quot;
}

            </system-err>
        </testcase>
        <testcase classname="tests/errors/integration/errors-integration.test.ts" name="Error System Integration &gt; End-to-end error flow &gt; should handle unknown errors properly through the system" time="0.000504125">
            <system-err>
Caught object: {
  &quot;cause&quot;: {
    &quot;customErrorType&quot;: true,
    &quot;reason&quot;: &quot;Something went wrong&quot;
  },
  &quot;category&quot;: 8,
  &quot;level&quot;: 2,
  &quot;resolution&quot;: [
    &quot;Try the request again.&quot;,
    &quot;Check your input for any issues.&quot;,
    &quot;Consult the API documentation for proper usage.&quot;
  ],
  &quot;details&quot;: {},
  &quot;name&quot;: &quot;UserError&quot;
}

            </system-err>
        </testcase>
        <testcase classname="tests/errors/integration/errors-integration.test.ts" name="Error System Integration &gt; End-to-end error flow &gt; should handle errors with resolution steps properly" time="0.00024625">
            <system-err>
Caught object: {
  &quot;category&quot;: 2,
  &quot;level&quot;: 2,
  &quot;resolution&quot;: [
    &quot;Check your internet connection.&quot;,
    &quot;Verify that the API service is accessible from your network.&quot;,
    &quot;Try again in a few moments as the issue might be temporary.&quot;
  ],
  &quot;details&quot;: {},
  &quot;name&quot;: &quot;NetworkError&quot;
}

            </system-err>
        </testcase>
        <testcase classname="tests/errors/integration/errors-integration.test.ts" name="Error System Integration &gt; Error transformation flow &gt; should transform API errors to user-friendly messages" time="0.000206417">
            <system-err>
Caught object: {
  &quot;category&quot;: 1,
  &quot;level&quot;: 1,
  &quot;resolution&quot;: &quot;Check your API key and authentication settings.&quot;,
  &quot;details&quot;: {
    &quot;status&quot;: 401,
    &quot;errorCode&quot;: &quot;invalid_api_key&quot;
  },
  &quot;name&quot;: &quot;UserError&quot;
}

            </system-err>
        </testcase>
        <testcase classname="tests/errors/integration/errors-integration.test.ts" name="Error System Integration &gt; Error transformation flow &gt; should handle error hierarchies correctly" time="0.000193917">
            <system-err>
Caught object: {
  &quot;cause&quot;: {
    &quot;cause&quot;: {},
    &quot;category&quot;: 2,
    &quot;level&quot;: 2,
    &quot;details&quot;: {},
    &quot;name&quot;: &quot;NetworkError&quot;
  },
  &quot;category&quot;: 0,
  &quot;level&quot;: 0,
  &quot;resolution&quot;: &quot;Please try again later&quot;,
  &quot;details&quot;: {},
  &quot;name&quot;: &quot;UserError&quot;
}

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="tests/errors/unit/analyzer.test.ts" timestamp="2025-07-06T18:54:21.343Z" hostname="Seths-MacBook-Pro.local" tests="15" failures="0" errors="0" skipped="0" time="0.005673833">
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; analyzeError function &gt; should categorize network errors correctly" time="0.00194225">
        </testcase>
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; analyzeError function &gt; should categorize rate limit errors correctly" time="0.000440625">
        </testcase>
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; analyzeError function &gt; should categorize authentication errors correctly" time="0.000170625">
        </testcase>
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; analyzeError function &gt; should categorize server errors correctly" time="0.000193459">
        </testcase>
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; analyzeError function &gt; should categorize timeout errors correctly" time="0.000216083">
        </testcase>
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; analyzeError function &gt; should categorize content filtering errors correctly" time="0.00034375">
        </testcase>
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; analyzeError function &gt; should handle complex error objects with nested details" time="0.000184792">
        </testcase>
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; analyzeError function &gt; should handle Anthropic-specific error patterns" time="0.000125042">
        </testcase>
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; analyzeError function &gt; should default to UNKNOWN category for unrecognized errors" time="0.000256459">
        </testcase>
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; analyzeError function &gt; should handle non-error values gracefully" time="0.000132084">
        </testcase>
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; getResolutionSteps function &gt; should return resolution steps for various categories" time="0.000266958">
        </testcase>
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; getResolutionSteps function &gt; should return default steps for unknown categories" time="0.000107083">
        </testcase>
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; getResolutionSteps function &gt; should provide specific resolution steps for authentication errors" time="0.000076083">
        </testcase>
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; getResolutionSteps function &gt; should provide specific resolution steps for network errors" time="0.0000725">
        </testcase>
        <testcase classname="tests/errors/unit/analyzer.test.ts" name="Error Analyzer &gt; getResolutionSteps function &gt; should provide specific resolution steps for rate limit errors" time="0.000071375">
        </testcase>
    </testsuite>
    <testsuite name="tests/errors/unit/console.test.ts" timestamp="2025-07-06T18:54:21.344Z" hostname="Seths-MacBook-Pro.local" tests="10" failures="0" errors="0" skipped="0" time="0.003802334">
        <testcase classname="tests/errors/unit/console.test.ts" name="Console Error Handling &gt; extractErrorFromArgs function &gt; should return null for empty arguments" time="0.001256583">
        </testcase>
        <testcase classname="tests/errors/unit/console.test.ts" name="Console Error Handling &gt; extractErrorFromArgs function &gt; should return Error object if present in arguments" time="0.000221166">
        </testcase>
        <testcase classname="tests/errors/unit/console.test.ts" name="Console Error Handling &gt; extractErrorFromArgs function &gt; should prefer first Error object if multiple are present" time="0.000116625">
        </testcase>
        <testcase classname="tests/errors/unit/console.test.ts" name="Console Error Handling &gt; extractErrorFromArgs function &gt; should convert string arguments to string" time="0.000119167">
        </testcase>
        <testcase classname="tests/errors/unit/console.test.ts" name="Console Error Handling &gt; extractErrorFromArgs function &gt; should handle null and undefined arguments" time="0.000094083">
        </testcase>
        <testcase classname="tests/errors/unit/console.test.ts" name="Console Error Handling &gt; extractErrorFromArgs function &gt; should convert objects to JSON string" time="0.000093667">
        </testcase>
        <testcase classname="tests/errors/unit/console.test.ts" name="Console Error Handling &gt; extractErrorFromArgs function &gt; should handle objects that cannot be stringified" time="0.000232542">
        </testcase>
        <testcase classname="tests/errors/unit/console.test.ts" name="Console Error Handling &gt; extractErrorFromArgs function &gt; should handle mixed argument types" time="0.000135292">
        </testcase>
        <testcase classname="tests/errors/unit/console.test.ts" name="Console Error Handling &gt; extractErrorFromArgs function &gt; should handle errors during processing" time="0.000279333">
        </testcase>
        <testcase classname="tests/errors/unit/console.test.ts" name="Console Error Handling &gt; extractErrorFromArgs function &gt; should handle errors during the entire extraction process" time="0.000256167">
        </testcase>
    </testsuite>
    <testsuite name="tests/errors/unit/formatter.test.ts" timestamp="2025-07-06T18:54:21.344Z" hostname="Seths-MacBook-Pro.local" tests="20" failures="1" errors="0" skipped="0" time="0.015083917">
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; createUserError &gt; should create a UserError with default options" time="0.009972416">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/formatter.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/formatter.test.ts
 ❯ tests/errors/unit/formatter.test.ts:53:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/errors/unit/formatter.test.ts&apos; ] }
            </failure>
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; createUserError &gt; should create a UserError with custom options" time="0.000722">
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; createUserError &gt; should create a UserError with cause" time="0.000138417">
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; formatErrorForDisplay &gt; should format UserError properly" time="0.000887458">
            <system-err>
Caught object: {
  &quot;category&quot;: 1,
  &quot;level&quot;: 2,
  &quot;resolution&quot;: [
    &quot;Check your API key&quot;,
    &quot;Verify your credentials&quot;
  ],
  &quot;details&quot;: {},
  &quot;name&quot;: &quot;UserError&quot;
}

            </system-err>
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; formatErrorForDisplay &gt; should format UserError with details" time="0.0002105">
            <system-err>
Caught object: {
  &quot;category&quot;: 8,
  &quot;level&quot;: 2,
  &quot;details&quot;: {
    &quot;statusCode&quot;: 401,
    &quot;timestamp&quot;: &quot;2023-01-01&quot;
  },
  &quot;name&quot;: &quot;UserError&quot;
}

            </system-err>
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; formatErrorForDisplay &gt; should format standard Error properly" time="0.000125">
            <system-err>
Caught object: {}

            </system-err>
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; formatErrorForDisplay &gt; should include stack trace when DEBUG is true" time="0.000987334">
            <system-err>
Caught object: {}

            </system-err>
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; formatErrorForDisplay &gt; should handle non-Error objects" time="0.00020775">
            <system-err>
Caught object: {
  &quot;message&quot;: &quot;Object with message&quot;
}

            </system-err>
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; ensureUserError &gt; should return the error if already a UserError" time="0.000116542">
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; ensureUserError &gt; should convert Error to UserError" time="0.000111583">
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; ensureUserError &gt; should convert string to UserError" time="0.000075708">
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; ensureUserError &gt; should use default message for non-string/error inputs" time="0.000084916">
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; ensureUserError &gt; should pass options to created UserError" time="0.000111625">
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; getErrorCategoryName &gt; should return correct category names" time="0.000101583">
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; getErrorCategoryName &gt; should handle invalid categories" time="0.000048833">
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; getErrorLevelName &gt; should return correct level names" time="0.00008075">
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; getErrorLevelName &gt; should handle invalid levels" time="0.0000515">
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; getErrorDetails &gt; should return formatted UserError details" time="0.000077833">
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; getErrorDetails &gt; should return formatted standard Error details" time="0.000055417">
        </testcase>
        <testcase classname="tests/errors/unit/formatter.test.ts" name="Error Formatter &gt; getErrorDetails &gt; should handle non-error values" time="0.0000445">
        </testcase>
    </testsuite>
    <testsuite name="tests/errors/unit/index.test.ts" timestamp="2025-07-06T18:54:21.345Z" hostname="Seths-MacBook-Pro.local" tests="6" failures="0" errors="0" skipped="0" time="0.007157333">
        <testcase classname="tests/errors/unit/index.test.ts" name="Error Module Exports &gt; Custom Error Classes &gt; FileSystemError should extend UserError with proper category" time="0.001646167">
        </testcase>
        <testcase classname="tests/errors/unit/index.test.ts" name="Error Module Exports &gt; Custom Error Classes &gt; NetworkError should extend UserError with proper category" time="0.000243875">
        </testcase>
        <testcase classname="tests/errors/unit/index.test.ts" name="Error Module Exports &gt; Custom Error Classes &gt; AuthenticationError should extend UserError with proper category" time="0.000200291">
        </testcase>
        <testcase classname="tests/errors/unit/index.test.ts" name="Error Module Exports &gt; Custom Error Classes &gt; AIError should extend UserError with proper category" time="0.000199958">
        </testcase>
        <testcase classname="tests/errors/unit/index.test.ts" name="Error Module Exports &gt; Custom Error Classes &gt; Custom errors should accept additional options" time="0.00066875">
        </testcase>
        <testcase classname="tests/errors/unit/index.test.ts" name="Error Module Exports &gt; Custom Error Classes &gt; Custom errors should preserve stack trace" time="0.003063417">
        </testcase>
    </testsuite>
    <testsuite name="tests/errors/unit/sentry.test.ts" timestamp="2025-07-06T18:54:21.346Z" hostname="Seths-MacBook-Pro.local" tests="7" failures="7" errors="0" skipped="0" time="0.010661458">
        <testcase classname="tests/errors/unit/sentry.test.ts" name="Sentry Error Reporting &gt; reportErrorToSentry &gt; should log error message for Error objects" time="0.004564208">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts
 ❯ tests/errors/unit/sentry.test.ts:34:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts&apos; ] }
            </failure>
        </testcase>
        <testcase classname="tests/errors/unit/sentry.test.ts" name="Sentry Error Reporting &gt; reportErrorToSentry &gt; should log string representation for non-Error objects" time="0.001008625">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts
 ❯ tests/errors/unit/sentry.test.ts:43:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts&apos; ] }
            </failure>
        </testcase>
        <testcase classname="tests/errors/unit/sentry.test.ts" name="Sentry Error Reporting &gt; reportErrorToSentry &gt; should include level in debug log if provided" time="0.00071025">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts
 ❯ tests/errors/unit/sentry.test.ts:52:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts&apos; ] }
            </failure>
        </testcase>
        <testcase classname="tests/errors/unit/sentry.test.ts" name="Sentry Error Reporting &gt; reportErrorToSentry &gt; should include tags in debug log if provided" time="0.0006175">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts
 ❯ tests/errors/unit/sentry.test.ts:66:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts&apos; ] }
            </failure>
        </testcase>
        <testcase classname="tests/errors/unit/sentry.test.ts" name="Sentry Error Reporting &gt; reportErrorToSentry &gt; should sanitize user information in debug log" time="0.000884291">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts
 ❯ tests/errors/unit/sentry.test.ts:81:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts&apos; ] }
            </failure>
        </testcase>
        <testcase classname="tests/errors/unit/sentry.test.ts" name="Sentry Error Reporting &gt; reportErrorToSentry &gt; should handle undefined user properties" time="0.001200208">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts
 ❯ tests/errors/unit/sentry.test.ts:102:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts&apos; ] }
            </failure>
        </testcase>
        <testcase classname="tests/errors/unit/sentry.test.ts" name="Sentry Error Reporting &gt; reportErrorToSentry &gt; should handle complex error objects" time="0.000795375">
            <failure message="Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts" type="Error">
Error: Cannot find module &apos;../../../src/utils/logger.js&apos;
Require stack:
- /Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts
 ❯ tests/errors/unit/sentry.test.ts:126:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/Users/sethford/Downloads/Projects/vibex/tests/errors/unit/sentry.test.ts&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/fileops/unit/file-operations-manager.test.ts" timestamp="2025-07-06T18:54:21.346Z" hostname="Seths-MacBook-Pro.local" tests="33" failures="8" errors="0" skipped="0" time="0.016144792">
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; initialization &gt; should initialize successfully" time="0.001672125">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; initialization &gt; should throw if workspace is not a directory" time="0.005568166">
            <failure message="expected [Function] to throw error including &apos;Workspace path is not a directory&apos; but got &apos;Failed to initialize file operations&apos;" type="AssertionError">
AssertionError: expected [Function] to throw error including &apos;Workspace path is not a directory&apos; but got &apos;Failed to initialize file operations&apos;

Expected: &quot;Workspace path is not a directory&quot;
Received: &quot;Failed to initialize file operations&quot;

 ❯ tests/fileops/unit/file-operations-manager.test.ts:106:7
            </failure>
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; initialization &gt; should throw if workspace does not exist" time="0.000294334">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; initialization &gt; initFileOperations should return a manager even if initialization fails" time="0.000228083">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; path operations &gt; getAbsolutePath should resolve against workspace path" time="0.000179875">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; path operations &gt; getAbsolutePath should prevent directory traversal" time="0.000187625">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; path operations &gt; getRelativePath should return path relative to workspace" time="0.00015125">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; readFile &gt; should read file successfully" time="0.0009585">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ tests/fileops/unit/file-operations-manager.test.ts:156:30
            </failure>
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; readFile &gt; should respect sandbox permissions" time="0.000193917">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; readFile &gt; should handle non-existent files" time="0.000346042">
            <failure message="expected &apos;Access denied by sandbox: missing.txt&apos; to contain &apos;File not found&apos;" type="AssertionError">
AssertionError: expected &apos;Access denied by sandbox: missing.txt&apos; to contain &apos;File not found&apos;

Expected: &quot;File not found&quot;
Received: &quot;Access denied by sandbox: missing.txt&quot;

 ❯ tests/fileops/unit/file-operations-manager.test.ts:184:37
            </failure>
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; readFile &gt; should handle permission errors" time="0.000279541">
            <failure message="expected &apos;Access denied by sandbox: noaccess.txt&apos; to contain &apos;Permission denied&apos;" type="AssertionError">
AssertionError: expected &apos;Access denied by sandbox: noaccess.txt&apos; to contain &apos;Permission denied&apos;

Expected: &quot;Permission denied&quot;
Received: &quot;Access denied by sandbox: noaccess.txt&quot;

 ❯ tests/fileops/unit/file-operations-manager.test.ts:197:37
            </failure>
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; readFile &gt; should validate file size" time="0.000293959">
            <failure message="expected &apos;Access denied by sandbox: large.txt&apos; to contain &apos;File too large to read&apos;" type="AssertionError">
AssertionError: expected &apos;Access denied by sandbox: large.txt&apos; to contain &apos;File too large to read&apos;

Expected: &quot;File too large to read&quot;
Received: &quot;Access denied by sandbox: large.txt&quot;

 ❯ tests/fileops/unit/file-operations-manager.test.ts:209:37
            </failure>
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; readFile &gt; should validate path is a file" time="0.000286">
            <failure message="expected &apos;Access denied by sandbox: directory/&apos; to contain &apos;Not a file&apos;" type="AssertionError">
AssertionError: expected &apos;Access denied by sandbox: directory/&apos; to contain &apos;Not a file&apos;

Expected: &quot;Not a file&quot;
Received: &quot;Access denied by sandbox: directory/&quot;

 ❯ tests/fileops/unit/file-operations-manager.test.ts:222:37
            </failure>
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; writeFile &gt; should write file successfully" time="0.000254667">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; writeFile &gt; should create directories if requested" time="0.000339">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; writeFile &gt; should respect write permissions from sandbox" time="0.000138375">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; writeFile &gt; should respect write permissions from config" time="0.000264084">
            <failure message="expected true to be false // Object.is equality" type="AssertionError">
AssertionError: expected true to be false // Object.is equality

- Expected
+ Received

- false
+ true

 ❯ tests/fileops/unit/file-operations-manager.test.ts:290:30
            </failure>
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; writeFile &gt; should handle directory not found error" time="0.000434167">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; deleteFile &gt; should delete file successfully" time="0.00023525">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; deleteFile &gt; should verify path is a file" time="0.000174125">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; deleteFile &gt; should handle file not found" time="0.000146584">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; fileExists &gt; should return true for existing files" time="0.000154625">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; fileExists &gt; should return false for directories" time="0.000109334">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; fileExists &gt; should return false for non-existent files" time="0.000107459">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; createDirectory &gt; should create directory successfully" time="0.000240916">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; createDirectory &gt; should handle already existing directory" time="0.000139375">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; listDirectory &gt; should list directory contents successfully" time="0.000216625">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; listDirectory &gt; should verify path is a directory" time="0.000148375">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; listDirectory &gt; should handle directory not found" time="0.000133292">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; generateDiff &gt; should generate a simple diff" time="0.000184125">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; generateDiff &gt; should handle addition of lines" time="0.000130375">
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; generateDiff &gt; should handle removal of lines" time="0.000879209">
            <failure message="expected &apos;  line1\n- line2\n+ line4\n- line3\n-…&apos; to contain &apos;  line4&apos;" type="AssertionError">
AssertionError: expected &apos;  line1\n- line2\n+ line4\n- line3\n-…&apos; to contain &apos;  line4&apos;

- Expected
+ Received

-   line4
+   line1
+ - line2
+ + line4
+ - line3
+ - line4

 ❯ tests/fileops/unit/file-operations-manager.test.ts:491:20
            </failure>
        </testcase>
        <testcase classname="tests/fileops/unit/file-operations-manager.test.ts" name="FileOperationsManager &gt; applyPatch &gt; should apply patch by writing file content" time="0.00024025">
        </testcase>
    </testsuite>
    <testsuite name="tests/fs/unit/operations.test.ts" timestamp="2025-07-06T18:54:21.348Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/fs/unit/operations.test.ts" name="tests/fs/unit/operations.test.ts" time="0">
            <failure message="[vitest] No &quot;default&quot; export is defined on the &quot;fs&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;default&quot; export is defined on the &quot;fs&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;fs&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ src/fs/operations.ts:10:89
 ❯ tests/fs/unit/operations.test.ts:16:1
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/src/errors/analyzer.test.ts" timestamp="2025-07-06T18:54:21.349Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/src/errors/analyzer.test.ts" name="tests/src/errors/analyzer.test.ts" time="0">
            <failure message="Failed to resolve import &quot;./analyzer.js&quot; from &quot;tests/src/errors/analyzer.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;./analyzer.js&quot; from &quot;tests/src/errors/analyzer.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/src/errors/analyzer.test.ts:14:49
  5  |   */
  6  |  import { expect, test, describe } from &quot;vitest&quot;;
  7  |  import { analyzeError, getResolutionSteps } from &quot;./analyzer.js&quot;;
     |                                                    ^
  8  |  import { ErrorCategory, ErrorLevel } from &quot;./types.js&quot;;
  9  |  describe(&quot;Error Analyzer&quot;, () =&gt; {
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/src/errors/integration.test.ts" timestamp="2025-07-06T18:54:21.349Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/src/errors/integration.test.ts" name="tests/src/errors/integration.test.ts" time="0">
            <failure message="Failed to resolve import &quot;./analyzer.js&quot; from &quot;tests/src/errors/integration.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;./analyzer.js&quot; from &quot;tests/src/errors/integration.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/src/errors/integration.test.ts:15:0
  36 |    };
  37 |  });
  38 |  const __vi_import_0__ = await import(&quot;./analyzer.js&quot;);
     |                                       ^
  39 |  const __vi_import_1__ = await import(&quot;./formatter.js&quot;);
  40 |  const __vi_import_2__ = await import(&quot;./types.js&quot;);
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/src/utils/retry.test.ts" timestamp="2025-07-06T18:54:21.349Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/src/utils/retry.test.ts" name="tests/src/utils/retry.test.ts" time="0">
            <failure message="Failed to resolve import &quot;./retry&quot; from &quot;tests/src/utils/retry.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;./retry&quot; from &quot;tests/src/utils/retry.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/src/utils/retry.test.ts:14:65
  5  |   */
  6  |  import { expect, test, describe, beforeEach } from &quot;vitest&quot;;
  7  |  import { retry, calculateBackoff, withRetry } from &quot;./retry&quot;;
     |                                                      ^
  8  |  vi.useFakeTimers();
  9  |  describe(&quot;calculateBackoff&quot;, () =&gt; {
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/src/telemetry/enhanced-telemetry.test.ts" timestamp="2025-07-06T18:54:21.349Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/src/telemetry/enhanced-telemetry.test.ts" name="tests/src/telemetry/enhanced-telemetry.test.ts" time="0">
            <failure message="Failed to resolve import &quot;./enhanced-telemetry.js&quot; from &quot;tests/src/telemetry/enhanced-telemetry.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;./enhanced-telemetry.js&quot; from &quot;tests/src/telemetry/enhanced-telemetry.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/src/telemetry/enhanced-telemetry.test.ts:15:0
  8  |    }
  9  |  }));
  10 |  const __vi_import_0__ = await import(&quot;./enhanced-telemetry.js&quot;);
     |                                       ^
  11 |  const __vi_import_1__ = await import(&quot;./index.js&quot;);
  12 |  /**
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/src/telemetry/index.test.ts" timestamp="2025-07-06T18:54:21.349Z" hostname="Seths-MacBook-Pro.local" tests="25" failures="4" errors="0" skipped="0" time="0.016358541">
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; constructor &gt; should initialize with default configuration" time="0.001281542">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; constructor &gt; should respect disabled configuration" time="0.00013975">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; trackEvent &gt; should add breadcrumb and capture message for tracked events" time="0.0018205">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; trackEvent &gt; should not track events when telemetry is disabled" time="0.000186208">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; trackCommand &gt; should track command execution with sanitized args" time="0.000802542">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; trackError &gt; should capture exception with context" time="0.003353208">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; captureMessage &gt; should add event to events array" time="0.00140525">
            <failure message="expected undefined to be &apos;mock-uuid&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;mock-uuid&apos; // Object.is equality

- Expected: 
&quot;mock-uuid&quot;

+ Received: 
undefined

 ❯ tests/src/telemetry/index.test.ts:141:23
            </failure>
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; captureMessage &gt; should emit message:captured event" time="0.000434833">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; captureException &gt; should normalize and store error" time="0.000497959">
            <failure message="expected undefined to be &apos;mock-uuid&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;mock-uuid&apos; // Object.is equality

- Expected: 
&quot;mock-uuid&quot;

+ Received: 
undefined

 ❯ tests/src/telemetry/index.test.ts:165:23
            </failure>
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; captureException &gt; should handle non-Error objects" time="0.000464375">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; addBreadcrumb &gt; should add breadcrumb to array" time="0.000213458">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; addBreadcrumb &gt; should respect maxBreadcrumbs limit" time="0.000170667">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; trackMetric &gt; should track and aggregate metrics" time="0.000287417">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; trackMetric &gt; should apply custom tags to metrics" time="0.000122417">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; flush &gt; should empty the events array" time="0.000172708">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; flush &gt; should emit flush:success event" time="0.000168875">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; cleanup &gt; should clear data and remove listeners" time="0.0001845">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; cleanup &gt; should clear flush timer if set" time="0.001101958">
            <failure message="expected &quot;clearInterval&quot; to be called at least once" type="AssertionError">
AssertionError: expected &quot;clearInterval&quot; to be called at least once
 ❯ tests/src/telemetry/index.test.ts:291:31
            </failure>
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; sanitizeArgs &gt; should remove sensitive information" time="0.000207458">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; sanitizeArgs &gt; should truncate long string values" time="0.000128834">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; sanitizeArgs &gt; should handle different value types" time="0.000153333">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; session management &gt; should create and track a session" time="0.000315209">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; session management &gt; should generate a session ID if not provided" time="0.001403625">
            <failure message="expected &apos;session_undefined&apos; to be &apos;session_mock-uuid&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;session_undefined&apos; to be &apos;session_mock-uuid&apos; // Object.is equality

Expected: &quot;session_mock-uuid&quot;
Received: &quot;session_undefined&quot;

 ❯ tests/src/telemetry/index.test.ts:379:27
            </failure>
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; processStackTrace &gt; should parse stack trace strings into structured frames" time="0.000199125">
        </testcase>
        <testcase classname="tests/src/telemetry/index.test.ts" name="TelemetryService &gt; processStackTrace &gt; should handle empty or invalid stack traces" time="0.000131042">
        </testcase>
    </testsuite>
    <testsuite name="tests/src/telemetry/performance-monitoring.test.ts" timestamp="2025-07-06T18:54:21.351Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/src/telemetry/performance-monitoring.test.ts" name="tests/src/telemetry/performance-monitoring.test.ts" time="0">
            <failure message="Failed to resolve import &quot;./performance-monitoring.js&quot; from &quot;tests/src/telemetry/performance-monitoring.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;./performance-monitoring.js&quot; from &quot;tests/src/telemetry/performance-monitoring.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/src/telemetry/performance-monitoring.test.ts:15:0
  23 |    }
  24 |  }));
  25 |  const __vi_import_0__ = await import(&quot;./performance-monitoring.js&quot;);
     |                                       ^
  26 |  const __vi_import_1__ = await import(&quot;./enhanced-telemetry.js&quot;);
  27 |  const __vi_import_2__ = await import(&quot;./index.js&quot;);
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/telemetry/integration/telemetry-command-integration.test.ts" timestamp="2025-07-06T18:54:21.351Z" hostname="Seths-MacBook-Pro.local" tests="7" failures="2" errors="0" skipped="0" time="0.010120541">
        <testcase classname="tests/telemetry/integration/telemetry-command-integration.test.ts" name="Telemetry Command Integration &gt; should track successful command execution" time="0.003563667">
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-command-integration.test.ts" name="Telemetry Command Integration &gt; should track failed command execution" time="0.000368375">
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-command-integration.test.ts" name="Telemetry Command Integration &gt; should not track sensitive commands like login/logout" time="0.003656125">
            <failure message="expected &quot;trackEvent&quot; to not be called at all, but actually been called 2 times[90m

Received: 

[1m  1st trackEvent call:

[22m    Array [
      &quot;command_success&quot;,
      Object {
        &quot;args&quot;: Object {},
        &quot;command&quot;: &quot;login&quot;,
        &quot;duration&quot;: 100,
      },
    ]

[1m  2nd trackEvent call:

[22m    Array [
      &quot;command_success&quot;,
      Object {
        &quot;args&quot;: Object {},
        &quot;command&quot;: &quot;logout&quot;,
        &quot;duration&quot;: 50,
      },
    ]
[39m[90m

Number of calls: [1m2[22m
[39m" type="AssertionError">
AssertionError: expected &quot;trackEvent&quot; to not be called at all, but actually been called 2 times

Received: 

  1st trackEvent call:

    Array [
      &quot;command_success&quot;,
      Object {
        &quot;args&quot;: Object {},
        &quot;command&quot;: &quot;login&quot;,
        &quot;duration&quot;: 100,
      },
    ]

  2nd trackEvent call:

    Array [
      &quot;command_success&quot;,
      Object {
        &quot;args&quot;: Object {},
        &quot;command&quot;: &quot;logout&quot;,
        &quot;duration&quot;: 50,
      },
    ]


Number of calls: 2

 ❯ tests/telemetry/integration/telemetry-command-integration.test.ts:90:31
            </failure>
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-command-integration.test.ts" name="Telemetry Command Integration &gt; should sanitize sensitive arguments in command tracking" time="0.0007905">
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-command-integration.test.ts" name="Telemetry Command Integration &gt; should track metrics for command duration" time="0.0003385">
            <failure message="Cannot read properties of undefined (reading &apos;setSystemTime&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;setSystemTime&apos;)
 ❯ tests/telemetry/integration/telemetry-command-integration.test.ts:121:10
            </failure>
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-command-integration.test.ts" name="Telemetry Command Integration &gt; should create appropriate breadcrumbs for command execution" time="0.000302625">
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-command-integration.test.ts" name="Telemetry Command Integration &gt; should track a sequence of commands" time="0.000389625">
        </testcase>
    </testsuite>
    <testsuite name="tests/telemetry/integration/telemetry-error-integration.test.ts" timestamp="2025-07-06T18:54:21.351Z" hostname="Seths-MacBook-Pro.local" tests="6" failures="2" errors="0" skipped="0" time="0.010422125">
        <testcase classname="tests/telemetry/integration/telemetry-error-integration.test.ts" name="Telemetry Error Integration &gt; should capture error with correct category from errors module" time="0.00490825">
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-error-integration.test.ts" name="Telemetry Error Integration &gt; should capture authentication error with correct category" time="0.000404583">
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-error-integration.test.ts" name="Telemetry Error Integration &gt; should use UNKNOWN category for generic errors" time="0.000251292">
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-error-integration.test.ts" name="Telemetry Error Integration &gt; should propagate error contexts to telemetry" time="0.00285575">
            <failure message="expected &quot;captureException&quot; to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st captureException call:

[22m[33m@@ -2,16 +2,22 @@[90m
[2m    TestNetworkError {[22m
[2m      &quot;message&quot;: &quot;Failed to connect to API&quot;,[22m
[2m      &quot;category&quot;: 2,[22m
[2m      &quot;name&quot;: &quot;TestNetworkError&quot;,[22m
[2m    },[22m
[32m-   ObjectContaining {[90m
[32m-     &quot;extra&quot;: ObjectContaining {[90m
[31m+   {[90m
[31m+     &quot;extra&quot;: {[90m
[31m+       &quot;extra&quot;: {[90m
[2m          &quot;request_id&quot;: &quot;123456&quot;,[22m
[2m          &quot;user_id&quot;: &quot;user-789&quot;,[22m
[2m        },[22m
[32m-     &quot;tags&quot;: ObjectContaining {[90m
[31m+       &quot;tags&quot;: {[90m
[31m+         &quot;endpoint&quot;: &quot;/api/data&quot;,[90m
[31m+         &quot;method&quot;: &quot;GET&quot;,[90m
[31m+       },[90m
[31m+     },[90m
[31m+     &quot;tags&quot;: {[90m
[2m        &quot;category&quot;: 2,[22m
[2m        &quot;endpoint&quot;: &quot;/api/data&quot;,[22m
[2m        &quot;method&quot;: &quot;GET&quot;,[22m
[2m      },[22m
[2m    },[22m
[39m[90m

Number of calls: [1m1[22m
[39m" type="AssertionError">
AssertionError: expected &quot;captureException&quot; to be called with arguments: [ …(2) ]

Received: 

  1st captureException call:

@@ -2,16 +2,22 @@
    TestNetworkError {
      &quot;message&quot;: &quot;Failed to connect to API&quot;,
      &quot;category&quot;: 2,
      &quot;name&quot;: &quot;TestNetworkError&quot;,
    },
-   ObjectContaining {
-     &quot;extra&quot;: ObjectContaining {
+   {
+     &quot;extra&quot;: {
+       &quot;extra&quot;: {
          &quot;request_id&quot;: &quot;123456&quot;,
          &quot;user_id&quot;: &quot;user-789&quot;,
        },
-     &quot;tags&quot;: ObjectContaining {
+       &quot;tags&quot;: {
+         &quot;endpoint&quot;: &quot;/api/data&quot;,
+         &quot;method&quot;: &quot;GET&quot;,
+       },
+     },
+     &quot;tags&quot;: {
        &quot;category&quot;: 2,
        &quot;endpoint&quot;: &quot;/api/data&quot;,
        &quot;method&quot;: &quot;GET&quot;,
      },
    },


Number of calls: 1

 ❯ tests/telemetry/integration/telemetry-error-integration.test.ts:119:33
            </failure>
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-error-integration.test.ts" name="Telemetry Error Integration &gt; should track error breadcrumbs when tracking errors" time="0.000546">
            <failure message="expected &quot;captureException&quot; to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;captureException&quot; to be called with arguments: [ …(2) ]

Number of calls: 0

 ❯ tests/telemetry/integration/telemetry-error-integration.test.ts:155:33
            </failure>
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-error-integration.test.ts" name="Telemetry Error Integration &gt; should be able to find errors in event stream" time="0.000695584">
        </testcase>
    </testsuite>
    <testsuite name="tests/telemetry/integration/telemetry-integration.test.ts" timestamp="2025-07-06T18:54:21.352Z" hostname="Seths-MacBook-Pro.local" tests="5" failures="0" errors="0" skipped="0" time="0.031400708">
        <testcase classname="tests/telemetry/integration/telemetry-integration.test.ts" name="Telemetry Integration &gt; should integrate basic and enhanced telemetry systems" time="0.00229525">
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-integration.test.ts" name="Telemetry Integration &gt; should integrate with performance monitoring" time="0.013688875">
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-integration.test.ts" name="Telemetry Integration &gt; should track async operations across telemetry systems" time="0.01226725">
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-integration.test.ts" name="Telemetry Integration &gt; should handle errors across telemetry systems" time="0.0013205">
        </testcase>
        <testcase classname="tests/telemetry/integration/telemetry-integration.test.ts" name="Telemetry Integration &gt; should provide consistent tracing across components" time="0.000303334">
        </testcase>
    </testsuite>
    <testsuite name="tests/terminal/integration/terminal-integration.test.ts" timestamp="2025-07-06T18:54:21.352Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/terminal/integration/terminal-integration.test.ts" name="tests/terminal/integration/terminal-integration.test.ts" time="0">
            <failure message="[vitest] vi.mock(&quot;ora&quot;, factory?: () =&gt; unknown) is not returning an object. Did you mean to return an object with a &quot;default&quot; key?" type="TypeError">
TypeError: [vitest] vi.mock(&quot;ora&quot;, factory?: () =&gt; unknown) is not returning an object. Did you mean to return an object with a &quot;default&quot; key?
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/terminal/unit/formatting.test.ts" timestamp="2025-07-06T18:54:21.352Z" hostname="Seths-MacBook-Pro.local" tests="15" failures="3" errors="0" skipped="0" time="0.014477">
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; clearScreen &gt; should write ANSI escape codes to stdout" time="0.001693916">
        </testcase>
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; getTerminalSize &gt; should get size from TTY if available" time="0.000248209">
        </testcase>
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; getTerminalSize &gt; should return default size if TTY not available" time="0.000104958">
        </testcase>
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; getTerminalSize &gt; should return default size if error occurs" time="0.000107833">
        </testcase>
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; formatOutput &gt; should return empty string for empty input" time="0.000168334">
        </testcase>
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; formatOutput &gt; should format markdown-style text with colors enabled" time="0.008866209">
            <failure message="undefined is not a spy or a call to a spy!" type="TypeError">
TypeError: undefined is not a spy or a call to a spy!
 ❯ tests/terminal/unit/formatting.test.ts:143:26
            </failure>
        </testcase>
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; formatOutput &gt; should not format text when colors are disabled" time="0.0001145">
        </testcase>
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; formatOutput &gt; should format lists" time="0.0002415">
            <failure message="undefined is not a spy or a call to a spy!" type="TypeError">
TypeError: undefined is not a spy or a call to a spy!
 ❯ tests/terminal/unit/formatting.test.ts:162:25
            </failure>
        </testcase>
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; formatOutput &gt; should format headers" time="0.000535542">
            <failure message="Cannot read properties of undefined (reading &apos;underline&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;underline&apos;)
 ❯ tests/terminal/unit/formatting.test.ts:171:25
            </failure>
        </testcase>
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; formatOutput &gt; should wrap text to specified width" time="0.00033275">
        </testcase>
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; wordWrap &gt; should wrap text to specified width" time="0.000278292">
        </testcase>
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; wordWrap &gt; should not wrap lines that are already short enough" time="0.000294">
        </testcase>
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; wordWrap &gt; should preserve existing line breaks" time="0.000221125">
        </testcase>
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; wordWrap &gt; should not wrap code block lines" time="0.000165">
        </testcase>
        <testcase classname="tests/terminal/unit/formatting.test.ts" name="Terminal Formatting &gt; wordWrap &gt; should handle words longer than the specified width" time="0.00016575">
        </testcase>
    </testsuite>
    <testsuite name="tests/terminal/unit/prompt.test.ts" timestamp="2025-07-06T18:54:21.353Z" hostname="Seths-MacBook-Pro.local" tests="11" failures="11" errors="0" skipped="0" time="0.0946645">
        <testcase classname="tests/terminal/unit/prompt.test.ts" name="Terminal Prompts &gt; Prompt class &gt; should create a readline interface and handle user input" time="0.005162459">
            <failure message="Cannot read properties of undefined (reading &apos;question&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;question&apos;)
 ❯ src/terminal/prompt.ts:34:15
 ❯ Prompt.run src/terminal/prompt.ts:32:12
 ❯ tests/terminal/unit/prompt.test.ts:95:35
            </failure>
        </testcase>
        <testcase classname="tests/terminal/unit/prompt.test.ts" name="Terminal Prompts &gt; createPrompt &gt; should create and return a prompt result" time="0.0003195">
            <failure message="Failed to prompt for test: Cannot read properties of undefined (reading &apos;test&apos;)" type="Error">
Error: Failed to prompt for test: Cannot read properties of undefined (reading &apos;test&apos;)
 ❯ Module.createPrompt src/terminal/prompt.ts:74:11
 ❯ tests/terminal/unit/prompt.test.ts:109:22
            </failure>
        </testcase>
        <testcase classname="tests/terminal/unit/prompt.test.ts" name="Terminal Prompts &gt; createPrompt &gt; should add validation for required fields" time="0.000143875">
            <failure message="Failed to prompt for test: Cannot read properties of undefined (reading &apos;test&apos;)" type="Error">
Error: Failed to prompt for test: Cannot read properties of undefined (reading &apos;test&apos;)
 ❯ Module.createPrompt src/terminal/prompt.ts:74:11
 ❯ tests/terminal/unit/prompt.test.ts:125:7
            </failure>
        </testcase>
        <testcase classname="tests/terminal/unit/prompt.test.ts" name="Terminal Prompts &gt; createPrompt &gt; should throw error for non-interactive terminals" time="0.000140625">
            <failure message="Cannot redefine property: isTTY" type="TypeError">
TypeError: Cannot redefine property: isTTY
 ❯ tests/terminal/unit/prompt.test.ts:137:14
            </failure>
        </testcase>
        <testcase classname="tests/terminal/unit/prompt.test.ts" name="Terminal Prompts &gt; createPrompt &gt; should handle inquirer errors" time="0.087279125">
            <failure message="Cannot read properties of undefined (reading &apos;mockRejectedValueOnce&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;mockRejectedValueOnce&apos;)
 ❯ tests/terminal/unit/prompt.test.ts:155:23
            </failure>
        </testcase>
        <testcase classname="tests/terminal/unit/prompt.test.ts" name="Terminal Prompts &gt; Prompt utility functions &gt; promptText should create a text prompt" time="0.000225167">
            <failure message="Failed to prompt for input: Cannot read properties of undefined (reading &apos;input&apos;)" type="Error">
Error: Failed to prompt for input: Cannot read properties of undefined (reading &apos;input&apos;)
 ❯ createPrompt src/terminal/prompt.ts:74:11
 ❯ Module.promptText src/terminal/prompt.ts:87:18
 ❯ tests/terminal/unit/prompt.test.ts:171:22
            </failure>
        </testcase>
        <testcase classname="tests/terminal/unit/prompt.test.ts" name="Terminal Prompts &gt; Prompt utility functions &gt; promptPassword should create a password prompt" time="0.000174625">
            <failure message="Failed to prompt for password: Cannot read properties of undefined (reading &apos;password&apos;)" type="Error">
Error: Failed to prompt for password: Cannot read properties of undefined (reading &apos;password&apos;)
 ❯ createPrompt src/terminal/prompt.ts:74:11
 ❯ Module.promptPassword src/terminal/prompt.ts:107:18
 ❯ tests/terminal/unit/prompt.test.ts:185:22
            </failure>
        </testcase>
        <testcase classname="tests/terminal/unit/prompt.test.ts" name="Terminal Prompts &gt; Prompt utility functions &gt; promptConfirm should create a confirmation prompt" time="0.000150792">
            <failure message="Failed to prompt for confirm: Cannot read properties of undefined (reading &apos;confirm&apos;)" type="Error">
Error: Failed to prompt for confirm: Cannot read properties of undefined (reading &apos;confirm&apos;)
 ❯ createPrompt src/terminal/prompt.ts:74:11
 ❯ Module.promptConfirm src/terminal/prompt.ts:125:18
 ❯ tests/terminal/unit/prompt.test.ts:200:22
            </failure>
        </testcase>
        <testcase classname="tests/terminal/unit/prompt.test.ts" name="Terminal Prompts &gt; Prompt utility functions &gt; promptList should create a selection list prompt" time="0.000148166">
            <failure message="Failed to prompt for list: Cannot read properties of undefined (reading &apos;list&apos;)" type="Error">
Error: Failed to prompt for list: Cannot read properties of undefined (reading &apos;list&apos;)
 ❯ createPrompt src/terminal/prompt.ts:74:11
 ❯ Module.promptList src/terminal/prompt.ts:143:18
 ❯ tests/terminal/unit/prompt.test.ts:216:22
            </failure>
        </testcase>
        <testcase classname="tests/terminal/unit/prompt.test.ts" name="Terminal Prompts &gt; Prompt utility functions &gt; promptCheckbox should create a multi-select prompt" time="0.000147209">
            <failure message="Failed to prompt for checkbox: Cannot read properties of undefined (reading &apos;checkbox&apos;)" type="Error">
Error: Failed to prompt for checkbox: Cannot read properties of undefined (reading &apos;checkbox&apos;)
 ❯ createPrompt src/terminal/prompt.ts:74:11
 ❯ Module.promptCheckbox src/terminal/prompt.ts:163:18
 ❯ tests/terminal/unit/prompt.test.ts:235:22
            </failure>
        </testcase>
        <testcase classname="tests/terminal/unit/prompt.test.ts" name="Terminal Prompts &gt; Prompt utility functions &gt; promptEditor should create an editor prompt" time="0.000143292">
            <failure message="Failed to prompt for editor: Cannot read properties of undefined (reading &apos;editor&apos;)" type="Error">
Error: Failed to prompt for editor: Cannot read properties of undefined (reading &apos;editor&apos;)
 ❯ createPrompt src/terminal/prompt.ts:74:11
 ❯ Module.promptEditor src/terminal/prompt.ts:182:18
 ❯ tests/terminal/unit/prompt.test.ts:250:22
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/terminal/unit/terminal.test.ts" timestamp="2025-07-06T18:54:21.354Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/terminal/unit/terminal.test.ts" name="tests/terminal/unit/terminal.test.ts" time="0">
            <failure message="[vitest] vi.mock(&quot;terminal-link&quot;, factory?: () =&gt; unknown) is not returning an object. Did you mean to return an object with a &quot;default&quot; key?" type="TypeError">
TypeError: [vitest] vi.mock(&quot;terminal-link&quot;, factory?: () =&gt; unknown) is not returning an object. Did you mean to return an object with a &quot;default&quot; key?
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/telemetry/unit/enhanced-telemetry.test.ts" timestamp="2025-07-06T18:54:21.355Z" hostname="Seths-MacBook-Pro.local" tests="11" failures="0" errors="0" skipped="0" time="0.005454291">
        <testcase classname="tests/telemetry/unit/enhanced-telemetry.test.ts" name="EnhancedTelemetrySystem &gt; should initialize with disabled configuration" time="0.001221416">
        </testcase>
        <testcase classname="tests/telemetry/unit/enhanced-telemetry.test.ts" name="EnhancedTelemetrySystem &gt; startSpan should return dummy span when disabled" time="0.000523625">
        </testcase>
        <testcase classname="tests/telemetry/unit/enhanced-telemetry.test.ts" name="EnhancedTelemetrySystem &gt; endSpan should not track metrics when disabled" time="0.000224709">
        </testcase>
        <testcase classname="tests/telemetry/unit/enhanced-telemetry.test.ts" name="EnhancedTelemetrySystem &gt; getActiveSpansForTrace should return empty array when disabled" time="0.000539625">
        </testcase>
        <testcase classname="tests/telemetry/unit/enhanced-telemetry.test.ts" name="EnhancedTelemetrySystem &gt; markPerformance should not track when disabled" time="0.00014075">
        </testcase>
        <testcase classname="tests/telemetry/unit/enhanced-telemetry.test.ts" name="EnhancedTelemetrySystem &gt; measurePerformance should return 0 when disabled" time="0.000144">
        </testcase>
        <testcase classname="tests/telemetry/unit/enhanced-telemetry.test.ts" name="EnhancedTelemetrySystem &gt; trackRequest should not track when disabled" time="0.000192708">
        </testcase>
        <testcase classname="tests/telemetry/unit/enhanced-telemetry.test.ts" name="EnhancedTelemetrySystem &gt; getResourceStats should return empty object when disabled" time="0.000171667">
        </testcase>
        <testcase classname="tests/telemetry/unit/enhanced-telemetry.test.ts" name="EnhancedTelemetrySystem &gt; when telemetry is enabled &gt; startSpan should create a real span when enabled" time="0.001043667">
        </testcase>
        <testcase classname="tests/telemetry/unit/enhanced-telemetry.test.ts" name="EnhancedTelemetrySystem &gt; when telemetry is enabled &gt; spans should be linked to their trace" time="0.000168958">
        </testcase>
        <testcase classname="tests/telemetry/unit/enhanced-telemetry.test.ts" name="EnhancedTelemetrySystem &gt; when telemetry is enabled &gt; endSpan should remove span from active spans" time="0.000158958">
        </testcase>
    </testsuite>
    <testsuite name="tests/telemetry/unit/index.test.ts" timestamp="2025-07-06T18:54:21.355Z" hostname="Seths-MacBook-Pro.local" tests="8" failures="1" errors="0" skipped="0" time="0.008786666">
        <testcase classname="tests/telemetry/unit/index.test.ts" name="TelemetryService &gt; should initialize with default configuration" time="0.000932667">
        </testcase>
        <testcase classname="tests/telemetry/unit/index.test.ts" name="TelemetryService &gt; should respect enabled flag from config" time="0.000127">
        </testcase>
        <testcase classname="tests/telemetry/unit/index.test.ts" name="TelemetryService &gt; should not track events when disabled" time="0.000499625">
        </testcase>
        <testcase classname="tests/telemetry/unit/index.test.ts" name="TelemetryService &gt; should not track errors when disabled" time="0.000132417">
        </testcase>
        <testcase classname="tests/telemetry/unit/index.test.ts" name="TelemetryService &gt; should not track commands when disabled" time="0.000101875">
        </testcase>
        <testcase classname="tests/telemetry/unit/index.test.ts" name="TelemetryService &gt; should not track login/logout commands for privacy" time="0.004060542">
            <failure message="expected &quot;trackEvent&quot; to not be called at all, but actually been called 2 times[90m

Received: 

[1m  1st trackEvent call:

[22m    Array [
      &quot;command_success&quot;,
      Object {
        &quot;args&quot;: Object {},
        &quot;command&quot;: &quot;login&quot;,
        &quot;duration&quot;: 100,
      },
    ]

[1m  2nd trackEvent call:

[22m    Array [
      &quot;command_success&quot;,
      Object {
        &quot;args&quot;: Object {},
        &quot;command&quot;: &quot;logout&quot;,
        &quot;duration&quot;: 50,
      },
    ]
[39m[90m

Number of calls: [1m2[22m
[39m" type="AssertionError">
AssertionError: expected &quot;trackEvent&quot; to not be called at all, but actually been called 2 times

Received: 

  1st trackEvent call:

    Array [
      &quot;command_success&quot;,
      Object {
        &quot;args&quot;: Object {},
        &quot;command&quot;: &quot;login&quot;,
        &quot;duration&quot;: 100,
      },
    ]

  2nd trackEvent call:

    Array [
      &quot;command_success&quot;,
      Object {
        &quot;args&quot;: Object {},
        &quot;command&quot;: &quot;logout&quot;,
        &quot;duration&quot;: 50,
      },
    ]


Number of calls: 2

 ❯ tests/telemetry/unit/index.test.ts:89:31
            </failure>
        </testcase>
        <testcase classname="tests/telemetry/unit/index.test.ts" name="TelemetryService &gt; should sanitize sensitive arguments when tracking commands" time="0.001783875">
        </testcase>
        <testcase classname="tests/telemetry/unit/index.test.ts" name="TelemetryService &gt; should handle different value types in sanitizeArgs" time="0.000463792">
        </testcase>
    </testsuite>
    <testsuite name="tests/telemetry/unit/performance-monitoring.test.ts" timestamp="2025-07-06T18:54:21.356Z" hostname="Seths-MacBook-Pro.local" tests="13" failures="0" errors="0" skipped="0" time="0.009430875">
        <testcase classname="tests/telemetry/unit/performance-monitoring.test.ts" name="PerformanceMonitoringSystem &gt; should initialize with disabled configuration" time="0.001283125">
        </testcase>
        <testcase classname="tests/telemetry/unit/performance-monitoring.test.ts" name="PerformanceMonitoringSystem &gt; trackFunction should return original function when disabled" time="0.001407666">
        </testcase>
        <testcase classname="tests/telemetry/unit/performance-monitoring.test.ts" name="PerformanceMonitoringSystem &gt; startMarker should return marker ID even when disabled" time="0.0001525">
        </testcase>
        <testcase classname="tests/telemetry/unit/performance-monitoring.test.ts" name="PerformanceMonitoringSystem &gt; endMarker should return 0 when disabled" time="0.000170667">
        </testcase>
        <testcase classname="tests/telemetry/unit/performance-monitoring.test.ts" name="PerformanceMonitoringSystem &gt; trackComponentRender should not track when disabled" time="0.000153459">
        </testcase>
        <testcase classname="tests/telemetry/unit/performance-monitoring.test.ts" name="PerformanceMonitoringSystem &gt; detectBottlenecks should return empty array when disabled" time="0.000314959">
        </testcase>
        <testcase classname="tests/telemetry/unit/performance-monitoring.test.ts" name="PerformanceMonitoringSystem &gt; getProfile should return empty profile when disabled" time="0.000187042">
        </testcase>
        <testcase classname="tests/telemetry/unit/performance-monitoring.test.ts" name="PerformanceMonitoringSystem &gt; when performance monitoring is enabled &gt; trackFunction should wrap function with performance tracking" time="0.000541709">
        </testcase>
        <testcase classname="tests/telemetry/unit/performance-monitoring.test.ts" name="PerformanceMonitoringSystem &gt; when performance monitoring is enabled &gt; trackFunction should handle async functions" time="0.000314792">
        </testcase>
        <testcase classname="tests/telemetry/unit/performance-monitoring.test.ts" name="PerformanceMonitoringSystem &gt; when performance monitoring is enabled &gt; trackFunction should handle thrown errors" time="0.000822625">
        </testcase>
        <testcase classname="tests/telemetry/unit/performance-monitoring.test.ts" name="PerformanceMonitoringSystem &gt; when performance monitoring is enabled &gt; trackFunction should handle rejected promises" time="0.000665666">
        </testcase>
        <testcase classname="tests/telemetry/unit/performance-monitoring.test.ts" name="PerformanceMonitoringSystem &gt; when performance monitoring is enabled &gt; startMarker and endMarker should track duration" time="0.000326166">
        </testcase>
        <testcase classname="tests/telemetry/unit/performance-monitoring.test.ts" name="PerformanceMonitoringSystem &gt; when performance monitoring is enabled &gt; trackComponentRender should record component rendering stats" time="0.0019665">
        </testcase>
    </testsuite>
    <testsuite name="tests/telemetry/unit/telemetry-service.test.ts" timestamp="2025-07-06T18:54:21.356Z" hostname="Seths-MacBook-Pro.local" tests="18" failures="5" errors="0" skipped="0" time="0.013225208">
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should initialize with provided configuration" time="0.001072916">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should track events when enabled" time="0.001031541">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should track errors when enabled" time="0.003037792">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should track command execution" time="0.000487833">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should track command failures" time="0.000215666">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should add breadcrumbs correctly" time="0.001095834">
            <failure message="Cannot read properties of undefined (reading &apos;setSystemTime&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;setSystemTime&apos;)
 ❯ tests/telemetry/unit/telemetry-service.test.ts:146:10
            </failure>
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should limit breadcrumbs to max configured amount" time="0.000383291">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should capture messages with proper event structure" time="0.000192042">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should capture exceptions with proper event structure" time="0.000197167">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should track metrics with proper aggregation" time="0.000233583">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should track API calls with proper metrics" time="0.000345166">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should track API calls with error status" time="0.000258458">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should manage sessions correctly" time="0.000324916">
            <failure message="Cannot read properties of undefined (reading &apos;setSystemTime&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;setSystemTime&apos;)
 ❯ tests/telemetry/unit/telemetry-service.test.ts:282:10
            </failure>
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should handle sanitizing of sensitive arguments" time="0.0014195">
            <failure message="expected &apos;[Object]&apos; to be &apos;Object&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;[Object]&apos; to be &apos;Object&apos; // Object.is equality

Expected: &quot;Object&quot;
Received: &quot;[Object]&quot;

 ❯ tests/telemetry/unit/telemetry-service.test.ts:324:31
            </failure>
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should normalize different error types" time="0.00022575">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should process stack traces correctly" time="0.001455375">
            <failure message="expected [ …(2) ] to have a length of 3 but got 2" type="AssertionError">
AssertionError: expected [ …(2) ] to have a length of 3 but got 2

- Expected
+ Received

- 3
+ 2

 ❯ tests/telemetry/unit/telemetry-service.test.ts:371:23
            </failure>
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should flush events when interval elapses" time="0.000482542">
            <failure message="expected &quot;flush&quot; to be called at least once" type="AssertionError">
AssertionError: expected &quot;flush&quot; to be called at least once
 ❯ tests/telemetry/unit/telemetry-service.test.ts:394:22
            </failure>
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-service.test.ts" name="TelemetryService - Comprehensive Tests &gt; should track CLI start when enabled" time="0.000172209">
        </testcase>
    </testsuite>
    <testsuite name="tests/telemetry/unit/telemetry-utils.test.ts" timestamp="2025-07-06T18:54:21.357Z" hostname="Seths-MacBook-Pro.local" tests="15" failures="3" errors="0" skipped="0" time="0.015345166">
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; anonymizePath should handle empty path" time="0.00253775">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; anonymizePath should anonymize home directory" time="0.000221584">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; hashSensitiveData should consistently hash the same data" time="0.00068875">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; wrapFunctionWithTelemetry should use performanceMonitoring" time="0.000674833">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; trackAsyncOperation should track operation with span" time="0.000529459">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; trackAsyncOperation should handle errors" time="0.002024">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; trackComponentRender should delegate to performanceMonitoring" time="0.000251458">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; createTracingId should return a valid ID" time="0.000371084">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; sanitizeObject should remove sensitive fields" time="0.003174666">
            <failure message="expected { username: &apos;testuser&apos;, …(4) } to not have property &quot;password&quot;" type="AssertionError">
AssertionError: expected { username: &apos;testuser&apos;, …(4) } to not have property &quot;password&quot;

- Expected: 
undefined

+ Received: 
&quot;***REDACTED***&quot;

 ❯ tests/telemetry/unit/telemetry-utils.test.ts:175:24
            </failure>
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; sanitizeObject should truncate long strings" time="0.000262958">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; formatExecutionTime should format time correctly" time="0.000184458">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; getSystemMetadata should return system info" time="0.000328959">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; trackAIRequest should track request event" time="0.000476792">
            <failure message="expected { …(5) } to have property &quot;max_tokens&quot; with value 100" type="AssertionError">
AssertionError: expected { …(5) } to have property &quot;max_tokens&quot; with value 100

- Expected: 
100

+ Received: 
&quot;***REDACTED***&quot;

 ❯ tests/telemetry/unit/telemetry-utils.test.ts:223:23
            </failure>
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; trackAIResponse should track response event" time="0.000209375">
        </testcase>
        <testcase classname="tests/telemetry/unit/telemetry-utils.test.ts" name="telemetry-utils &gt; detectPerformanceIssues should add breadcrumb for high memory usage" time="0.000535">
            <failure message="Cannot read properties of undefined (reading &apos;memoryUsage&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;memoryUsage&apos;)
 ❯ Module.detectPerformanceIssues src/telemetry/telemetry-utils.ts:232:37
 ❯ tests/telemetry/unit/telemetry-utils.test.ts:249:20
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/tools/integration/mcp-tools-integration.test.ts" timestamp="2025-07-06T18:54:21.358Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/tools/integration/mcp-tools-integration.test.ts" name="tests/tools/integration/mcp-tools-integration.test.ts" time="0">
            <system-err>
Failed to read project tool directory ./tools: Error: ENOENT: no such file or directory, scandir &apos;./tools&apos;
[90m    at Object.readdir (node:internal/fs/promises:949:18)[39m
    at ToolDiscoveryServiceImpl.discoverProjectTools [90m(/Users/sethford/Downloads/Projects/vibex/[39msrc/core/domain/tool/registry/tool-discovery.ts:113:23[90m)[39m
    at ToolDiscoveryServiceImpl.refreshAllTools [90m(/Users/sethford/Downloads/Projects/vibex/[39msrc/core/domain/tool/registry/tool-discovery.ts:171:7[90m)[39m {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;scandir&apos;[39m,
  path: [32m&apos;./tools&apos;[39m
}

            </system-err>
            <failure message="Failed to resolve import &quot;../../domain/tool/base-tool&quot; from &quot;src/core/adapters/tools/ripgrep-adapter.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../domain/tool/base-tool&quot; from &quot;src/core/adapters/tools/ripgrep-adapter.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/src/core/adapters/tools/ripgrep-adapter.ts:7:25
  4  |   * SPDX-License-Identifier: MIT
  5  |   */
  6  |  import { BaseTool } from &quot;../../domain/tool/base-tool&quot;;
     |                            ^
  7  |  import { createRipgrepTool } from &quot;../../../tools/ripgrep&quot;;
  8  |  export class RipgrepTool extends BaseTool {
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/tools/integration/tool-execution-flow.test.ts" timestamp="2025-07-06T18:54:21.358Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/tools/integration/tool-execution-flow.test.ts" name="tests/tools/integration/tool-execution-flow.test.ts" time="0">
            <failure message="[vitest] No &quot;default&quot; export is defined on the &quot;child_process&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;default&quot; export is defined on the &quot;child_process&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;child_process&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ src/services/git-service.ts:8:22
 ❯ src/services/git-checkpointing-service.ts:17:1
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/tools/unit/tool-registry.test.ts" timestamp="2025-07-06T18:54:21.359Z" hostname="Seths-MacBook-Pro.local" tests="13" failures="3" errors="0" skipped="0" time="0.035800875">
        <testcase classname="tests/tools/unit/tool-registry.test.ts" name="Tool Registry &gt; Tool Registration &gt; should register a tool correctly" time="0.001200291">
        </testcase>
        <testcase classname="tests/tools/unit/tool-registry.test.ts" name="Tool Registry &gt; Tool Registration &gt; should register multiple tools" time="0.001095416">
        </testcase>
        <testcase classname="tests/tools/unit/tool-registry.test.ts" name="Tool Registry &gt; Tool Registration &gt; should get a specific tool by name" time="0.000166">
        </testcase>
        <testcase classname="tests/tools/unit/tool-registry.test.ts" name="Tool Registry &gt; Tool Registration &gt; should return undefined for non-existent tool" time="0.000118292">
        </testcase>
        <testcase classname="tests/tools/unit/tool-registry.test.ts" name="Tool Registry &gt; Tool Execution &gt; should execute a tool successfully" time="0.0061975">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ { text: &apos;Hello World&apos; }, Anything ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[2m    {[22m
[2m      &quot;text&quot;: &quot;Hello World&quot;,[22m
[2m    },[22m
[32m-   Anything,[90m
[31m+   undefined,[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ { text: &apos;Hello World&apos; }, Anything ]

Received: 

  1st spy call:

  [
    {
      &quot;text&quot;: &quot;Hello World&quot;,
    },
-   Anything,
+   undefined,
  ]


Number of calls: 1

 ❯ tests/tools/unit/tool-registry.test.ts:164:31
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/tool-registry.test.ts" name="Tool Registry &gt; Tool Execution &gt; should handle tool execution errors" time="0.000302292">
        </testcase>
        <testcase classname="tests/tools/unit/tool-registry.test.ts" name="Tool Registry &gt; Tool Execution &gt; should handle non-existent tools" time="0.000153583">
        </testcase>
        <testcase classname="tests/tools/unit/tool-registry.test.ts" name="Tool Registry &gt; Tool Execution &gt; should handle failed tool execution result" time="0.000187083">
        </testcase>
        <testcase classname="tests/tools/unit/tool-registry.test.ts" name="Tool Registry &gt; Feedback Support &gt; should call feedback handlers during execution" time="0.000421416">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ &apos;read_file&apos;, &apos;test.txt&apos;, undefined ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[2m    &quot;read_file&quot;,[22m
[2m    &quot;test.txt&quot;,[22m
[32m-   undefined,[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ &apos;read_file&apos;, &apos;test.txt&apos;, undefined ]

Received: 

  1st spy call:

  [
    &quot;read_file&quot;,
    &quot;test.txt&quot;,
-   undefined,
  ]


Number of calls: 1

 ❯ tests/tools/unit/tool-registry.test.ts:280:23
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/tool-registry.test.ts" name="Tool Registry &gt; Statistics Tracking &gt; should track execution statistics" time="0.001324166">
            <failure message="expected 0 to be greater than 0" type="AssertionError">
AssertionError: expected 0 to be greater than 0
 ❯ tests/tools/unit/tool-registry.test.ts:315:42
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/tool-registry.test.ts" name="Tool Registry &gt; Statistics Tracking &gt; should track failed executions in statistics" time="0.000231458">
        </testcase>
        <testcase classname="tests/tools/unit/tool-registry.test.ts" name="Tool Registry &gt; Statistics Tracking &gt; should clear statistics" time="0.00010375">
        </testcase>
        <testcase classname="tests/tools/unit/tool-registry.test.ts" name="Tool Registry &gt; Built-in Tools &gt; should register built-in tools" time="0.02329">
        </testcase>
    </testsuite>
    <testsuite name="tests/tools/unit/tools-comprehensive.test.ts" timestamp="2025-07-06T18:54:21.359Z" hostname="Seths-MacBook-Pro.local" tests="20" failures="7" errors="0" skipped="0" time="0.376489459">
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Web Fetch Tool &gt; createWebFetchTool &gt; should return a valid tool definition" time="0.001274167">
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should extract URLs from prompt and fetch content" time="0.09045325">
            <failure message="expected &quot;spy&quot; to be called 2 times, but got 1 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 2 times, but got 1 times
 ❯ tests/tools/unit/tools-comprehensive.test.ts:83:33
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should handle missing URLs in prompt" time="0.000227209">
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should handle empty or missing prompt" time="0.000116375">
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should respect max_urls parameter" time="0.234635083">
            <failure message="expected &quot;spy&quot; to be called 2 times, but got 1 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 2 times, but got 1 times
 ❯ tests/tools/unit/tools-comprehensive.test.ts:115:33
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should handle fetch errors for individual URLs" time="0.041547166">
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should handle HTTP error responses" time="0.002168875">
            <failure message="expected &apos;**https://notfound.com**\nError: Erro…&apos; to contain &apos;Error: HTTP 404: Not Found&apos;" type="AssertionError">
AssertionError: expected &apos;**https://notfound.com**\nError: Erro…&apos; to contain &apos;Error: HTTP 404: Not Found&apos;

- Expected
+ Received

- Error: HTTP 404: Not Found
+ **https://notfound.com**
+ Error: Error: Failed to fetch https://notfound.com: HTTP 404: Not Found
+
+ **Processing Instruction:** Check [URL]

 ❯ tests/tools/unit/tools-comprehensive.test.ts:150:29
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should handle unsupported content types" time="0.000856833">
            <failure message="expected &apos;**https://document.com/file.pdf**\nEr…&apos; to contain &apos;Error: Unsupported content type: appl…&apos;" type="AssertionError">
AssertionError: expected &apos;**https://document.com/file.pdf**\nEr…&apos; to contain &apos;Error: Unsupported content type: appl…&apos;

- Expected
+ Received

- Error: Unsupported content type: application/pdf
+ **https://document.com/file.pdf**
+ Error: Error: Failed to fetch https://document.com/file.pdf: Unsupported content type: application/pdf
+
+ **Processing Instruction:** Download [URL]

 ❯ tests/tools/unit/tools-comprehensive.test.ts:168:29
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should extract text from HTML when extract_text_only is true" time="0.000760208">
            <failure message="expected &apos;**https://example.com**\nError: Error…&apos; to contain &apos;Test Heading&apos;" type="AssertionError">
AssertionError: expected &apos;**https://example.com**\nError: Error…&apos; to contain &apos;Test Heading&apos;

- Expected
+ Received

- Test Heading
+ **https://example.com**
+ Error: Error: Failed to fetch https://example.com: Unsupported content type: 
+
+ **Processing Instruction:** Read [URL]

 ❯ tests/tools/unit/tools-comprehensive.test.ts:194:29
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should return raw HTML when extract_text_only is false" time="0.000393125">
            <failure message="expected &apos;**https://example.com**\nError: Error…&apos; to contain &apos;&lt;html&gt;&apos;" type="AssertionError">
AssertionError: expected &apos;**https://example.com**\nError: Error…&apos; to contain &apos;&lt;html&gt;&apos;

- Expected
+ Received

- &lt;html&gt;
+ **https://example.com**
+ Error: Error: Failed to fetch https://example.com: Unsupported content type: 
+
+ **Processing Instruction:** Fetch HTML from [URL]

 ❯ tests/tools/unit/tools-comprehensive.test.ts:208:29
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should truncate large content" time="0.000699666">
            <failure message="expected &apos;**https://large-content.com**\nError:…&apos; to contain &apos;[content truncated]&apos;" type="AssertionError">
AssertionError: expected &apos;**https://large-content.com**\nError:…&apos; to contain &apos;[content truncated]&apos;

- Expected
+ Received

- [content truncated]
+ **https://large-content.com**
+ Error: Error: Failed to fetch https://large-content.com: Unsupported content type: 
+
+ **Processing Instruction:** Fetch [URL]

 ❯ tests/tools/unit/tools-comprehensive.test.ts:223:29
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Code Analyzer Tool &gt; createCodeAnalyzerTool &gt; should return a valid tool definition" time="0.000269">
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Code Analyzer Tool &gt; executeCodeAnalysis &gt; should analyze TypeScript file correctly" time="0.001448084">
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Code Analyzer Tool &gt; executeCodeAnalysis &gt; should handle file not found errors" time="0.000109125">
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Code Analyzer Tool &gt; executeCodeAnalysis &gt; should handle file read errors" time="0.000130417">
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Code Analyzer Tool &gt; executeCodeAnalysis &gt; should detect language correctly based on file extension" time="0.000227833">
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Code Analyzer Tool &gt; executeCodeAnalysis &gt; should include structure analysis metrics" time="0.000104">
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Code Analyzer Tool &gt; executeCodeAnalysis &gt; should detect security issues in code" time="0.000092667">
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Code Analyzer Tool &gt; executeCodeAnalysis &gt; should exclude suggestions when requested" time="0.000078291">
        </testcase>
        <testcase classname="tests/tools/unit/tools-comprehensive.test.ts" name="Code Analyzer Tool &gt; executeCodeAnalysis &gt; should handle code with quality issues" time="0.000093459">
        </testcase>
    </testsuite>
    <testsuite name="tests/tools/unit/web-fetch.test.ts" timestamp="2025-07-06T18:54:21.361Z" hostname="Seths-MacBook-Pro.local" tests="11" failures="11" errors="0" skipped="0" time="0.006768583">
        <testcase classname="tests/tools/unit/web-fetch.test.ts" name="Web Fetch Tool &gt; createWebFetchTool &gt; should create a valid tool definition" time="0.003146333">
            <failure message="Cannot read properties of undefined (reading &apos;requireMock&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;requireMock&apos;)
 ❯ tests/tools/unit/web-fetch.test.ts:41:10
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/web-fetch.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should extract URLs from prompt and fetch content" time="0.000238208">
            <failure message="Cannot read properties of undefined (reading &apos;requireMock&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;requireMock&apos;)
 ❯ tests/tools/unit/web-fetch.test.ts:41:10
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/web-fetch.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should handle multiple URLs" time="0.000305458">
            <failure message="Cannot read properties of undefined (reading &apos;requireMock&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;requireMock&apos;)
 ❯ tests/tools/unit/web-fetch.test.ts:41:10
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/web-fetch.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should respect max_urls limit" time="0.000184541">
            <failure message="Cannot read properties of undefined (reading &apos;requireMock&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;requireMock&apos;)
 ❯ tests/tools/unit/web-fetch.test.ts:41:10
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/web-fetch.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should handle failed fetch requests" time="0.000146125">
            <failure message="Cannot read properties of undefined (reading &apos;requireMock&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;requireMock&apos;)
 ❯ tests/tools/unit/web-fetch.test.ts:41:10
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/web-fetch.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should handle mixed success and failure" time="0.000145708">
            <failure message="Cannot read properties of undefined (reading &apos;requireMock&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;requireMock&apos;)
 ❯ tests/tools/unit/web-fetch.test.ts:41:10
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/web-fetch.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should handle unsupported content types" time="0.000167791">
            <failure message="Cannot read properties of undefined (reading &apos;requireMock&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;requireMock&apos;)
 ❯ tests/tools/unit/web-fetch.test.ts:41:10
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/web-fetch.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should handle no valid URLs" time="0.000160041">
            <failure message="Cannot read properties of undefined (reading &apos;requireMock&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;requireMock&apos;)
 ❯ tests/tools/unit/web-fetch.test.ts:41:10
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/web-fetch.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should return raw HTML when extract_text_only is false" time="0.000283541">
            <failure message="Cannot read properties of undefined (reading &apos;requireMock&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;requireMock&apos;)
 ❯ tests/tools/unit/web-fetch.test.ts:41:10
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/web-fetch.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should handle network errors" time="0.000205208">
            <failure message="Cannot read properties of undefined (reading &apos;requireMock&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;requireMock&apos;)
 ❯ tests/tools/unit/web-fetch.test.ts:41:10
            </failure>
        </testcase>
        <testcase classname="tests/tools/unit/web-fetch.test.ts" name="Web Fetch Tool &gt; executeWebFetch &gt; should truncate very long content" time="0.001005">
            <failure message="Cannot read properties of undefined (reading &apos;requireMock&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;requireMock&apos;)
 ❯ tests/tools/unit/web-fetch.test.ts:41:10
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ui/themes/theme-manager.test.ts" timestamp="2025-07-06T18:54:21.362Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/ui/themes/theme-manager.test.ts" name="tests/ui/themes/theme-manager.test.ts" time="0">
            <failure message="Transform failed with 1 error:
/Users/sethford/Downloads/Projects/vibex/tests/ui/themes/theme-manager.test.ts:12:7: ERROR: Expected &quot;as&quot; but found &quot;{&quot;" type="Error">
Error: Transform failed with 1 error:
/Users/sethford/Downloads/Projects/vibex/tests/ui/themes/theme-manager.test.ts:12:7: ERROR: Expected &quot;as&quot; but found &quot;{&quot;
  Plugin: vite:esbuild
  File: /Users/sethford/Downloads/Projects/vibex/tests/ui/themes/theme-manager.test.ts:12:7
  
  Expected &quot;as&quot; but found &quot;{&quot;
  10 |  
  11 |  import { 
  12 |  import { describe, it, test, expect, beforeEach, afterEach, beforeAll, afterAll, vi } from &apos;vitest&apos;;
     |         ^
  13 |    themes, 
  14 |    themeOptions, 
  
 ❯ failureErrorWithLog node_modules/esbuild/lib/main.js:1463:15
 ❯ node_modules/esbuild/lib/main.js:734:50
 ❯ responseCallbacks.&lt;computed&gt; node_modules/esbuild/lib/main.js:601:9
 ❯ handleIncomingPacket node_modules/esbuild/lib/main.js:656:12
 ❯ Socket.readFromStdout node_modules/esbuild/lib/main.js:579:7
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ui/themes/theme.test.ts" timestamp="2025-07-06T18:54:21.362Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/ui/themes/theme.test.ts" name="tests/ui/themes/theme.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../../src/ui/themes/default.js&quot; from &quot;tests/ui/themes/theme.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../src/ui/themes/default.js&quot; from &quot;tests/ui/themes/theme.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/tests/ui/themes/theme.test.ts:13:29
  4  |   * SPDX-License-Identifier: MIT
  5  |   */
  6  |  import { defaultTheme } from &quot;../../../src/ui/themes/default.js&quot;;
     |                                ^
  7  |  import { describe, it, expect } from &quot;vitest&quot;;
  8  |  describe(&quot;Theme Types&quot;, () =&gt; {
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ui/integration/mcp-tool-ui-integration.test.tsx" timestamp="2025-07-06T18:54:21.363Z" hostname="Seths-MacBook-Pro.local" tests="6" failures="5" errors="0" skipped="0" time="0.112984625">
        <testcase classname="tests/ui/integration/mcp-tool-ui-integration.test.tsx" name="MCP Tool UI Integration &gt; MCPToolConfirmation Integration &gt; should render confirmation dialog with correct details" time="0.038796917">
            <failure message="expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Test MCP Tool&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Test MCP Tool&apos;

- Expected
+ Received

- Test MCP Tool
+
+   ERROR  undefined is not iterable (cannot read property Symbol(Symbol.iterator))
+
+  src/ui/hooks/useToolConfirmation.ts:42:25
+
+  39:  */
+  40: export function useToolConfirmation() {
+  41:   // State for tracking confirmation state
+  42:   const [state, setState] = useState&lt;ToolConfirmationState&gt;({
+  43:     isConfirmationActive: false,
+  44:     confirmationDetails: null,
+  45:     confirmationPromise: null,
+
+  - useToolConfirmation (src/ui/hooks/useToolConfirmation.ts:42:25)
+  - TestConfirmationComponent (tests/ui/integration/mcp-tool-ui-integration.test.tsx:36:7)
+  -Object.react-stack-bottom-fr (node_modules/react-reconciler/cjs/react-reconciler.development.js:1
+   me                          5859:20)
+  - renderWithHooks (node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:22)
+  -updateFunctionComponent (node_modules/react-reconciler/cjs/react-reconciler.development.js:6475:1
+                          9)
+  - beginWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12834:22)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+

 ❯ tests/ui/integration/mcp-tool-ui-integration.test.tsx:157:27
            </failure>
        </testcase>
        <testcase classname="tests/ui/integration/mcp-tool-ui-integration.test.tsx" name="MCP Tool UI Integration &gt; MCPToolConfirmation Integration &gt; should handle confirmation selection" time="0.018770333">
            <failure message="(0 , waitFor) is not a function" type="TypeError">
TypeError: (0 , waitFor) is not a function
 ❯ tests/ui/integration/mcp-tool-ui-integration.test.tsx:174:13
            </failure>
        </testcase>
        <testcase classname="tests/ui/integration/mcp-tool-ui-integration.test.tsx" name="MCP Tool UI Integration &gt; ToolProgressFeedback Integration &gt; should render progress feedback with correct details" time="0.012938584">
            <failure message="expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Processing data...&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Processing data...&apos;

- Expected
+ Received

- Processing data...
+
+   ERROR  undefined is not iterable (cannot read property Symbol(Symbol.iterator))
+
+  src/ui/hooks/useToolProgress.ts:29:25
+
+  26:  */
+  27: export function useToolProgress() {
+  28:   // State for tracking progress of multiple tools
+  29:   const [state, setState] = useState&lt;ToolProgressState&gt;({
+  30:     progressItems: new Map(),
+  31:     toolCalls: new Map()
+  32:   });
+
+  - useToolProgress (src/ui/hooks/useToolProgress.ts:29:25)
+  - TestProgressComponent (tests/ui/integration/mcp-tool-ui-integration.test.tsx:91:48)
+  -Object.react-stack-bottom-fr (node_modules/react-reconciler/cjs/react-reconciler.development.js:1
+   me                          5859:20)
+  - renderWithHooks (node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:22)
+  -updateFunctionComponent (node_modules/react-reconciler/cjs/react-reconciler.development.js:6475:1
+                          9)
+  - beginWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12834:22)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+

 ❯ tests/ui/integration/mcp-tool-ui-integration.test.tsx:189:27
            </failure>
        </testcase>
        <testcase classname="tests/ui/integration/mcp-tool-ui-integration.test.tsx" name="MCP Tool UI Integration &gt; ToolProgressFeedback Integration &gt; should update progress display when status changes" time="0.017619208">
            <failure message="expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;100%&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;100%&apos;

- Expected
+ Received

- 100%
+
+   ERROR  undefined is not iterable (cannot read property Symbol(Symbol.iterator))
+
+  src/ui/hooks/useToolProgress.ts:29:25
+
+  26:  */
+  27: export function useToolProgress() {
+  28:   // State for tracking progress of multiple tools
+  29:   const [state, setState] = useState&lt;ToolProgressState&gt;({
+  30:     progressItems: new Map(),
+  31:     toolCalls: new Map()
+  32:   });
+
+  - useToolProgress (src/ui/hooks/useToolProgress.ts:29:25)
+  - TestProgressComponent (tests/ui/integration/mcp-tool-ui-integration.test.tsx:91:48)
+  -Object.react-stack-bottom-fr (node_modules/react-reconciler/cjs/react-reconciler.development.js:1
+   me                          5859:20)
+  - renderWithHooks (node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:22)
+  -updateFunctionComponent (node_modules/react-reconciler/cjs/react-reconciler.development.js:6475:1
+                          9)
+  - beginWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12834:22)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+

 ❯ tests/ui/integration/mcp-tool-ui-integration.test.tsx:199:27
            </failure>
        </testcase>
        <testcase classname="tests/ui/integration/mcp-tool-ui-integration.test.tsx" name="MCP Tool UI Integration &gt; ToolProgressFeedback Integration &gt; should handle indeterminate progress" time="0.014342708">
        </testcase>
        <testcase classname="tests/ui/integration/mcp-tool-ui-integration.test.tsx" name="MCP Tool UI Integration &gt; ToolProgressFeedback Integration &gt; should handle error status" time="0.009768375">
            <failure message="expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;✗&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;✗&apos;

- Expected
+ Received

- ✗
+
+   ERROR  undefined is not iterable (cannot read property Symbol(Symbol.iterator))
+
+  src/ui/hooks/useToolProgress.ts:29:25
+
+  26:  */
+  27: export function useToolProgress() {
+  28:   // State for tracking progress of multiple tools
+  29:   const [state, setState] = useState&lt;ToolProgressState&gt;({
+  30:     progressItems: new Map(),
+  31:     toolCalls: new Map()
+  32:   });
+
+  - useToolProgress (src/ui/hooks/useToolProgress.ts:29:25)
+  - TestProgressComponent (tests/ui/integration/mcp-tool-ui-integration.test.tsx:91:48)
+  -Object.react-stack-bottom-fr (node_modules/react-reconciler/cjs/react-reconciler.development.js:1
+   me                          5859:20)
+  - renderWithHooks (node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:22)
+  -updateFunctionComponent (node_modules/react-reconciler/cjs/react-reconciler.development.js:6475:1
+                          9)
+  - beginWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12834:22)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+

 ❯ tests/ui/integration/mcp-tool-ui-integration.test.tsx:219:27
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ui/e2e/accessibility.test.tsx" timestamp="2025-07-06T18:54:21.363Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="0" errors="0" skipped="1" time="0">
        <testcase classname="tests/ui/e2e/accessibility.test.tsx" name="Accessibility Tests &gt; should be accessible with screen readers" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="tests/ui/e2e/keyboard-navigation.test.tsx" timestamp="2025-07-06T18:54:21.363Z" hostname="Seths-MacBook-Pro.local" tests="7" failures="1" errors="0" skipped="1" time="0.008937292">
        <testcase classname="tests/ui/e2e/keyboard-navigation.test.tsx" name="Keyboard Navigation Tests &gt; registers essential keyboard shortcuts" time="0.007131208">
            <failure message="expected [] to include &apos;h&apos;" type="AssertionError">
AssertionError: expected [] to include &apos;h&apos;
 ❯ tests/ui/e2e/keyboard-navigation.test.tsx:101:26
            </failure>
        </testcase>
        <testcase classname="tests/ui/e2e/keyboard-navigation.test.tsx" name="Keyboard Navigation Tests &gt; handles dialog focus management" time="0.0002325">
        </testcase>
        <testcase classname="tests/ui/e2e/keyboard-navigation.test.tsx" name="Keyboard Navigation Tests &gt; handles settings dialog keyboard navigation" time="0.000126791">
        </testcase>
        <testcase classname="tests/ui/e2e/keyboard-navigation.test.tsx" name="Keyboard Navigation Tests &gt; handles accessibility settings dialog keyboard navigation" time="0.000114708">
        </testcase>
        <testcase classname="tests/ui/e2e/keyboard-navigation.test.tsx" name="Keyboard Navigation Tests &gt; handles shortcut conflicts correctly" time="0.000430958">
        </testcase>
        <testcase classname="tests/ui/e2e/keyboard-navigation.test.tsx" name="Keyboard Navigation Tests &gt; respects keyboard-only navigation for all UI elements" time="0.000120209">
        </testcase>
        <testcase classname="tests/ui/e2e/keyboard-navigation.test.tsx" name="Keyboard Navigation Tests &gt; should handle keyboard shortcuts" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/core/turn/turn-manager.test.ts" timestamp="2025-07-06T18:54:21.364Z" hostname="Seths-MacBook-Pro.local" tests="6" failures="5" errors="0" skipped="0" time="0.014973709">
        <testcase classname="src/core/turn/turn-manager.test.ts" name="TurnManager &gt; execute &gt; should handle a simple conversation turn" time="0.004709917">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ &apos;Hello&apos; ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ &apos;Hello&apos; ]

Number of calls: 0

 ❯ src/core/turn/turn-manager.test.ts:92:30
            </failure>
        </testcase>
        <testcase classname="src/core/turn/turn-manager.test.ts" name="TurnManager &gt; execute &gt; should throw error if turn is already in progress" time="0.001189875">
        </testcase>
        <testcase classname="src/core/turn/turn-manager.test.ts" name="TurnManager &gt; tool calls &gt; should handle tool calls correctly" time="0.00375025">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ ObjectContaining{…} ]

Number of calls: 0

 ❯ src/core/turn/turn-manager.test.ts:125:31
            </failure>
        </testcase>
        <testcase classname="src/core/turn/turn-manager.test.ts" name="TurnManager &gt; tool calls &gt; should handle tool results" time="0.001950792">
            <failure message="No pending tool calls to process" type="Error">
Error: No pending tool calls to process
 ❯ TurnManager.submitToolResult src/core/turn/turn-manager.ts:181:13
 ❯ src/core/turn/turn-manager.test.ts:155:44
            </failure>
        </testcase>
        <testcase classname="src/core/turn/turn-manager.test.ts" name="TurnManager &gt; state management &gt; should track messages correctly" time="0.001922458">
            <failure message="expected [ { role: &apos;user&apos;, content: &apos;Hello&apos; } ] to have a length of 2 but got 1" type="AssertionError">
AssertionError: expected [ { role: &apos;user&apos;, content: &apos;Hello&apos; } ] to have a length of 2 but got 1

- Expected
+ Received

- 2
+ 1

 ❯ src/core/turn/turn-manager.test.ts:181:24
            </failure>
        </testcase>
        <testcase classname="src/core/turn/turn-manager.test.ts" name="TurnManager &gt; state management &gt; should reset state correctly" time="0.000458416">
            <failure message="expected [ { role: &apos;user&apos;, content: &apos;Hello&apos; } ] to have a length of 2 but got 1" type="AssertionError">
AssertionError: expected [ { role: &apos;user&apos;, content: &apos;Hello&apos; } ] to have a length of 2 but got 1

- Expected
+ Received

- 2
+ 1

 ❯ src/core/turn/turn-manager.test.ts:188:41
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/services/commands/command-registry-service.test.ts" timestamp="2025-07-06T18:54:21.364Z" hostname="Seths-MacBook-Pro.local" tests="29" failures="0" errors="0" skipped="0" time="0.00850525">
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Registration &gt; should register a command successfully" time="0.001545625">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Registration &gt; should return unregister function that works" time="0.000195792">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Registration &gt; should replace existing command with same id" time="0.000131417">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Registration &gt; should register commands with aliases" time="0.000132416">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Registration &gt; should register commands with categories" time="0.000895917">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Validation &gt; should reject command without id" time="0.001274417">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Validation &gt; should reject command without name" time="0.000184125">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Validation &gt; should reject command without description" time="0.000145917">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Validation &gt; should reject command without handler" time="0.000136542">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Validation &gt; should reject command with invalid aliases" time="0.0001365">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Validation &gt; should reject command with duplicate name" time="0.000134667">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Multiple Command Registration &gt; should register multiple commands" time="0.000164166">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Multiple Command Registration &gt; should rollback on error during batch registration" time="0.000176208">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Multiple Command Registration &gt; should unregister all commands when batch unregister is called" time="0.000113708">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Lookup &gt; should find command by name" time="0.000124917">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Lookup &gt; should find command by alias" time="0.000104708">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Lookup &gt; should return null for non-existent command" time="0.000079083">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Lookup &gt; should check command existence" time="0.000115709">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Organization &gt; should get all commands" time="0.000160792">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Organization &gt; should get visible commands only" time="0.000135208">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Organization &gt; should get commands by category" time="0.000125208">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Organization &gt; should get all categories" time="0.00056325">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Organization &gt; should return empty array for non-existent category" time="0.000088083">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Unregistration &gt; should unregister command by id" time="0.000135333">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Unregistration &gt; should return false for non-existent command" time="0.000064958">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Unregistration &gt; should clean up aliases when unregistering" time="0.000067375">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Command Unregistration &gt; should clean up categories when unregistering" time="0.000100125">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Service Management &gt; should clear all commands" time="0.000133666">
        </testcase>
        <testcase classname="src/services/commands/command-registry-service.test.ts" name="CommandRegistryService &gt; Service Management &gt; should get accurate command count" time="0.000089625">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/contexts/ProgressContext.test.tsx" timestamp="2025-07-06T18:54:21.366Z" hostname="Seths-MacBook-Pro.local" tests="15" failures="14" errors="0" skipped="0" time="0.027399125">
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; provides the initial empty state" time="0.012064958">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; starts a new progress with default values" time="0.001588">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; starts a new progress with custom values" time="0.001140833">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; updates an existing progress" time="0.00107525">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; calculates progress rate and estimated time remaining" time="0.001060125">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; completes a progress" time="0.000956333">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; toggles indeterminate state" time="0.000932208">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; checks if progress exists" time="0.000923417">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; updates progress steps" time="0.000947417">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; starts a new step" time="0.000921792">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; completes the current step" time="0.000923417">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; sets progress status" time="0.000962709">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; handles updates to non-existent progress items gracefully" time="0.00091875">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; throws error when useProgress is used outside of ProgressProvider" time="0.001159042">
        </testcase>
        <testcase classname="src/ui/contexts/ProgressContext.test.tsx" name="ProgressContext &gt; updates time estimates periodically" time="0.001022542">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/contexts/SessionContext.test.tsx" timestamp="2025-07-06T18:54:21.368Z" hostname="Seths-MacBook-Pro.local" tests="12" failures="9" errors="0" skipped="0" time="0.021155459">
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionContext &gt; provides the default initial state" time="0.01081325">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ SessionProvider src/ui/contexts/SessionContext.tsx:69:29
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionContext &gt; adds items to history correctly" time="0.001149708">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ SessionProvider src/ui/contexts/SessionContext.tsx:69:29
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionContext &gt; clears history items correctly" time="0.000936542">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ SessionProvider src/ui/contexts/SessionContext.tsx:69:29
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionContext &gt; loads history from external source" time="0.000926375">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ SessionProvider src/ui/contexts/SessionContext.tsx:69:29
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionContext &gt; updates stats correctly" time="0.00073875">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ SessionProvider src/ui/contexts/SessionContext.tsx:69:29
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionContext &gt; useHistory hook provides the correct subset of functionality" time="0.00066625">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ SessionProvider src/ui/contexts/SessionContext.tsx:69:29
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionContext &gt; useSessionStats hook provides the correct subset of functionality" time="0.000652875">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ SessionProvider src/ui/contexts/SessionContext.tsx:69:29
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionContext &gt; utility functions add messages with correct types" time="0.00061975">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ SessionProvider src/ui/contexts/SessionContext.tsx:69:29
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionContext &gt; throws error when useSession is used outside of SessionProvider" time="0.001246666">
        </testcase>
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionContext &gt; throws error when useHistory is used outside of SessionProvider" time="0.000875416">
        </testcase>
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionContext &gt; throws error when useSessionStats is used outside of SessionProvider" time="0.00082475">
        </testcase>
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionStatsProvider &gt; renders the SessionProvider correctly" time="0.000833417">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ SessionProvider src/ui/contexts/SessionContext.tsx:69:29
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/contexts/ThemeContext.test.tsx" timestamp="2025-07-06T18:54:21.370Z" hostname="Seths-MacBook-Pro.local" tests="11" failures="10" errors="0" skipped="0" time="0.019550083">
        <testcase classname="src/ui/contexts/ThemeContext.test.tsx" name="ThemeContext &gt; provides the default dark theme when no theme is specified" time="0.010693542">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ThemeContext.test.tsx" name="ThemeContext &gt; provides the specified initial theme" time="0.000908541">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ThemeContext.test.tsx" name="ThemeContext &gt; provides the specified initial theme mode" time="0.00075125">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ThemeContext.test.tsx" name="ThemeContext &gt; changes theme when setThemeByName is called" time="0.0009995">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ThemeContext.test.tsx" name="ThemeContext &gt; changes theme mode when setThemeMode is called" time="0.000733166">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ThemeContext.test.tsx" name="ThemeContext &gt; toggles theme mode when toggleThemeMode is called" time="0.00067">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ThemeContext.test.tsx" name="ThemeContext &gt; toggles from system theme to the opposite of system preference" time="0.000762709">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ThemeContext.test.tsx" name="ThemeContext &gt; saves theme preference to localStorage" time="0.00069675">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ThemeContext.test.tsx" name="ThemeContext &gt; loads theme preference from localStorage" time="0.000740792">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ThemeContext.test.tsx" name="ThemeContext &gt; handles system theme preference changes" time="0.000694208">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/contexts/ThemeContext.test.tsx" name="ThemeContext &gt; throws error when useTheme is used outside of ThemeProvider" time="0.001032875">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useAutoAcceptIndicator.test.tsx" timestamp="2025-07-06T18:54:21.372Z" hostname="Seths-MacBook-Pro.local" tests="9" failures="9" errors="0" skipped="0" time="0.021348958">
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.tsx" name="useAutoAcceptIndicator Hook &gt; initializes with hidden indicator by default" time="0.0142105">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useAutoAcceptIndicator src/ui/hooks/useAutoAcceptIndicator.ts:31:61
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:35:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:29:10
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.tsx" name="useAutoAcceptIndicator Hook &gt; shows indicator when requested if auto-accept is enabled" time="0.001097">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useAutoAcceptIndicator src/ui/hooks/useAutoAcceptIndicator.ts:31:61
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:41:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:29:10
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.tsx" name="useAutoAcceptIndicator Hook &gt; does not show indicator when requested if auto-accept is disabled" time="0.000843667">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useAutoAcceptIndicator src/ui/hooks/useAutoAcceptIndicator.ts:31:61
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:51:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:29:10
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.tsx" name="useAutoAcceptIndicator Hook &gt; hides indicator when requested" time="0.000736792">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useAutoAcceptIndicator src/ui/hooks/useAutoAcceptIndicator.ts:31:61
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:61:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:29:10
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.tsx" name="useAutoAcceptIndicator Hook &gt; starts countdown when requested if auto-accept is enabled" time="0.0008">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useAutoAcceptIndicator src/ui/hooks/useAutoAcceptIndicator.ts:31:61
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:80:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:29:10
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.tsx" name="useAutoAcceptIndicator Hook &gt; does not start countdown when requested if auto-accept is disabled" time="0.000694375">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useAutoAcceptIndicator src/ui/hooks/useAutoAcceptIndicator.ts:31:61
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:106:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:29:10
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.tsx" name="useAutoAcceptIndicator Hook &gt; cancels countdown when requested" time="0.00063325">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useAutoAcceptIndicator src/ui/hooks/useAutoAcceptIndicator.ts:31:61
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:126:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:29:10
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.tsx" name="useAutoAcceptIndicator Hook &gt; clears timeout when starting a new countdown" time="0.000685709">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useAutoAcceptIndicator src/ui/hooks/useAutoAcceptIndicator.ts:31:61
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:155:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:29:10
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.tsx" name="useAutoAcceptIndicator Hook &gt; cleans up timeout on unmount" time="0.000697958">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useAutoAcceptIndicator src/ui/hooks/useAutoAcceptIndicator.ts:31:61
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:179:50
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/hooks/useAutoAcceptIndicator.test.tsx:29:10
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useProgressBar.test.tsx" timestamp="2025-07-06T18:54:21.374Z" hostname="Seths-MacBook-Pro.local" tests="6" failures="6" errors="0" skipped="0" time="0.021601167">
        <testcase classname="src/ui/hooks/useProgressBar.test.tsx" name="useProgressBar Hook &gt; initializes with default options" time="0.014587584">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useProgressBar.test.tsx" name="useProgressBar Hook &gt; initializes with custom options" time="0.001527583">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useProgressBar.test.tsx" name="useProgressBar Hook &gt; updates progress value and message" time="0.00132975">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useProgressBar.test.tsx" name="useProgressBar Hook &gt; completes progress" time="0.001096042">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useProgressBar.test.tsx" name="useProgressBar Hook &gt; toggles indeterminate state" time="0.001159291">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useProgressBar.test.tsx" name="useProgressBar Hook &gt; renders with ProgressDisplay component" time="0.001064375">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ProgressProvider src/ui/contexts/ProgressContext.tsx:181:41
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useSettings.test.tsx" timestamp="2025-07-06T18:54:21.375Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useSettings.test.tsx" name="src/ui/hooks/useSettings.test.tsx" time="0">
            <failure message="[vitest] No &quot;default&quot; export is defined on the &quot;fs&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;default&quot; export is defined on the &quot;fs&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;fs&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ src/ui/hooks/useSettings.ts:9:28
 ❯ src/ui/hooks/useSettings.test.tsx:12:1
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useTemplateManager.test.ts" timestamp="2025-07-06T18:54:21.375Z" hostname="Seths-MacBook-Pro.local" tests="16" failures="16" errors="0" skipped="0" time="0.025458875">
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; initializes automatically by default" time="0.011685042">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:116:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; does not initialize automatically when autoInitialize is false" time="0.001152333">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:143:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; initializes manually when initialize function is called" time="0.001029416">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:165:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; handles initialization errors gracefully" time="0.000995291">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:186:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; searches for templates with the provided options" time="0.000973083">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:200:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; creates a new template" time="0.000811291">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:225:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; updates an existing template" time="0.0007765">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:261:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; deletes a template" time="0.000750334">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:296:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; instantiates a template" time="0.000794292">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:320:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; exports templates" time="0.000747209">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:346:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; imports templates" time="0.000807">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:367:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; refreshes templates when called directly" time="0.0009615">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:391:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; clears error state when clearError is called" time="0.000861333">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:418:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; sets up event listeners when enableRealTimeUpdates is true" time="0.00078425">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:438:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; does not set up event listeners when enableRealTimeUpdates is false" time="0.000731125">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:453:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useTemplateManager.test.ts" name="useTemplateManager Hook &gt; cleans up event listeners on unmount" time="0.000754125">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useTemplateManager src/ui/hooks/useTemplateManager.ts:38:33
 ❯ src/ui/hooks/useTemplateManager.test.ts:465:50
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/AccessibilitySettings.test.tsx" timestamp="2025-07-06T18:54:21.378Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0.0137525">
        <testcase classname="src/ui/components/AccessibilitySettings.test.tsx" name="AccessibilitySettings &gt; renders without crashing" time="0.012177417">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ AccessibilitySettings src/ui/components/AccessibilitySettings.tsx:105:53
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/AccessibleText.test.tsx" timestamp="2025-07-06T18:54:21.378Z" hostname="Seths-MacBook-Pro.local" tests="9" failures="5" errors="0" skipped="0" time="0.023936292">
        <testcase classname="src/ui/components/AccessibleText.test.tsx" name="AccessibleText Component &gt; renders basic text correctly" time="0.013571334">
        </testcase>
        <testcase classname="src/ui/components/AccessibleText.test.tsx" name="AccessibleText Component &gt; formats text for screen readers when enabled" time="0.00088725">
        </testcase>
        <testcase classname="src/ui/components/AccessibleText.test.tsx" name="AccessibleText Component &gt; applies ARIA attributes" time="0.003950625">
            <failure message="Unable to find an element by: [data-testid=&quot;accessible-text&quot;]

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [0mLoading[0m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element by: [data-testid=&quot;accessible-text&quot;]

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    Loading
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/AccessibleText.test.tsx:40:21
            </failure>
        </testcase>
        <testcase classname="src/ui/components/AccessibleText.test.tsx" name="AccessibleText Component &gt; applies text formatting correctly" time="0.000698917">
        </testcase>
        <testcase classname="src/ui/components/AccessibleText.test.tsx" name="AccessibleText Component &gt; converts non-string children to strings" time="0.000658042">
        </testcase>
        <testcase classname="src/ui/components/AccessibleText.test.tsx" name="Heading Component &gt; renders level 1 heading with correct styling" time="0.001210833">
            <failure message="Unable to find an element by: [data-testid=&quot;accessible-text&quot;]

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [0mMain Heading[0m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element by: [data-testid=&quot;accessible-text&quot;]

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    Main Heading
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/AccessibleText.test.tsx:73:21
            </failure>
        </testcase>
        <testcase classname="src/ui/components/AccessibleText.test.tsx" name="Heading Component &gt; renders level 2 heading with correct styling" time="0.000756917">
            <failure message="Unable to find an element by: [data-testid=&quot;accessible-text&quot;]

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [0mSubheading[0m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element by: [data-testid=&quot;accessible-text&quot;]

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    Subheading
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/AccessibleText.test.tsx:83:21
            </failure>
        </testcase>
        <testcase classname="src/ui/components/AccessibleText.test.tsx" name="Heading Component &gt; renders level 3 heading with correct styling" time="0.000706916">
            <failure message="Unable to find an element by: [data-testid=&quot;accessible-text&quot;]

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [0mMinor Heading[0m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element by: [data-testid=&quot;accessible-text&quot;]

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    Minor Heading
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/AccessibleText.test.tsx:93:21
            </failure>
        </testcase>
        <testcase classname="src/ui/components/AccessibleText.test.tsx" name="Heading Component &gt; includes description in aria-label" time="0.000624958">
            <failure message="Unable to find an element by: [data-testid=&quot;accessible-text&quot;]

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [0mSection Title[0m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element by: [data-testid=&quot;accessible-text&quot;]

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    Section Title
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/AccessibleText.test.tsx:102:21
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/AutoAcceptIndicator.test.tsx" timestamp="2025-07-06T18:54:21.379Z" hostname="Seths-MacBook-Pro.local" tests="4" failures="4" errors="0" skipped="0" time="0.01483825">
        <testcase classname="src/ui/components/AutoAcceptIndicator.test.tsx" name="AutoAcceptIndicator Component &gt; does not render anything in DEFAULT mode" time="0.011118459">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/AutoAcceptIndicator.test.tsx" name="AutoAcceptIndicator Component &gt; renders AUTO-ACCEPT text in AUTO_ACCEPT mode" time="0.001197916">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/AutoAcceptIndicator.test.tsx" name="AutoAcceptIndicator Component &gt; renders AUTO-REJECT text in AUTO_REJECT mode" time="0.000970958">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/AutoAcceptIndicator.test.tsx" name="AutoAcceptIndicator Component &gt; uses different styles for different modes" time="0.000751792">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/ClipboardActions.test.tsx" timestamp="2025-07-06T18:54:21.379Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/components/ClipboardActions.test.tsx" name="src/ui/components/ClipboardActions.test.tsx" time="0">
            <failure message="No test suite found in file /Users/sethford/Downloads/Projects/vibex/src/ui/components/ClipboardActions.test.tsx" type="Error">
Error: No test suite found in file /Users/sethford/Downloads/Projects/vibex/src/ui/components/ClipboardActions.test.tsx
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/ClipboardNotification.test.tsx" timestamp="2025-07-06T18:54:21.380Z" hostname="Seths-MacBook-Pro.local" tests="5" failures="5" errors="0" skipped="0" time="0.021744">
        <testcase classname="src/ui/components/ClipboardNotification.test.tsx" name="ClipboardNotification Component &gt; renders notification message" time="0.013845375">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/ClipboardNotification.test.tsx:23:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ClipboardNotification.test.tsx" name="ClipboardNotification Component &gt; automatically dismisses after duration" time="0.001416542">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/ClipboardNotification.test.tsx:23:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ClipboardNotification.test.tsx" name="ClipboardNotification Component &gt; applies appropriate color based on type" time="0.003801083">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/ClipboardNotification.test.tsx:23:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ClipboardNotification.test.tsx" name="ClipboardNotification Component &gt; cleans up timeout when unmounted" time="0.0009265">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/ClipboardNotification.test.tsx:23:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ClipboardNotification.test.tsx" name="ClipboardNotification Component &gt; renders with default duration when not specified" time="0.000810583">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/ClipboardNotification.test.tsx:23:10
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/DetailedProgressInfo.test.tsx" timestamp="2025-07-06T18:54:21.381Z" hostname="Seths-MacBook-Pro.local" tests="6" failures="6" errors="0" skipped="0" time="0.019059084">
        <testcase classname="src/ui/components/DetailedProgressInfo.test.tsx" name="DetailedProgressInfo Component &gt; renders with minimal props" time="0.012641959">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/DetailedProgressInfo.test.tsx" name="DetailedProgressInfo Component &gt; displays message when provided" time="0.001340042">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/DetailedProgressInfo.test.tsx" name="DetailedProgressInfo Component &gt; shows detailed info when expanded" time="0.001229375">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/DetailedProgressInfo.test.tsx" name="DetailedProgressInfo Component &gt; shows remaining time when provided" time="0.001092166">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/DetailedProgressInfo.test.tsx" name="DetailedProgressInfo Component &gt; shows steps when provided" time="0.00094025">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/DetailedProgressInfo.test.tsx" name="DetailedProgressInfo Component &gt; shows completed timestamp when finished" time="0.00072225">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/DiffRenderer.test.tsx" timestamp="2025-07-06T18:54:21.382Z" hostname="Seths-MacBook-Pro.local" tests="9" failures="9" errors="0" skipped="0" time="0.026785041">
        <testcase classname="src/ui/components/DiffRenderer.test.tsx" name="DiffRenderer Component &gt; renders with default props" time="0.020096291">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/DiffRenderer.test.tsx" name="DiffRenderer Component &gt; shows added lines" time="0.0009595">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/DiffRenderer.test.tsx" name="DiffRenderer Component &gt; shows removed lines" time="0.000807083">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/DiffRenderer.test.tsx" name="DiffRenderer Component &gt; shows unchanged lines" time="0.000709875">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/DiffRenderer.test.tsx" name="DiffRenderer Component &gt; shows file headers when enabled" time="0.000730542">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/DiffRenderer.test.tsx" name="DiffRenderer Component &gt; hides file headers when disabled" time="0.000646083">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/DiffRenderer.test.tsx" name="DiffRenderer Component &gt; limits context when specified" time="0.000688917">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/DiffRenderer.test.tsx" name="DiffRenderer Component &gt; handles empty input" time="0.000625125">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/DiffRenderer.test.tsx" name="DiffRenderer Component &gt; truncates long lines" time="0.000634375">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/ErrorDisplay.test.tsx" timestamp="2025-07-06T18:54:21.384Z" hostname="Seths-MacBook-Pro.local" tests="7" failures="7" errors="0" skipped="0" time="0.007543166">
        <testcase classname="src/ui/components/ErrorDisplay.test.tsx" name="ErrorDisplay component &gt; renders plain error message" time="0.004997209">
            <failure message="expected &apos;Mocked frame&apos; to contain &apos;Error: Something went wrong&apos;" type="AssertionError">
AssertionError: expected &apos;Mocked frame&apos; to contain &apos;Error: Something went wrong&apos;

Expected: &quot;Error: Something went wrong&quot;
Received: &quot;Mocked frame&quot;

 ❯ src/ui/components/ErrorDisplay.test.tsx:24:25
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ErrorDisplay.test.tsx" name="ErrorDisplay component &gt; renders Error object properly" time="0.00051425">
            <failure message="expected &apos;Mocked frame&apos; to contain &apos;Error: Test error message&apos;" type="AssertionError">
AssertionError: expected &apos;Mocked frame&apos; to contain &apos;Error: Test error message&apos;

Expected: &quot;Error: Test error message&quot;
Received: &quot;Mocked frame&quot;

 ❯ src/ui/components/ErrorDisplay.test.tsx:33:25
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ErrorDisplay.test.tsx" name="ErrorDisplay component &gt; renders user error with category and level" time="0.000359709">
            <failure message="expected &apos;Mocked frame&apos; to contain &apos;Error: Authentication failed&apos;" type="AssertionError">
AssertionError: expected &apos;Mocked frame&apos; to contain &apos;Error: Authentication failed&apos;

Expected: &quot;Error: Authentication failed&quot;
Received: &quot;Mocked frame&quot;

 ❯ src/ui/components/ErrorDisplay.test.tsx:46:25
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ErrorDisplay.test.tsx" name="ErrorDisplay component &gt; renders resolution steps from string" time="0.000251958">
            <failure message="expected &apos;Mocked frame&apos; to contain &apos;To resolve this issue:&apos;" type="AssertionError">
AssertionError: expected &apos;Mocked frame&apos; to contain &apos;To resolve this issue:&apos;

Expected: &quot;To resolve this issue:&quot;
Received: &quot;Mocked frame&quot;

 ❯ src/ui/components/ErrorDisplay.test.tsx:58:25
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ErrorDisplay.test.tsx" name="ErrorDisplay component &gt; renders resolution steps from array" time="0.000257916">
            <failure message="expected &apos;Mocked frame&apos; to contain &apos;To resolve this issue:&apos;" type="AssertionError">
AssertionError: expected &apos;Mocked frame&apos; to contain &apos;To resolve this issue:&apos;

Expected: &quot;To resolve this issue:&quot;
Received: &quot;Mocked frame&quot;

 ❯ src/ui/components/ErrorDisplay.test.tsx:76:25
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ErrorDisplay.test.tsx" name="ErrorDisplay component &gt; renders context information" time="0.000225667">
            <failure message="expected &apos;Mocked frame&apos; to contain &apos;Context:&apos;" type="AssertionError">
AssertionError: expected &apos;Mocked frame&apos; to contain &apos;Context:&apos;

Expected: &quot;Context:&quot;
Received: &quot;Mocked frame&quot;

 ❯ src/ui/components/ErrorDisplay.test.tsx:95:25
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ErrorDisplay.test.tsx" name="ErrorDisplay component &gt; renders user error with all properties" time="0.000285292">
            <failure message="expected &apos;Mocked frame&apos; to contain &apos;Error: Rate limit exceeded&apos;" type="AssertionError">
AssertionError: expected &apos;Mocked frame&apos; to contain &apos;Error: Rate limit exceeded&apos;

Expected: &quot;Error: Rate limit exceeded&quot;
Received: &quot;Mocked frame&quot;

 ❯ src/ui/components/ErrorDisplay.test.tsx:121:25
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/Footer.test.tsx" timestamp="2025-07-06T18:54:21.384Z" hostname="Seths-MacBook-Pro.local" tests="4" failures="4" errors="0" skipped="0" time="0.015387292">
        <testcase classname="src/ui/components/Footer.test.tsx" name="Footer Component &gt; renders footer with model and directory information" time="0.011732583">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Footer src/ui/components/Footer.tsx:122:37
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/Footer.test.tsx" name="Footer Component &gt; displays error count when errors are present" time="0.0010385">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Footer src/ui/components/Footer.tsx:122:37
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/Footer.test.tsx" name="Footer Component &gt; shows debug indicator when debug mode is enabled" time="0.000973125">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Footer src/ui/components/Footer.tsx:122:37
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/Footer.test.tsx" name="Footer Component &gt; displays token counts when provided" time="0.000828667">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Footer src/ui/components/Footer.tsx:122:37
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/Header.test.tsx" timestamp="2025-07-06T18:54:21.385Z" hostname="Seths-MacBook-Pro.local" tests="3" failures="3" errors="0" skipped="0" time="0.014776542">
        <testcase classname="src/ui/components/Header.test.tsx" name="Header Component &gt; renders full header with large terminal width" time="0.012207541">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/Header.test.tsx" name="Header Component &gt; renders compact header with small terminal width" time="0.000964541">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/Header.test.tsx" name="Header Component &gt; uses custom gradient colors when provided" time="0.000745667">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/HistoryItemDisplay.test.tsx" timestamp="2025-07-06T18:54:21.386Z" hostname="Seths-MacBook-Pro.local" tests="6" failures="6" errors="0" skipped="0" time="0.023971458">
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="HistoryItemDisplay Component &gt; renders user message correctly" time="0.016150125">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="HistoryItemDisplay Component &gt; renders assistant message correctly" time="0.001408333">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="HistoryItemDisplay Component &gt; renders error message correctly" time="0.0019385">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="HistoryItemDisplay Component &gt; renders pending message with typing indicator" time="0.001522459">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="HistoryItemDisplay Component &gt; renders tool use by delegating to ToolMessage component" time="0.001054792">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="HistoryItemDisplay Component &gt; returns null for empty items" time="0.00088375">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/InputPrompt.test.tsx" timestamp="2025-07-06T18:54:21.387Z" hostname="Seths-MacBook-Pro.local" tests="3" failures="3" errors="0" skipped="0" time="0.019090917">
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt Component &gt; renders correctly" time="0.013046833">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ InputPrompt src/ui/components/InputPrompt.tsx:138:39
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt Component &gt; does not submit empty input" time="0.001436208">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ InputPrompt src/ui/components/InputPrompt.tsx:138:39
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt Component &gt; handles clearing the screen with Ctrl+L" time="0.0031445">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ InputPrompt src/ui/components/InputPrompt.tsx:138:39
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/LoadingIndicator.test.tsx" timestamp="2025-07-06T18:54:21.388Z" hostname="Seths-MacBook-Pro.local" tests="5" failures="5" errors="0" skipped="0" time="0.014250125">
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should render nothing when no data and minimal elapsed time" time="0.01046275">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should render elapsed time with significant time passed" time="0.000945333">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should render loading phrase when provided" time="0.000752583">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should render thought when provided" time="0.000695875">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display time in minutes for longer duration" time="0.000673416">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/MiniProgressIndicator.test.tsx" timestamp="2025-07-06T18:54:21.389Z" hostname="Seths-MacBook-Pro.local" tests="6" failures="6" errors="0" skipped="0" time="0.028195917">
        <testcase classname="src/ui/components/MiniProgressIndicator.test.tsx" name="MiniProgressIndicator Component &gt; renders with default props" time="0.017632125">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/MiniProgressIndicator.test.tsx" name="MiniProgressIndicator Component &gt; shows label when provided" time="0.001175917">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/MiniProgressIndicator.test.tsx" name="MiniProgressIndicator Component &gt; shows percentage when showPercentage is true" time="0.00163775">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/MiniProgressIndicator.test.tsx" name="MiniProgressIndicator Component &gt; does not show percentage for indeterminate progress" time="0.005096459">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/MiniProgressIndicator.test.tsx" name="MiniProgressIndicator Component &gt; renders different sizes correctly" time="0.000952458">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/MiniProgressIndicator.test.tsx" name="MiniProgressIndicator Component &gt; animates indeterminate progress when animated is true" time="0.000791209">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/ProgressBar.test.tsx" timestamp="2025-07-06T18:54:21.390Z" hostname="Seths-MacBook-Pro.local" tests="18" failures="18" errors="0" skipped="0" time="0.026101875">
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="ProgressBar Component &gt; renders with default props" time="0.012329667">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="ProgressBar Component &gt; shows a label when provided" time="0.001001042">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="ProgressBar Component &gt; shows completion message when completed" time="0.00076775">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="ProgressBar Component &gt; does not show completion message when not completed" time="0.000677167">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="ProgressBar Component &gt; handles values greater than 100" time="0.000689291">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="ProgressBar Component &gt; handles negative values" time="0.000632667">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="ProgressBar Component &gt; hides percentage when showPercentage is false" time="0.000643333">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="ProgressBar Component &gt; shows steps when provided" time="0.000614041">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="ProgressBar Component &gt; shows time estimate when provided" time="0.000627125">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="ProgressBar Component &gt; handles animated transitions" time="0.001081208">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="IndeterminateProgressBar Component &gt; renders with default props" time="0.001442792">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/ProgressBar.test.tsx:164:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="IndeterminateProgressBar Component &gt; shows a label when provided" time="0.000604959">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/ProgressBar.test.tsx:164:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="IndeterminateProgressBar Component &gt; does not animate when active is false" time="0.000644708">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/ProgressBar.test.tsx:164:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="IndeterminateProgressBar Component &gt; animates when active is true" time="0.000551959">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/ProgressBar.test.tsx:164:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="IndeterminateProgressBar Component &gt; supports different animation styles" time="0.000584333">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/ProgressBar.test.tsx:164:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="MiniProgressIndicator Component &gt; renders in different sizes" time="0.000649292">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/ProgressBar.test.tsx:264:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="MiniProgressIndicator Component &gt; shows indeterminate state" time="0.00055575">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/ProgressBar.test.tsx:264:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ProgressBar.test.tsx" name="ProgressBar Component" time="0.020567417">
            <failure message="window.requestAnimationFrame.mockRestore is not a function" type="TypeError">
TypeError: window.requestAnimationFrame.mockRestore is not a function
 ❯ src/ui/components/ProgressBar.test.tsx:29:49
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/ShowMoreLines.test.tsx" timestamp="2025-07-06T18:54:21.393Z" hostname="Seths-MacBook-Pro.local" tests="12" failures="6" errors="0" skipped="0" time="0.028145708">
        <testcase classname="src/ui/components/ShowMoreLines.test.tsx" name="ShowMoreLines Component &gt; renders overflow information correctly" time="0.015355208">
            <failure message="Unable to find an element with the text: 10 more lines hidden (33% of content). This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [0m10 more lines hidden (33% of content)[0m
    [0mFocus this area for keyboard controls[0m
    [0mShowing [0m
    [0m20[0m
    [0m of [0m
    [0m30[0m
    [0m lines[0m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: 10 more lines hidden (33% of content). This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    10 more lines hidden (33% of content)
    Focus this area for keyboard controls
    Showing 
    20
     of 
    30
     lines
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/ShowMoreLines.test.tsx:45:12
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ShowMoreLines.test.tsx" name="ShowMoreLines Component &gt; does not render when there is no overflow" time="0.000833333">
        </testcase>
        <testcase classname="src/ui/components/ShowMoreLines.test.tsx" name="ShowMoreLines Component &gt; does not render when height is not constrained" time="0.000498458">
        </testcase>
        <testcase classname="src/ui/components/ShowMoreLines.test.tsx" name="ShowMoreLines Component &gt; does not render when there are no hidden lines" time="0.000470875">
        </testcase>
        <testcase classname="src/ui/components/ShowMoreLines.test.tsx" name="ShowMoreLines Component &gt; renders custom message when provided" time="0.002285417">
            <failure message="Unable to find an element with the text: Custom overflow message. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [0mCustom overflow message[0m
    [0mFocus this area for keyboard controls[0m
    [0mShowing [0m
    [0m20[0m
    [0m of [0m
    [0m30[0m
    [0m lines[0m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: Custom overflow message. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    Custom overflow message
    Focus this area for keyboard controls
    Showing 
    20
     of 
    30
     lines
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/ShowMoreLines.test.tsx:92:12
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ShowMoreLines.test.tsx" name="ShowMoreLines Component &gt; shows keyboard shortcuts when component is focused" time="0.001509625">
        </testcase>
        <testcase classname="src/ui/components/ShowMoreLines.test.tsx" name="ShowMoreLines Component &gt; shows focus instruction when not focused" time="0.000951041">
            <failure message="Unable to find an element with the text: Focus this area for keyboard controls. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [0m10 more lines hidden (33% of content)[0m
    [0mFocus this area for keyboard controls[0m
    [0mShowing [0m
    [0m20[0m
    [0m of [0m
    [0m30[0m
    [0m lines[0m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: Focus this area for keyboard controls. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    10 more lines hidden (33% of content)
    Focus this area for keyboard controls
    Showing 
    20
     of 
    30
     lines
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/ShowMoreLines.test.tsx:112:12
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ShowMoreLines.test.tsx" name="ShowMoreLines Component &gt; does not show shortcuts when showShortcuts is false" time="0.000698125">
        </testcase>
        <testcase classname="src/ui/components/ShowMoreLines.test.tsx" name="ShowMoreLines Component &gt; calls showAllContent when Ctrl+S is pressed and focused" time="0.0021095">
            <failure message="expected &quot;spy&quot; to be called 1 times, but got 0 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 1 times, but got 0 times
 ❯ src/ui/components/ShowMoreLines.test.tsx:135:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ShowMoreLines.test.tsx" name="ShowMoreLines Component &gt; calls toggleConstrainHeight when Ctrl+H is pressed and focused" time="0.000971417">
            <failure message="expected &quot;spy&quot; to be called 1 times, but got 0 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 1 times, but got 0 times
 ❯ src/ui/components/ShowMoreLines.test.tsx:150:51
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ShowMoreLines.test.tsx" name="ShowMoreLines Component &gt; calls resetToConstrained when Escape is pressed and focused" time="0.00085275">
            <failure message="expected &quot;spy&quot; to be called 1 times, but got 0 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 1 times, but got 0 times
 ❯ src/ui/components/ShowMoreLines.test.tsx:165:48
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ShowMoreLines.test.tsx" name="ShowMoreLines Component &gt; does not respond to keyboard shortcuts when not focused" time="0.000762916">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/StatusIcon.test.tsx" timestamp="2025-07-06T18:54:21.394Z" hostname="Seths-MacBook-Pro.local" tests="6" failures="6" errors="0" skipped="0" time="0.0176275">
        <testcase classname="src/ui/components/StatusIcon.test.tsx" name="StatusIcon Component &gt; renders different status types" time="0.010765625">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/StatusIcon.test.tsx" name="StatusIcon Component &gt; uses custom aria label when provided" time="0.000941208">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/StatusIcon.test.tsx" name="StatusIcon Component &gt; supports animation for running status" time="0.001448291">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/StatusIcon.test.tsx" name="StatusIcon Component &gt; renders all status types correctly" time="0.002249">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/StatusIcon.test.tsx" name="StatusIcon Component &gt; accepts custom color" time="0.000706542">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/StatusIcon.test.tsx" name="StatusIcon Component &gt; does not animate non-running statuses" time="0.000650375">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/StreamingText.test.tsx" timestamp="2025-07-06T18:54:21.395Z" hostname="Seths-MacBook-Pro.local" tests="10" failures="10" errors="0" skipped="0" time="0.022471375">
        <testcase classname="src/ui/components/StreamingText.test.tsx" name="StreamingText Component &gt; renders full text immediately when not streaming" time="0.014775542">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/StreamingText.test.tsx:23:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/StreamingText.test.tsx" name="StreamingText Component &gt; renders text progressively when streaming" time="0.001165334">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/StreamingText.test.tsx:23:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/StreamingText.test.tsx" name="StreamingText Component &gt; calls onComplete when streaming finishes" time="0.000898959">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/StreamingText.test.tsx:23:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/StreamingText.test.tsx" name="StreamingText Component &gt; resets when text changes" time="0.000747875">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/StreamingText.test.tsx:23:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/StreamingText.test.tsx" name="StreamingText Component &gt; shows full text immediately when switching from streaming to non-streaming" time="0.000730333">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/StreamingText.test.tsx:23:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/StreamingText.test.tsx" name="StreamingText Component &gt; applies custom text color" time="0.000725416">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/StreamingText.test.tsx:23:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/StreamingText.test.tsx" name="StreamingText Component &gt; handles empty text" time="0.00065225">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/StreamingText.test.tsx:23:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/StreamingText.test.tsx" name="StreamingText Component &gt; handles different streaming speeds" time="0.000622709">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/StreamingText.test.tsx:23:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/StreamingText.test.tsx" name="StreamingText Component &gt; preserves whitespace when option is set" time="0.000633041">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/StreamingText.test.tsx:23:10
            </failure>
        </testcase>
        <testcase classname="src/ui/components/StreamingText.test.tsx" name="StreamingText Component &gt; handles multi-line text correctly" time="0.000584875">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
            <failure message="jest.clearAllTimers is not a function" type="TypeError">
TypeError: jest.clearAllTimers is not a function
 ❯ src/ui/components/StreamingText.test.tsx:23:10
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/TemplateManager.test.tsx" timestamp="2025-07-06T18:54:21.399Z" hostname="Seths-MacBook-Pro.local" tests="8" failures="8" errors="0" skipped="0" time="0.024156041">
        <testcase classname="src/ui/components/TemplateManager.test.tsx" name="TemplateManager Component &gt; renders the component with initial state" time="0.012895041">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ TemplateManager src/ui/components/TemplateManager.tsx:79:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/TemplateManager.test.tsx" name="TemplateManager Component &gt; filters templates by search query" time="0.001716917">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ TemplateManager src/ui/components/TemplateManager.tsx:79:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/TemplateManager.test.tsx" name="TemplateManager Component &gt; filters templates by category" time="0.001586166">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ TemplateManager src/ui/components/TemplateManager.tsx:79:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/TemplateManager.test.tsx" name="TemplateManager Component &gt; selects a template when clicked" time="0.001505">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ TemplateManager src/ui/components/TemplateManager.tsx:79:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/TemplateManager.test.tsx" name="TemplateManager Component &gt; instantiates a template when &quot;Use Template&quot; button is clicked" time="0.001501209">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ TemplateManager src/ui/components/TemplateManager.tsx:79:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/TemplateManager.test.tsx" name="TemplateManager Component &gt; instantiates a template when &quot;Create Workflow from Template&quot; button is clicked in details view" time="0.001388709">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ TemplateManager src/ui/components/TemplateManager.tsx:79:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/TemplateManager.test.tsx" name="TemplateManager Component &gt; switches to create template view when &quot;Create Template&quot; button is clicked" time="0.001367292">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ TemplateManager src/ui/components/TemplateManager.tsx:79:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/TemplateManager.test.tsx" name="TemplateManager Component &gt; shows empty state when no templates match filters" time="0.001343458">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ TemplateManager src/ui/components/TemplateManager.tsx:79:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/Tips.test.tsx" timestamp="2025-07-06T18:54:21.400Z" hostname="Seths-MacBook-Pro.local" tests="6" failures="6" errors="0" skipped="0" time="0.016595291">
        <testcase classname="src/ui/components/Tips.test.tsx" name="Tips Component &gt; renders a tip with default props" time="0.011735209">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/Tips.test.tsx" name="Tips Component &gt; cycles through tips automatically" time="0.000970167">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/Tips.test.tsx" name="Tips Component &gt; filters tips by category" time="0.000810875">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/Tips.test.tsx" name="Tips Component &gt; filters tips by priority" time="0.000738291">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/Tips.test.tsx" name="Tips Component &gt; does not render when disabled" time="0.000757541">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/Tips.test.tsx" name="Tips Component &gt; calls onDismiss when dismissed" time="0.000760708">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/ToolMessage.test.tsx" timestamp="2025-07-06T18:54:21.401Z" hostname="Seths-MacBook-Pro.local" tests="4" failures="4" errors="0" skipped="0" time="0.018366125">
        <testcase classname="src/ui/components/ToolMessage.test.tsx" name="ToolMessage Component &gt; renders tool use request correctly" time="0.013776084">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ToolMessage.test.tsx" name="ToolMessage Component &gt; renders pending tool status" time="0.001191625">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ToolMessage.test.tsx" name="ToolMessage Component &gt; renders tool result success" time="0.000987375">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/ToolMessage.test.tsx" name="ToolMessage Component &gt; renders tool result error" time="0.000875417">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/CodeColorizer.test.tsx" timestamp="2025-07-06T18:54:21.402Z" hostname="Seths-MacBook-Pro.local" tests="8" failures="6" errors="0" skipped="0" time="0.023476">
        <testcase classname="src/ui/utils/CodeColorizer.test.tsx" name="CodeColorizer Component &gt; renders with JavaScript code" time="0.016020167">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/CodeColorizer.test.tsx" name="CodeColorizer Component &gt; renders with Python code" time="0.001327166">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/CodeColorizer.test.tsx" name="CodeColorizer Component &gt; shows line numbers when enabled" time="0.001041333">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/CodeColorizer.test.tsx" name="CodeColorizer Component &gt; hides line numbers when disabled" time="0.000872083">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/CodeColorizer.test.tsx" name="CodeColorizer Component &gt; truncates content when maxHeight is specified" time="0.00088075">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/CodeColorizer.test.tsx" name="CodeColorizer Component &gt; falls back to plain text for unknown languages" time="0.000798791">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/CodeColorizer.test.tsx" name="colorizeCode Function &gt; returns a React node" time="0.000408333">
        </testcase>
        <testcase classname="src/ui/utils/CodeColorizer.test.tsx" name="colorizeCode Function &gt; passes parameters correctly" time="0.000114417">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/MarkdownDisplay.test.tsx" timestamp="2025-07-06T18:54:21.403Z" hostname="Seths-MacBook-Pro.local" tests="10" failures="10" errors="0" skipped="0" time="0.019999459">
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="MarkdownDisplay Component &gt; renders markdown content" time="0.012667">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="MarkdownDisplay Component &gt; renders headings" time="0.000981166">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="MarkdownDisplay Component &gt; renders paragraphs" time="0.00075275">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="MarkdownDisplay Component &gt; renders code blocks" time="0.000677375">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="MarkdownDisplay Component &gt; renders lists" time="0.00069075">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="MarkdownDisplay Component &gt; renders blockquotes" time="0.000627333">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="MarkdownDisplay Component &gt; renders horizontal rules" time="0.000635833">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="MarkdownDisplay Component &gt; handles empty markdown" time="0.000702583">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="MarkdownDisplay Component &gt; respects maxWidth parameter" time="0.000692625">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="MarkdownDisplay Component &gt; can disable image rendering" time="0.000749833">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/formatters.test.ts" timestamp="2025-07-06T18:54:21.405Z" hostname="Seths-MacBook-Pro.local" tests="15" failures="12" errors="0" skipped="0" time="0.014171542">
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; formatElapsedTime &gt; formats milliseconds correctly" time="0.0047155">
            <failure message="expected &apos;1s&apos; to be &apos;1.0s&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;1s&apos; to be &apos;1.0s&apos; // Object.is equality

Expected: &quot;1.0s&quot;
Received: &quot;1s&quot;

 ❯ src/ui/utils/formatters.test.ts:25:39
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; formatElapsedTime &gt; formats seconds correctly" time="0.000343041">
            <failure message="expected &apos;5s&apos; to be &apos;5.0s&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;5s&apos; to be &apos;5.0s&apos; // Object.is equality

Expected: &quot;5.0s&quot;
Received: &quot;5s&quot;

 ❯ src/ui/utils/formatters.test.ts:32:43
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; formatElapsedTime &gt; formats minutes correctly" time="0.000121333">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; formatElapsedTime &gt; formats hours correctly" time="0.000073083">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; formatSize &gt; formats bytes correctly" time="0.000209083">
            <failure message="expected &apos;0 Bytes&apos; to be &apos;0 B&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;0 Bytes&apos; to be &apos;0 B&apos; // Object.is equality

Expected: &quot;0 B&quot;
Received: &quot;0 Bytes&quot;

 ❯ src/ui/utils/formatters.test.ts:49:29
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; formatSize &gt; formats kilobytes correctly" time="0.000183666">
            <failure message="expected &apos;1 KB&apos; to be &apos;1.0 KB&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;1 KB&apos; to be &apos;1.0 KB&apos; // Object.is equality

Expected: &quot;1.0 KB&quot;
Received: &quot;1 KB&quot;

 ❯ src/ui/utils/formatters.test.ts:55:32
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; formatSize &gt; formats megabytes correctly" time="0.000178833">
            <failure message="expected &apos;1 MB&apos; to be &apos;1.0 MB&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;1 MB&apos; to be &apos;1.0 MB&apos; // Object.is equality

Expected: &quot;1.0 MB&quot;
Received: &quot;1 MB&quot;

 ❯ src/ui/utils/formatters.test.ts:61:39
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; formatSize &gt; formats gigabytes correctly" time="0.000148542">
            <failure message="expected &apos;1 GB&apos; to be &apos;1.0 GB&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;1 GB&apos; to be &apos;1.0 GB&apos; // Object.is equality

Expected: &quot;1.0 GB&quot;
Received: &quot;1 GB&quot;

 ❯ src/ui/utils/formatters.test.ts:66:46
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; formatTimestamp &gt; formats timestamps correctly" time="0.003437917">
            <failure message="expected &apos;May 15, 2023&apos; to match /\d{2}:\d{2}:\d{2}/" type="AssertionError">
AssertionError: expected &apos;May 15, 2023&apos; to match /\d{2}:\d{2}:\d{2}/

- Expected: 
/\d{2}:\d{2}:\d{2}/

+ Received: 
&quot;May 15, 2023&quot;

 ❯ src/ui/utils/formatters.test.ts:76:42
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; truncateMiddle &gt; truncates strings in the middle" time="0.001329208">
            <failure message="expected &apos;abcdefg...&apos; to be &apos;abcd...mnop&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;abcdefg...&apos; to be &apos;abcd...mnop&apos; // Object.is equality

Expected: &quot;abcd...mnop&quot;
Received: &quot;abcdefg...&quot;

 ❯ src/ui/utils/formatters.test.ts:82:54
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; truncateMiddle &gt; handles edge cases" time="0.000258416">
            <failure message="expected &apos;ab...&apos; to be &apos;a...f&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;ab...&apos; to be &apos;a...f&apos; // Object.is equality

Expected: &quot;a...f&quot;
Received: &quot;ab...&quot;

 ❯ src/ui/utils/formatters.test.ts:88:43
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; formatNumber &gt; formats numbers with proper units" time="0.001978916">
            <failure message="expected &apos;1,000&apos; to be &apos;1.0K&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;1,000&apos; to be &apos;1.0K&apos; // Object.is equality

Expected: &quot;1.0K&quot;
Received: &quot;1,000&quot;

 ❯ src/ui/utils/formatters.test.ts:95:34
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; formatNumber &gt; handles small numbers" time="0.000100833">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; formatTokens &gt; formats token counts" time="0.000194083">
            <failure message="expected &apos;1,000&apos; to be &apos;1.0K tokens&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;1,000&apos; to be &apos;1.0K tokens&apos; // Object.is equality

Expected: &quot;1.0K tokens&quot;
Received: &quot;1,000&quot;

 ❯ src/ui/utils/formatters.test.ts:111:34
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="Formatters &gt; formatCost &gt; formats cost values" time="0.000203209">
            <failure message="expected &apos;&lt;$0.01&apos; to be &apos;$0.00&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;&lt;$0.01&apos; to be &apos;$0.00&apos; // Object.is equality

Expected: &quot;$0.00&quot;
Received: &quot;&lt;$0.01&quot;

 ❯ src/ui/utils/formatters.test.ts:121:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/src/ui/hooks/useClipboard.test.ts" timestamp="2025-07-06T18:54:21.407Z" hostname="Seths-MacBook-Pro.local" tests="5" failures="5" errors="0" skipped="0" time="0.017547959">
        <testcase classname="tests/src/ui/hooks/useClipboard.test.ts" name="useClipboard Hook &gt; should copy text to clipboard successfully" time="0.012329125">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useClipboard src/ui/hooks/useClipboard.ts:51:25
 ❯ tests/src/ui/hooks/useClipboard.test.ts:43:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="tests/src/ui/hooks/useClipboard.test.ts" name="useClipboard Hook &gt; should handle copy failures" time="0.00096725">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useClipboard src/ui/hooks/useClipboard.ts:51:25
 ❯ tests/src/ui/hooks/useClipboard.test.ts:68:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="tests/src/ui/hooks/useClipboard.test.ts" name="useClipboard Hook &gt; should paste from clipboard successfully" time="0.000806792">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useClipboard src/ui/hooks/useClipboard.ts:51:25
 ❯ tests/src/ui/hooks/useClipboard.test.ts:88:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="tests/src/ui/hooks/useClipboard.test.ts" name="useClipboard Hook &gt; should handle paste failures" time="0.000694584">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useClipboard src/ui/hooks/useClipboard.ts:51:25
 ❯ tests/src/ui/hooks/useClipboard.test.ts:107:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="tests/src/ui/hooks/useClipboard.test.ts" name="useClipboard Hook &gt; should clear clipboard successfully" time="0.000713625">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ Module.useClipboard src/ui/hooks/useClipboard.ts:51:25
 ❯ tests/src/ui/hooks/useClipboard.test.ts:126:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/src/ui/hooks/useSettings.test.ts" timestamp="2025-07-06T18:54:21.408Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/src/ui/hooks/useSettings.test.ts" name="tests/src/ui/hooks/useSettings.test.ts" time="0">
            <failure message="[vitest] No &quot;default&quot; export is defined on the &quot;fs&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;default&quot; export is defined on the &quot;fs&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;fs&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ src/ui/hooks/useSettings.ts:9:28
 ❯ tests/src/ui/hooks/useSettings.test.ts:12:1
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/src/ui/utils/accessibilityUtils.test.ts" timestamp="2025-07-06T18:54:21.408Z" hostname="Seths-MacBook-Pro.local" tests="14" failures="0" errors="0" skipped="0" time="0.005737667">
        <testcase classname="tests/src/ui/utils/accessibilityUtils.test.ts" name="Accessibility Utilities &gt; formatForScreenReader &gt; should format special characters for screen readers" time="0.003301375">
        </testcase>
        <testcase classname="tests/src/ui/utils/accessibilityUtils.test.ts" name="Accessibility Utilities &gt; formatForScreenReader &gt; should format parentheses and brackets for screen readers" time="0.000187167">
        </testcase>
        <testcase classname="tests/src/ui/utils/accessibilityUtils.test.ts" name="Accessibility Utilities &gt; formatForScreenReader &gt; should handle empty input" time="0.000122959">
        </testcase>
        <testcase classname="tests/src/ui/utils/accessibilityUtils.test.ts" name="Accessibility Utilities &gt; abbreviateForScreenReader &gt; should abbreviate text to specified length" time="0.000273917">
        </testcase>
        <testcase classname="tests/src/ui/utils/accessibilityUtils.test.ts" name="Accessibility Utilities &gt; abbreviateForScreenReader &gt; should return original text if under max length" time="0.000084792">
        </testcase>
        <testcase classname="tests/src/ui/utils/accessibilityUtils.test.ts" name="Accessibility Utilities &gt; abbreviateForScreenReader &gt; should handle empty input" time="0.000147625">
        </testcase>
        <testcase classname="tests/src/ui/utils/accessibilityUtils.test.ts" name="Accessibility Utilities &gt; isAccessibilityModeEnabled &gt; should return true if accessibility mode is enabled" time="0.000105834">
        </testcase>
        <testcase classname="tests/src/ui/utils/accessibilityUtils.test.ts" name="Accessibility Utilities &gt; isAccessibilityModeEnabled &gt; should return false if accessibility mode is disabled" time="0.000069041">
        </testcase>
        <testcase classname="tests/src/ui/utils/accessibilityUtils.test.ts" name="Accessibility Utilities &gt; isAccessibilityModeEnabled &gt; should handle missing accessibility config" time="0.000073792">
        </testcase>
        <testcase classname="tests/src/ui/utils/accessibilityUtils.test.ts" name="Accessibility Utilities &gt; shouldDisableLoadingPhrases &gt; should return true if loading phrases should be disabled" time="0.000080792">
        </testcase>
        <testcase classname="tests/src/ui/utils/accessibilityUtils.test.ts" name="Accessibility Utilities &gt; shouldDisableLoadingPhrases &gt; should return false if loading phrases should be enabled" time="0.000066209">
        </testcase>
        <testcase classname="tests/src/ui/utils/accessibilityUtils.test.ts" name="Accessibility Utilities &gt; shouldDisableLoadingPhrases &gt; should handle missing accessibility config" time="0.000064791">
        </testcase>
        <testcase classname="tests/src/ui/utils/accessibilityUtils.test.ts" name="Accessibility Utilities &gt; generateAriaLabel &gt; should combine label and description" time="0.000083958">
        </testcase>
        <testcase classname="tests/src/ui/utils/accessibilityUtils.test.ts" name="Accessibility Utilities &gt; generateAriaLabel &gt; should return just label if no description" time="0.000069959">
        </testcase>
    </testsuite>
    <testsuite name="tests/src/ui/utils/clipboardUtils.test.ts" timestamp="2025-07-06T18:54:21.408Z" hostname="Seths-MacBook-Pro.local" tests="9" failures="6" errors="0" skipped="0" time="0.006782084">
        <testcase classname="tests/src/ui/utils/clipboardUtils.test.ts" name="Clipboard Utilities &gt; copyToClipboard &gt; should copy text successfully" time="0.004337917">
            <failure message="[vitest] No &quot;default&quot; export is defined on the &quot;clipboardy&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;default&quot; export is defined on the &quot;clipboardy&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;clipboardy&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ tests/src/ui/utils/clipboardUtils.test.ts:44:8
            </failure>
        </testcase>
        <testcase classname="tests/src/ui/utils/clipboardUtils.test.ts" name="Clipboard Utilities &gt; copyToClipboard &gt; should handle copy errors" time="0.000329417">
            <failure message="[vitest] No &quot;default&quot; export is defined on the &quot;clipboardy&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;default&quot; export is defined on the &quot;clipboardy&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;clipboardy&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ tests/src/ui/utils/clipboardUtils.test.ts:56:8
            </failure>
        </testcase>
        <testcase classname="tests/src/ui/utils/clipboardUtils.test.ts" name="Clipboard Utilities &gt; readFromClipboard &gt; should read text successfully" time="0.000188">
            <failure message="[vitest] No &quot;default&quot; export is defined on the &quot;clipboardy&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;default&quot; export is defined on the &quot;clipboardy&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;clipboardy&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ tests/src/ui/utils/clipboardUtils.test.ts:70:8
            </failure>
        </testcase>
        <testcase classname="tests/src/ui/utils/clipboardUtils.test.ts" name="Clipboard Utilities &gt; readFromClipboard &gt; should handle read errors" time="0.000164458">
            <failure message="[vitest] No &quot;default&quot; export is defined on the &quot;clipboardy&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;default&quot; export is defined on the &quot;clipboardy&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;clipboardy&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ tests/src/ui/utils/clipboardUtils.test.ts:82:8
            </failure>
        </testcase>
        <testcase classname="tests/src/ui/utils/clipboardUtils.test.ts" name="Clipboard Utilities &gt; clearClipboard &gt; should clear clipboard successfully" time="0.000147167">
            <failure message="[vitest] No &quot;default&quot; export is defined on the &quot;clipboardy&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;default&quot; export is defined on the &quot;clipboardy&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;clipboardy&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ tests/src/ui/utils/clipboardUtils.test.ts:96:8
            </failure>
        </testcase>
        <testcase classname="tests/src/ui/utils/clipboardUtils.test.ts" name="Clipboard Utilities &gt; clearClipboard &gt; should handle clear errors" time="0.000147625">
            <failure message="[vitest] No &quot;default&quot; export is defined on the &quot;clipboardy&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;default&quot; export is defined on the &quot;clipboardy&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;clipboardy&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ tests/src/ui/utils/clipboardUtils.test.ts:108:8
            </failure>
        </testcase>
        <testcase classname="tests/src/ui/utils/clipboardUtils.test.ts" name="Clipboard Utilities &gt; formatForClipboard &gt; should remove ANSI color codes" time="0.000430292">
        </testcase>
        <testcase classname="tests/src/ui/utils/clipboardUtils.test.ts" name="Clipboard Utilities &gt; formatForClipboard &gt; should normalize line endings" time="0.0002075">
        </testcase>
        <testcase classname="tests/src/ui/utils/clipboardUtils.test.ts" name="Clipboard Utilities &gt; formatForClipboard &gt; should keep ANSI codes when specified" time="0.0000835">
        </testcase>
    </testsuite>
    <testsuite name="tests/src/ui/utils/imageUtils.test.ts" timestamp="2025-07-06T18:54:21.409Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/src/ui/utils/imageUtils.test.ts" name="tests/src/ui/utils/imageUtils.test.ts" time="0">
            <failure message="[vitest] vi.mock(&quot;sharp&quot;, factory?: () =&gt; unknown) is not returning an object. Did you mean to return an object with a &quot;default&quot; key?" type="TypeError">
TypeError: [vitest] vi.mock(&quot;sharp&quot;, factory?: () =&gt; unknown) is not returning an object. Did you mean to return an object with a &quot;default&quot; key?
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/src/ui/utils/progressUtilities.test.ts" timestamp="2025-07-06T18:54:21.409Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/src/ui/utils/progressUtilities.test.ts" name="tests/src/ui/utils/progressUtilities.test.ts" time="0">
            <failure message="Transform failed with 1 error:
/Users/sethford/Downloads/Projects/vibex/tests/src/ui/utils/progressUtilities.test.ts:12:7: ERROR: Expected &quot;as&quot; but found &quot;{&quot;" type="Error">
Error: Transform failed with 1 error:
/Users/sethford/Downloads/Projects/vibex/tests/src/ui/utils/progressUtilities.test.ts:12:7: ERROR: Expected &quot;as&quot; but found &quot;{&quot;
  Plugin: vite:esbuild
  File: /Users/sethford/Downloads/Projects/vibex/tests/src/ui/utils/progressUtilities.test.ts:12:7
  
  Expected &quot;as&quot; but found &quot;{&quot;
  10 |  
  11 |  import {
  12 |  import { describe, it, test, expect, beforeEach, afterEach, beforeAll, afterAll, vi } from &apos;vitest&apos;;
     |         ^
  13 |    calculateEstimatedTimeRemaining,
  14 |    formatTimeDuration,
  
 ❯ failureErrorWithLog node_modules/esbuild/lib/main.js:1463:15
 ❯ node_modules/esbuild/lib/main.js:734:50
 ❯ responseCallbacks.&lt;computed&gt; node_modules/esbuild/lib/main.js:601:9
 ❯ handleIncomingPacket node_modules/esbuild/lib/main.js:656:12
 ❯ Socket.readFromStdout node_modules/esbuild/lib/main.js:579:7
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" timestamp="2025-07-06T18:54:21.410Z" hostname="Seths-MacBook-Pro.local" tests="43" failures="0" errors="0" skipped="0" time="0.013294458">
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; initialization &gt; should initialize with default state" time="0.002027292">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; state subscription &gt; should notify listeners when state changes" time="0.001906625">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; state subscription &gt; should handle multiple listeners" time="0.000224125">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; control state management &gt; should set control state" time="0.000089917">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; control state management &gt; should set selected task index" time="0.000094083">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; confirmation dialog management &gt; should show confirmation dialog" time="0.00009025">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; confirmation dialog management &gt; should hide confirmation dialog" time="0.000089084">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; retry dialog management &gt; should show retry dialog" time="0.000088916">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; retry dialog management &gt; should hide retry dialog and clear config" time="0.000181292">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; retry dialog management &gt; should update custom retry configuration" time="0.000147459">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; breakpoint management &gt; should add breakpoint" time="0.001677041">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; breakpoint management &gt; should remove breakpoint" time="0.000806375">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; breakpoint management &gt; should toggle breakpoint enabled state" time="0.000291792">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; breakpoint management &gt; should increment breakpoint hit count" time="0.000606125">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; breakpoint management &gt; should set breakpoints" time="0.000236292">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; retry history management &gt; should increment retry count for task" time="0.000452667">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; retry history management &gt; should return 0 for tasks with no retries" time="0.000139333">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; retry history management &gt; should reset retry history" time="0.000126">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; retry history management &gt; should reset retry history for specific task" time="0.00012425">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; action validation &gt; should allow play in idle state" time="0.000118667">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; action validation &gt; should disallow pause in idle state" time="0.000056458">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; action validation &gt; should allow pause in running state" time="0.000066125">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; action validation &gt; should disallow play in running state" time="0.000053667">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; action validation &gt; should allow resume in paused state" time="0.000097292">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; action validation &gt; should allow step in paused state" time="0.0000575">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; action validation &gt; should allow step in debugging state" time="0.00006475">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; action validation &gt; should allow cancel in running state" time="0.000055625">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; action validation &gt; should disallow cancel in idle state" time="0.000048917">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; action validation &gt; should disallow abort in completed state" time="0.000048666">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; action validation &gt; should disallow reset in running state" time="0.000052458">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; action validation &gt; should allow reset in idle state" time="0.000053709">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; valid actions &gt; should return correct valid actions for idle state" time="0.000289333">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; valid actions &gt; should return correct valid actions for running state" time="0.000186167">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; valid actions &gt; should return correct valid actions for paused state" time="0.000171292">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; state icons and labels &gt; should return correct icon and label for idle state" time="0.000129541">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; state icons and labels &gt; should return correct icon and label for running state" time="0.000062542">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; state icons and labels &gt; should return correct icon and label for paused state" time="0.000057791">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; state icons and labels &gt; should return correct icon and label for debugging state" time="0.000061125">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; state icons and labels &gt; should return correct icon and label for cancelling state" time="0.000060334">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; state icons and labels &gt; should return correct icon and label for completed state" time="0.000059542">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; state icons and labels &gt; should return correct icon and label for failed state" time="0.000057417">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; reset functionality &gt; should reset all state to initial values" time="0.000199709">
        </testcase>
        <testcase classname="tests/ui/components/interactive-workflow-controls/ControlStateService.test.ts" name="ControlStateService &gt; state summary &gt; should provide accurate state summary" time="0.000172792">
        </testcase>
    </testsuite>
    <testsuite name="tests/ui/components/multimodal-content/FileTypeService.test.ts" timestamp="2025-07-06T18:54:21.412Z" hostname="Seths-MacBook-Pro.local" tests="27" failures="0" errors="0" skipped="0" time="0.009651125">
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; isFilePath &gt; should detect Unix absolute paths" time="0.002464125">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; isFilePath &gt; should detect Unix home paths" time="0.000215209">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; isFilePath &gt; should detect Windows absolute paths" time="0.000155208">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; isFilePath &gt; should detect relative paths" time="0.000146375">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; isFilePath &gt; should detect filenames with extensions" time="0.000180875">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; isFilePath &gt; should reject non-file paths" time="0.000121458">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; getFileType &gt; should detect image files" time="0.000309625">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; getFileType &gt; should detect audio files" time="0.000166458">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; getFileType &gt; should detect video files" time="0.000176375">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; getFileType &gt; should detect document files" time="0.000198916">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; getFileType &gt; should detect code files" time="0.000319917">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; getFileType &gt; should detect spreadsheet files" time="0.000138625">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; getFileType &gt; should detect presentation files" time="0.000099041">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; getFileType &gt; should default to text for unknown types" time="0.000094709">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; getMimeType &gt; should return correct MIME types for content types" time="0.000189333">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; getSpecificMimeType &gt; should return specific MIME types for file extensions" time="0.000613417">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; getSpecificMimeType &gt; should return default MIME type for unknown extensions" time="0.000178417">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; isFileTypeSupported &gt; should validate supported file types" time="0.000257333">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; formatFileSize &gt; should format file sizes correctly" time="0.000501458">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; parseFilePathsFromInput &gt; should parse single file path" time="0.000786375">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; parseFilePathsFromInput &gt; should parse multiple file paths" time="0.000164833">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; parseFilePathsFromInput &gt; should filter out invalid paths" time="0.000094375">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; parseFilePathsFromInput &gt; should handle empty input" time="0.000103166">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; isFileSizeValid &gt; should validate file sizes" time="0.000270167">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; content type helpers &gt; should identify media types" time="0.000146792">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; content type helpers &gt; should identify document types" time="0.000119834">
        </testcase>
        <testcase classname="tests/ui/components/multimodal-content/FileTypeService.test.ts" name="FileTypeService &gt; content type helpers &gt; should identify code types" time="0.00010925">
        </testcase>
    </testsuite>
    <testsuite name="tests/ui/components/progress-system/ProgressCalculationService.test.ts" timestamp="2025-07-06T18:54:21.413Z" hostname="Seths-MacBook-Pro.local" tests="30" failures="28" errors="0" skipped="0" time="0.01047025">
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateProgress &gt; should calculate basic progress correctly" time="0.003175375">
            <failure message="service.calculateProgress is not a function" type="TypeError">
TypeError: service.calculateProgress is not a function
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:19:30
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateProgress &gt; should clamp progress values to 0-100 range" time="0.00019975">
            <failure message="service.calculateProgress is not a function" type="TypeError">
TypeError: service.calculateProgress is not a function
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:27:38
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateProgress &gt; should handle edge cases" time="0.000141542">
            <failure message="service.calculateProgress is not a function" type="TypeError">
TypeError: service.calculateProgress is not a function
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:39:39
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; velocity calculation &gt; should calculate velocity correctly" time="0.000453417">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:51:32
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; velocity calculation &gt; should handle zero time delta" time="0.000123917">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:56:32
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; velocity calculation &gt; should handle negative progress (regression)" time="0.000118125">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:61:32
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; velocity calculation &gt; should smooth velocity over time" time="0.00010625">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:67:15
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; ETA calculation &gt; should calculate ETA correctly" time="0.002253834">
            <failure message="expected 15000 to be 15 // Object.is equality" type="AssertionError">
AssertionError: expected 15000 to be 15 // Object.is equality

- Expected
+ Received

- 15
+ 15000

 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:79:19
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; ETA calculation &gt; should return 0 for completed progress" time="0.000110833">
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; ETA calculation &gt; should return 0 for zero or negative velocity" time="0.000069417">
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; metrics calculation &gt; should calculate comprehensive metrics" time="0.000234209">
            <failure message="expected 0 to be greater than or equal to 4900" type="AssertionError">
AssertionError: expected 0 to be greater than or equal to 4900
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:101:35
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; accuracy calculation &gt; should return 1.0 for insufficient data" time="0.000170708">
            <failure message="Cannot read properties of undefined (reading &apos;length&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;length&apos;)
 ❯ ProgressCalculationService.calculateAccuracy src/ui/components/progress-system/ProgressCalculationService.ts:126:25
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:112:32
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; accuracy calculation &gt; should calculate accuracy based on velocity consistency" time="0.000128792">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:118:15
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; accuracy calculation &gt; should show lower accuracy for inconsistent velocities" time="0.000102625">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:128:15
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; formatting methods &gt; should format duration correctly" time="0.000699584">
            <failure message="expected &apos;1.5s&apos; to be &apos;1s&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;1.5s&apos; to be &apos;1s&apos; // Object.is equality

Expected: &quot;1s&quot;
Received: &quot;1.5s&quot;

 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:140:44
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; formatting methods &gt; should format velocity correctly" time="0.000109167">
            <failure message="service.formatVelocity is not a function" type="TypeError">
TypeError: service.formatVelocity is not a function
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:146:22
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; formatting methods &gt; should format ETA correctly" time="0.000105958">
            <failure message="service.formatETA is not a function" type="TypeError">
TypeError: service.formatETA is not a function
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:152:22
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; step-based progress &gt; should calculate step progress correctly" time="0.000123458">
            <failure message="service.calculateStepProgress is not a function" type="TypeError">
TypeError: service.calculateStepProgress is not a function
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:161:22
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; step-based progress &gt; should handle edge cases for step progress" time="0.000104542">
            <failure message="service.calculateStepProgress is not a function" type="TypeError">
TypeError: service.calculateStepProgress is not a function
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:167:22
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; completion prediction &gt; should predict completion with high accuracy" time="0.00012725">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:175:15
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; completion prediction &gt; should predict completion with low accuracy" time="0.000101125">
            <failure message="service.predictCompletion is not a function" type="TypeError">
TypeError: service.predictCompletion is not a function
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:188:34
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; progress stall detection &gt; should detect stalled progress" time="0.000103958">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:199:15
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; progress stall detection &gt; should not detect stall with good progress" time="0.000098375">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:207:15
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; progress trend analysis &gt; should detect accelerating trend" time="0.000105792">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:217:15
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; progress trend analysis &gt; should detect decelerating trend" time="0.000096417">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:225:15
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; progress trend analysis &gt; should detect steady trend" time="0.000099083">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:233:15
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; progress trend analysis &gt; should detect stalled trend" time="0.00009625">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:241:15
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; velocity statistics &gt; should provide velocity statistics" time="0.000105291">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:251:15
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; velocity statistics &gt; should handle empty velocity history" time="0.000096834">
            <failure message="service.getVelocityStats is not a function" type="TypeError">
TypeError: service.getVelocityStats is not a function
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:265:29
            </failure>
        </testcase>
        <testcase classname="tests/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; reset functionality &gt; should reset velocity history" time="0.000099458">
            <failure message="progressHistory.slice is not a function" type="TypeError">
TypeError: progressHistory.slice is not a function
 ❯ ProgressCalculationService.calculateVelocity src/ui/components/progress-system/ProgressCalculationService.ts:86:36
 ❯ tests/ui/components/progress-system/ProgressCalculationService.test.ts:277:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/tests/useToolConfirmation.test.ts" timestamp="2025-07-06T18:54:21.416Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/tests/useToolConfirmation.test.ts" name="src/ui/hooks/tests/useToolConfirmation.test.ts" time="0">
            <failure message="Failed to resolve import &quot;@testing-library/react-hooks&quot; from &quot;src/ui/hooks/tests/useToolConfirmation.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@testing-library/react-hooks&quot; from &quot;src/ui/hooks/tests/useToolConfirmation.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/src/ui/hooks/tests/useToolConfirmation.test.ts:8:32
  5  |   */
  6  |  import { describe, it, expect } from &quot;vitest&quot;;
  7  |  import { renderHook, act } from &quot;@testing-library/react-hooks&quot;;
     |                                   ^
  8  |  import { useToolConfirmation } from &quot;../useToolConfirmation&quot;;
  9  |  import { ToolConfirmationOutcome, ToolConfirmationType } from &quot;../../../core/domain/tool/tool-interfaces&quot;;
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/tests/useToolProgress.test.ts" timestamp="2025-07-06T18:54:21.416Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/tests/useToolProgress.test.ts" name="src/ui/hooks/tests/useToolProgress.test.ts" time="0">
            <failure message="Failed to resolve import &quot;@testing-library/react-hooks&quot; from &quot;src/ui/hooks/tests/useToolProgress.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@testing-library/react-hooks&quot; from &quot;src/ui/hooks/tests/useToolProgress.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/src/ui/hooks/tests/useToolProgress.test.ts:8:32
  5  |   */
  6  |  import { describe, it, expect } from &quot;vitest&quot;;
  7  |  import { renderHook, act } from &quot;@testing-library/react-hooks&quot;;
     |                                   ^
  8  |  import { useToolProgress } from &quot;../useToolProgress&quot;;
  9  |  describe(&quot;useToolProgress&quot;, () =&gt; {
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/image/ImageDisplay.test.tsx" timestamp="2025-07-06T18:54:21.416Z" hostname="Seths-MacBook-Pro.local" tests="7" failures="7" errors="0" skipped="0" time="0.016982042">
        <testcase classname="src/ui/components/image/ImageDisplay.test.tsx" name="ImageDisplay Component &gt; renders loading state initially" time="0.011527875">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/image/ImageDisplay.test.tsx" name="ImageDisplay Component &gt; handles URL image sources" time="0.001046583">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/image/ImageDisplay.test.tsx" name="ImageDisplay Component &gt; handles file image sources" time="0.000808334">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/image/ImageDisplay.test.tsx" name="ImageDisplay Component &gt; handles base64 image data" time="0.000704917">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/image/ImageDisplay.test.tsx" name="ImageDisplay Component &gt; shows alt text when provided" time="0.000748584">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/image/ImageDisplay.test.tsx" name="ImageDisplay Component &gt; shows caption when provided" time="0.000656416">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/ui/components/image/ImageDisplay.test.tsx" name="ImageDisplay Component &gt; shows error message when image processing fails" time="0.000663042">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ ThemeProvider src/ui/contexts/ThemeContext.tsx:119:33
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" timestamp="2025-07-06T18:54:21.418Z" hostname="Seths-MacBook-Pro.local" tests="22" failures="0" errors="0" skipped="0" time="0.322284541">
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; initialization &gt; should create service with default config" time="0.00189025">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; initialization &gt; should create service with custom config" time="0.000170708">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; initialization &gt; should start with not collecting state" time="0.000104042">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; metrics collection &gt; should collect metrics with all tracking enabled" time="0.001446708">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; metrics collection &gt; should collect empty metrics when tracking disabled" time="0.000268583">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; metrics collection &gt; should calculate memory percentage correctly" time="0.000278375">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; metrics collection &gt; should include heap metrics" time="0.000199375">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; metrics collection &gt; should include CPU load average" time="0.000836292">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; collection lifecycle &gt; should start collection" time="0.106820833">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; collection lifecycle &gt; should stop collection" time="0.10311275">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; collection lifecycle &gt; should not start collection twice" time="0.000278625">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; collection lifecycle &gt; should handle stop when not collecting" time="0.000646875">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; network statistics &gt; should update network stats" time="0.000313792">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; network statistics &gt; should reset network stats" time="0.000249625">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; network statistics &gt; should calculate requests per second" time="0.100500916">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; configuration management &gt; should update configuration" time="0.000334041">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; configuration management &gt; should preserve existing config when updating" time="0.001092084">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; configuration management &gt; should return copy of configuration" time="0.001140416">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; error handling &gt; should handle collection errors gracefully" time="0.000571458">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; error handling &gt; should continue collecting after errors" time="0.000114">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; factory function &gt; should create service with default config" time="0.000185208">
        </testcase>
        <testcase classname="src/ui/components/performance-monitor/MetricsCollectionService.test.ts" name="MetricsCollectionService &gt; factory function &gt; should create service with custom config" time="0.000090584">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/progress-system/ProgressCalculationService.test.ts" timestamp="2025-07-06T18:54:21.419Z" hostname="Seths-MacBook-Pro.local" tests="25" failures="0" errors="0" skipped="0" time="0.005569958">
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; initialization &gt; should create service with default config" time="0.00148525">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; initialization &gt; should create service with custom config" time="0.00015275">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateMetrics &gt; should return zero metrics for non-advanced mode" time="0.000219541">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateMetrics &gt; should calculate elapsed time correctly" time="0.000250125">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateMetrics &gt; should calculate velocity from history" time="0.000176458">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateVelocity &gt; should return 0 for empty history" time="0.000077125">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateVelocity &gt; should return 0 for single entry" time="0.000077084">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateVelocity &gt; should calculate velocity correctly" time="0.00007725">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateVelocity &gt; should use recent entries only" time="0.000087583">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateETA &gt; should return 0 for zero velocity" time="0.000066875">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateETA &gt; should return 0 for completed progress" time="0.000080292">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateETA &gt; should calculate ETA correctly" time="0.000068708">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateETA &gt; should handle negative velocity" time="0.000064583">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; normalizeValue &gt; should clamp values to 0-100 range" time="0.000401375">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateFilledWidth &gt; should calculate filled width correctly" time="0.00015275">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; calculateFilledWidth &gt; should handle edge cases" time="0.00008625">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; isComplete &gt; should detect completion correctly" time="0.000100625">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; formatDuration &gt; should format milliseconds" time="0.000136583">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; formatDuration &gt; should format seconds" time="0.000078833">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; formatDuration &gt; should format minutes" time="0.0000755">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; formatDuration &gt; should format hours" time="0.000094084">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; configuration management &gt; should update configuration" time="0.000084667">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; configuration management &gt; should preserve other config values when updating" time="0.000078542">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; accuracy calculation &gt; should return 0 for insufficient history" time="0.000075875">
        </testcase>
        <testcase classname="src/ui/components/progress-system/ProgressCalculationService.test.ts" name="ProgressCalculationService &gt; accuracy calculation &gt; should calculate accuracy for consistent velocity" time="0.000133625">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/shared/BasicStreamingText.test.tsx" timestamp="2025-07-06T18:54:21.420Z" hostname="Seths-MacBook-Pro.local" tests="18" failures="13" errors="0" skipped="0" time="0.257068">
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Static Content Display &gt; should display complete content when not streaming" time="0.035079541">
            <failure message="expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Hello, world!&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Hello, world!&apos;

- Expected
+ Received

- Hello, world!
+
+   ERROR  undefined is not iterable (cannot read property Symbol(Symbol.iterator))
+
+  src/ui/components/shared/BasicStreamingText.tsx:59:37
+
+  56:   onComplete
+  57: }) =&gt; {
+  58:   // Streaming state
+  59:   const [visibleText, setVisibleText] = useState&lt;string&gt;(&apos;&apos;);
+  60:   const [cursorPos, setCursorPos] = useState&lt;number&gt;(0);
+  61:
+  62:   // Refs
+
+  - BasicStreamingText (src/ui/components/shared/BasicStreamingText.tsx:59:37)
+  -Object.react-stack-bottom-fr (node_modules/react-reconciler/cjs/react-reconciler.development.js:1
+   me                          5859:20)
+  - renderWithHooks (node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:22)
+  -updateFunctionComponent (node_modules/react-reconciler/cjs/react-reconciler.development.js:6475:1
+                          9)
+  - beginWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12834:22)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+

 ❯ src/ui/components/shared/BasicStreamingText.test.tsx:33:27
            </failure>
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Static Content Display &gt; should apply custom text color" time="0.017873292">
            <failure message="expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Colored text&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Colored text&apos;

- Expected
+ Received

- Colored text
+
+   ERROR  undefined is not iterable (cannot read property Symbol(Symbol.iterator))
+
+  src/ui/components/shared/BasicStreamingText.tsx:59:37
+
+  56:   onComplete
+  57: }) =&gt; {
+  58:   // Streaming state
+  59:   const [visibleText, setVisibleText] = useState&lt;string&gt;(&apos;&apos;);
+  60:   const [cursorPos, setCursorPos] = useState&lt;number&gt;(0);
+  61:
+  62:   // Refs
+
+  - BasicStreamingText (src/ui/components/shared/BasicStreamingText.tsx:59:37)
+  -Object.react-stack-bottom-fr (node_modules/react-reconciler/cjs/react-reconciler.development.js:1
+   me                          5859:20)
+  - renderWithHooks (node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:22)
+  -updateFunctionComponent (node_modules/react-reconciler/cjs/react-reconciler.development.js:6475:1
+                          9)
+  - beginWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12834:22)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+

 ❯ src/ui/components/shared/BasicStreamingText.test.tsx:46:27
            </failure>
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Static Content Display &gt; should handle empty content gracefully" time="0.011961833">
            <failure message="expected &apos;\n  ERROR  undefined is not iterable …&apos; to be &apos;&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  undefined is not iterable …&apos; to be &apos;&apos; // Object.is equality

- Expected
+ Received

+
+   ERROR  undefined is not iterable (cannot read property Symbol(Symbol.iterator))
+
+  src/ui/components/shared/BasicStreamingText.tsx:59:37
+
+  56:   onComplete
+  57: }) =&gt; {
+  58:   // Streaming state
+  59:   const [visibleText, setVisibleText] = useState&lt;string&gt;(&apos;&apos;);
+  60:   const [cursorPos, setCursorPos] = useState&lt;number&gt;(0);
+  61:
+  62:   // Refs
+
+  - BasicStreamingText (src/ui/components/shared/BasicStreamingText.tsx:59:37)
+  -Object.react-stack-bottom-fr (node_modules/react-reconciler/cjs/react-reconciler.development.js:1
+   me                          5859:20)
+  - renderWithHooks (node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:22)
+  -updateFunctionComponent (node_modules/react-reconciler/cjs/react-reconciler.development.js:6475:1
+                          9)
+  - beginWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12834:22)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+

 ❯ src/ui/components/shared/BasicStreamingText.test.tsx:57:27
            </failure>
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Streaming Behavior &gt; should start with empty text when streaming" time="0.012461">
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Streaming Behavior &gt; should show cursor during streaming" time="0.0127415">
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Streaming Behavior &gt; should hide cursor when showCursor is false" time="0.01229275">
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Streaming Behavior &gt; should respect custom characters per second" time="0.011027584">
            <failure message="expected &quot;spy&quot; to be called at least once" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called at least once
 ❯ src/ui/components/shared/BasicStreamingText.test.tsx:116:26
            </failure>
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Loading Indicator &gt; should show loading indicator when streaming" time="0.012627333">
            <failure message="expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Loading...&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Loading...&apos;

- Expected
+ Received

- Loading...
+
+   ERROR  undefined is not iterable (cannot read property Symbol(Symbol.iterator))
+
+  src/ui/components/shared/BasicStreamingText.tsx:59:37
+
+  56:   onComplete
+  57: }) =&gt; {
+  58:   // Streaming state
+  59:   const [visibleText, setVisibleText] = useState&lt;string&gt;(&apos;&apos;);
+  60:   const [cursorPos, setCursorPos] = useState&lt;number&gt;(0);
+  61:
+  62:   // Refs
+
+  - BasicStreamingText (src/ui/components/shared/BasicStreamingText.tsx:59:37)
+  -Object.react-stack-bottom-fr (node_modules/react-reconciler/cjs/react-reconciler.development.js:1
+   me                          5859:20)
+  - renderWithHooks (node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:22)
+  -updateFunctionComponent (node_modules/react-reconciler/cjs/react-reconciler.development.js:6475:1
+                          9)
+  - beginWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12834:22)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+

 ❯ src/ui/components/shared/BasicStreamingText.test.tsx:131:27
            </failure>
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Loading Indicator &gt; should hide loading indicator when not streaming" time="0.0096075">
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Loading Indicator &gt; should allow custom loading message" time="0.010555417">
            <failure message="expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Processing data...&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Processing data...&apos;

- Expected
+ Received

- Processing data...
+
+   ERROR  undefined is not iterable (cannot read property Symbol(Symbol.iterator))
+
+  src/ui/components/shared/BasicStreamingText.tsx:59:37
+
+  56:   onComplete
+  57: }) =&gt; {
+  58:   // Streaming state
+  59:   const [visibleText, setVisibleText] = useState&lt;string&gt;(&apos;&apos;);
+  60:   const [cursorPos, setCursorPos] = useState&lt;number&gt;(0);
+  61:
+  62:   // Refs
+
+  - BasicStreamingText (src/ui/components/shared/BasicStreamingText.tsx:59:37)
+  -Object.react-stack-bottom-fr (node_modules/react-reconciler/cjs/react-reconciler.development.js:1
+   me                          5859:20)
+  - renderWithHooks (node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:22)
+  -updateFunctionComponent (node_modules/react-reconciler/cjs/react-reconciler.development.js:6475:1
+                          9)
+  - beginWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12834:22)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+

 ❯ src/ui/components/shared/BasicStreamingText.test.tsx:158:27
            </failure>
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Completion Callback &gt; should call onComplete when streaming finishes" time="0.018084333">
            <failure message="expected &quot;spy&quot; to be called 1 times, but got 0 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 1 times, but got 0 times
 ❯ src/ui/components/shared/BasicStreamingText.test.tsx:177:26
            </failure>
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Completion Callback &gt; should call onComplete immediately when not streaming" time="0.009659583">
            <failure message="expected &quot;spy&quot; to be called 1 times, but got 0 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 1 times, but got 0 times
 ❯ src/ui/components/shared/BasicStreamingText.test.tsx:191:26
            </failure>
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Completion Callback &gt; should not call onComplete multiple times" time="0.014169833">
            <failure message="expected &quot;spy&quot; to be called 1 times, but got 0 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 1 times, but got 0 times
 ❯ src/ui/components/shared/BasicStreamingText.test.tsx:216:26
            </failure>
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Content Changes &gt; should reset streaming when content changes" time="0.015746125">
            <failure message="expected &quot;spy&quot; to be called 2 times, but got 0 times" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called 2 times, but got 0 times
 ❯ src/ui/components/shared/BasicStreamingText.test.tsx:245:26
            </failure>
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Theme Integration &gt; should use theme colors" time="0.010371">
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Edge Cases &gt; should handle very long content" time="0.020207875">
            <failure message="expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA…&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA…&apos;

- Expected
+ Received

- AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
+
+   ERROR  undefined is not iterable (cannot read property Symbol(Symbol.iterator))
+
+  src/ui/components/shared/BasicStreamingText.tsx:59:37
+
+  56:   onComplete
+  57: }) =&gt; {
+  58:   // Streaming state
+  59:   const [visibleText, setVisibleText] = useState&lt;string&gt;(&apos;&apos;);
+  60:   const [cursorPos, setCursorPos] = useState&lt;number&gt;(0);
+  61:
+  62:   // Refs
+
+  - BasicStreamingText (src/ui/components/shared/BasicStreamingText.tsx:59:37)
+  -Object.react-stack-bottom-fr (node_modules/react-reconciler/cjs/react-reconciler.development.js:1
+   me                          5859:20)
+  - renderWithHooks (node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:22)
+  -updateFunctionComponent (node_modules/react-reconciler/cjs/react-reconciler.development.js:6475:1
+                          9)
+  - beginWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12834:22)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+

 ❯ src/ui/components/shared/BasicStreamingText.test.tsx:284:27
            </failure>
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Edge Cases &gt; should handle special characters" time="0.011991709">
            <failure message="expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;🚀 Hello! @#$%^&amp;*()&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;🚀 Hello! @#$%^&amp;*()&apos;

- Expected
+ Received

- 🚀 Hello! @#$%^&amp;*()
+
+   ERROR  undefined is not iterable (cannot read property Symbol(Symbol.iterator))
+
+  src/ui/components/shared/BasicStreamingText.tsx:59:37
+
+  56:   onComplete
+  57: }) =&gt; {
+  58:   // Streaming state
+  59:   const [visibleText, setVisibleText] = useState&lt;string&gt;(&apos;&apos;);
+  60:   const [cursorPos, setCursorPos] = useState&lt;number&gt;(0);
+  61:
+  62:   // Refs
+
+  - BasicStreamingText (src/ui/components/shared/BasicStreamingText.tsx:59:37)
+  -Object.react-stack-bottom-fr (node_modules/react-reconciler/cjs/react-reconciler.development.js:1
+   me                          5859:20)
+  - renderWithHooks (node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:22)
+  -updateFunctionComponent (node_modules/react-reconciler/cjs/react-reconciler.development.js:6475:1
+                          9)
+  - beginWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12834:22)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+

 ❯ src/ui/components/shared/BasicStreamingText.test.tsx:296:27
            </failure>
        </testcase>
        <testcase classname="src/ui/components/shared/BasicStreamingText.test.tsx" name="BasicStreamingText &gt; Edge Cases &gt; should handle newlines and whitespace" time="0.009757708">
            <failure message="expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Line 1&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Line 1&apos;

- Expected
+ Received

- Line 1
+
+   ERROR  undefined is not iterable (cannot read property Symbol(Symbol.iterator))
+
+  src/ui/components/shared/BasicStreamingText.tsx:59:37
+
+  56:   onComplete
+  57: }) =&gt; {
+  58:   // Streaming state
+  59:   const [visibleText, setVisibleText] = useState&lt;string&gt;(&apos;&apos;);
+  60:   const [cursorPos, setCursorPos] = useState&lt;number&gt;(0);
+  61:
+  62:   // Refs
+
+  - BasicStreamingText (src/ui/components/shared/BasicStreamingText.tsx:59:37)
+  -Object.react-stack-bottom-fr (node_modules/react-reconciler/cjs/react-reconciler.development.js:1
+   me                          5859:20)
+  - renderWithHooks (node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:22)
+  -updateFunctionComponent (node_modules/react-reconciler/cjs/react-reconciler.development.js:6475:1
+                          9)
+  - beginWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12834:22)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+

 ❯ src/ui/components/shared/BasicStreamingText.test.tsx:309:27
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" timestamp="2025-07-06T18:54:21.421Z" hostname="Seths-MacBook-Pro.local" tests="29" failures="0" errors="0" skipped="0" time="0.010277042">
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; initialization &gt; should create service with initial state" time="0.001649709">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; initialization &gt; should start with empty performance metrics" time="0.00024175">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; connection status updates &gt; should update connection status" time="0.00019975">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; connection status updates &gt; should update connection status without latency" time="0.000100083">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; workflow updates &gt; should update active workflow" time="0.000584458">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; workflow updates &gt; should clear active workflow" time="0.000110333">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; task state updates &gt; should update task state" time="0.000151167">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; task state updates &gt; should update task progress" time="0.000118958">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; task state updates &gt; should update task error" time="0.000878416">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; execution state updates &gt; should update execution state" time="0.000149917">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; execution state updates &gt; should update paused state" time="0.000115125">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; execution state updates &gt; should update cancelled state" time="0.000103792">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; metrics updates &gt; should update performance metrics" time="0.000125">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; metrics updates &gt; should partially update metrics" time="0.000106167">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; update events processing &gt; should process task progress event" time="0.000168875">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; update events processing &gt; should process task status event" time="0.000186125">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; update events processing &gt; should process workflow status event" time="0.000118667">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; update events processing &gt; should process error event" time="0.000140541">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; update events processing &gt; should handle unknown event type" time="0.000680292">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; state subscriptions &gt; should subscribe to state updates" time="0.00181025">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; state subscriptions &gt; should unsubscribe from state updates" time="0.000177541">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; state subscriptions &gt; should handle multiple subscribers" time="0.000158917">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; merged workflow &gt; should return null when no workflow available" time="0.000137041">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; merged workflow &gt; should merge real-time data with workflow" time="0.000199125">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; merged workflow &gt; should calculate workflow progress from completed tasks" time="0.000117042">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; merged workflow &gt; should update workflow status based on execution state" time="0.000096625">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; state management &gt; should force refresh state" time="0.000123709">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; state management &gt; should reset state" time="0.000158333">
        </testcase>
        <testcase classname="src/ui/components/real-time-task-orchestrator/RealTimeStateService.test.ts" name="RealTimeStateService &gt; state management &gt; should cleanup resources" time="0.000141958">
        </testcase>
    </testsuite>
    <testsuite name="tests/src/ui/tests/e2e/e2e.test.ts" timestamp="2025-07-06T18:54:21.423Z" hostname="Seths-MacBook-Pro.local" tests="3" failures="3" errors="0" skipped="0" time="0.011734791">
        <testcase classname="tests/src/ui/tests/e2e/e2e.test.ts" name="UI System End-to-End &gt; starts up the UI system" time="0.005585042">
            <failure message="require() cannot be used on an ESM graph with top-level await. Use import() instead. To see where the top-level await comes from, use --experimental-print-required-tla.
  From /Users/sethford/Downloads/Projects/vibex/tests/src/ui/tests/e2e/e2e.test.ts
  Requiring /Users/sethford/Downloads/Projects/vibex/node_modules/ink/build/index.js" type="Error">
Error: require() cannot be used on an ESM graph with top-level await. Use import() instead. To see where the top-level await comes from, use --experimental-print-required-tla.
  From /Users/sethford/Downloads/Projects/vibex/tests/src/ui/tests/e2e/e2e.test.ts
  Requiring /Users/sethford/Downloads/Projects/vibex/node_modules/ink/build/index.js
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_REQUIRE_ASYNC_MODULE&apos; }
            </failure>
        </testcase>
        <testcase classname="tests/src/ui/tests/e2e/e2e.test.ts" name="UI System End-to-End &gt; handles user interaction flow" time="0.004160541">
            <failure message="AI client is not available" type="Error">
Error: AI client is not available
 ❯ tests/src/ui/tests/e2e/e2e.test.ts:159:13
            </failure>
        </testcase>
        <testcase classname="tests/src/ui/tests/e2e/e2e.test.ts" name="UI System End-to-End &gt; handles tool use flow" time="0.000390625">
            <failure message="AI client is not available" type="Error">
Error: AI client is not available
 ❯ tests/src/ui/tests/e2e/e2e.test.ts:202:13
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" timestamp="2025-07-06T18:54:21.423Z" hostname="Seths-MacBook-Pro.local" tests="24" failures="0" errors="0" skipped="0" time="0.007202291">
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Service Initialization &gt; should initialize with empty executions" time="0.001754125">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Service Initialization &gt; should provide all required methods" time="0.000295583">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Adding Executions &gt; should add new execution with generated ID" time="0.000859208">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Adding Executions &gt; should add multiple executions in correct order" time="0.00019275">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Adding Executions &gt; should generate unique IDs for concurrent executions" time="0.000118834">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Updating Executions &gt; should update execution with partial data" time="0.000150375">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Updating Executions &gt; should preserve existing data when updating" time="0.000116875">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Updating Executions &gt; should not affect other executions when updating" time="0.000122666">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Starting Executions &gt; should start execution and update state" time="0.000143083">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Starting Executions &gt; should handle starting non-existent execution gracefully" time="0.000516625">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Completing Executions &gt; should complete execution with success result" time="0.000181584">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Completing Executions &gt; should complete execution with error result" time="0.000100834">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Completing Executions &gt; should calculate duration correctly" time="0.000123375">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Streaming Output Updates &gt; should update streaming output" time="0.0000835">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Streaming Output Updates &gt; should handle multiple streaming updates" time="0.000077666">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Clearing Executions &gt; should clear all executions" time="0.000150625">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Subscription System &gt; should notify subscribers on execution changes" time="0.000150625">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Subscription System &gt; should handle multiple subscribers" time="0.000121125">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Subscription System &gt; should allow unsubscribing" time="0.000083792">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Execution Lifecycle &gt; should handle complete execution lifecycle" time="0.00020875">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Edge Cases &gt; should handle updating non-existent execution" time="0.0001395">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Edge Cases &gt; should handle completing non-existent execution" time="0.000127875">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Edge Cases &gt; should handle streaming update for non-existent execution" time="0.000124709">
        </testcase>
        <testcase classname="src/ui/components/tool-execution-display/ExecutionTrackingService.test.ts" name="ExecutionTrackingService &gt; Edge Cases &gt; should handle empty tool call parameters" time="0.000076042">
        </testcase>
    </testsuite>
    <testsuite name="src/core/adapters/tools/tests/advanced-tools.test.ts" timestamp="2025-07-06T18:54:21.424Z" hostname="Seths-MacBook-Pro.local" tests="16" failures="4" errors="0" skipped="0" time="0.009527916">
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; ListDirectoryTool &gt; should validate parameters correctly" time="0.001142708">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; ListDirectoryTool &gt; should execute and return success result" time="0.004723">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/core/adapters/tools/tests/advanced-tools.test.ts:156:30
            </failure>
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; ListDirectoryTool &gt; should handle errors during execution" time="0.000207375">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; ReadManyFilesTool &gt; should validate parameters correctly" time="0.000231458">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; ReadManyFilesTool &gt; should require confirmation for large batches" time="0.000137458">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; ReadManyFilesTool &gt; should not require confirmation for small batches" time="0.000092625">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; ReadManyFilesTool &gt; should execute and return success result" time="0.000369">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/core/adapters/tools/tests/advanced-tools.test.ts:226:30
            </failure>
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; ReadManyFilesTool &gt; should handle errors during execution" time="0.0001175">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; EditTool &gt; should validate parameters correctly" time="0.000252">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; EditTool &gt; should require confirmation before execution" time="0.000170833">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; EditTool &gt; should not require confirmation for diff_only mode" time="0.000066417">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; EditTool &gt; should execute and return success result" time="0.000269584">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/core/adapters/tools/tests/advanced-tools.test.ts:329:30
            </failure>
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; EditTool &gt; should handle errors during execution" time="0.000102125">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; GlobTool &gt; should validate parameters correctly" time="0.000196166">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; GlobTool &gt; should execute and return success result" time="0.000225208">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/core/adapters/tools/tests/advanced-tools.test.ts:396:30
            </failure>
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/advanced-tools.test.ts" name="Advanced Tool Adapters &gt; GlobTool &gt; should handle errors during execution" time="0.000096167">
        </testcase>
    </testsuite>
    <testsuite name="src/core/adapters/tools/tests/legacy-compat.test.ts" timestamp="2025-07-06T18:54:21.425Z" hostname="Seths-MacBook-Pro.local" tests="6" failures="0" errors="0" skipped="0" time="0.004806875">
        <testcase classname="src/core/adapters/tools/tests/legacy-compat.test.ts" name="Legacy Compatibility Layer &gt; readFile &gt; should map parameters correctly and return success result" time="0.002834041">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/legacy-compat.test.ts" name="Legacy Compatibility Layer &gt; readFile &gt; should handle error results" time="0.000215875">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/legacy-compat.test.ts" name="Legacy Compatibility Layer &gt; writeFile &gt; should map parameters correctly and return success result" time="0.0002955">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/legacy-compat.test.ts" name="Legacy Compatibility Layer &gt; writeFile &gt; should handle error results" time="0.000140709">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/legacy-compat.test.ts" name="Legacy Compatibility Layer &gt; executeShell &gt; should map parameters correctly and return success result" time="0.00026275">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/legacy-compat.test.ts" name="Legacy Compatibility Layer &gt; executeShell &gt; should handle error results" time="0.000139958">
        </testcase>
    </testsuite>
    <testsuite name="src/core/adapters/tools/tests/mcp-tools.test.ts" timestamp="2025-07-06T18:54:21.425Z" hostname="Seths-MacBook-Pro.local" tests="7" failures="1" errors="0" skipped="0" time="0.012612208">
        <testcase classname="src/core/adapters/tools/tests/mcp-tools.test.ts" name="MCP Tool Adapters &gt; MCPToolAdapter &gt; should initialize properly with correct name and parameters" time="0.001100458">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/mcp-tools.test.ts" name="MCP Tool Adapters &gt; MCPToolAdapter &gt; should validate parameters correctly" time="0.000185">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/mcp-tools.test.ts" name="MCP Tool Adapters &gt; MCPToolAdapter &gt; should execute the tool successfully" time="0.000216">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/mcp-tools.test.ts" name="MCP Tool Adapters &gt; MCPToolAdapter &gt; should handle execution errors" time="0.000097542">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/mcp-tools.test.ts" name="MCP Tool Adapters &gt; MCPToolAdapter &gt; should handle progress reporting" time="0.009701916">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ { status: &apos;completed&apos;, …(1) } ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[2m    {[22m
[2m      &quot;message&quot;: &quot;MCP tool execution completed&quot;,[22m
[32m-     &quot;status&quot;: &quot;completed&quot;,[90m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ { status: &apos;completed&apos;, …(1) } ]

Received: 

  1st spy call:

  [
    {
      &quot;message&quot;: &quot;MCP tool execution completed&quot;,
-     &quot;status&quot;: &quot;completed&quot;,
    },
  ]


Number of calls: 1

 ❯ src/core/adapters/tools/tests/mcp-tools.test.ts:168:32
            </failure>
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/mcp-tools.test.ts" name="MCP Tool Adapters &gt; MCPToolFactory &gt; should connect to server and create tool adapters" time="0.000432375">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/mcp-tools.test.ts" name="MCP Tool Adapters &gt; MCPToolFactory &gt; should disconnect from all servers" time="0.000140541">
        </testcase>
    </testsuite>
    <testsuite name="src/core/adapters/tools/tests/specialized-tools.test.ts" timestamp="2025-07-06T18:54:21.426Z" hostname="Seths-MacBook-Pro.local" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/core/adapters/tools/tests/specialized-tools.test.ts" name="src/core/adapters/tools/tests/specialized-tools.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../domain/tool/base-tool&quot; from &quot;src/core/adapters/tools/ripgrep-adapter.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../domain/tool/base-tool&quot; from &quot;src/core/adapters/tools/ripgrep-adapter.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/sethford/Downloads/Projects/vibex/src/core/adapters/tools/ripgrep-adapter.ts:7:25
  4  |   * SPDX-License-Identifier: MIT
  5  |   */
  6  |  import { BaseTool } from &quot;../../domain/tool/base-tool&quot;;
     |                            ^
  7  |  import { createRipgrepTool } from &quot;../../../tools/ripgrep&quot;;
  8  |  export class RipgrepTool extends BaseTool {
 ❯ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31420:43
 ❯ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31417:14
 ❯ normalizeUrl node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29966:18
 ❯ node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:30024:32
 ❯ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:29992:4
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:31234:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-CXCa-anf.js:26408:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/core/adapters/tools/tests/tool-adapters.test.ts" timestamp="2025-07-06T18:54:21.426Z" hostname="Seths-MacBook-Pro.local" tests="12" failures="4" errors="0" skipped="0" time="0.007642125">
        <testcase classname="src/core/adapters/tools/tests/tool-adapters.test.ts" name="Tool Adapters &gt; ReadFileTool &gt; should validate parameters correctly" time="0.0009135">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/tool-adapters.test.ts" name="Tool Adapters &gt; ReadFileTool &gt; should execute and return success result" time="0.004329375">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/core/adapters/tools/tests/tool-adapters.test.ts:106:30
            </failure>
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/tool-adapters.test.ts" name="Tool Adapters &gt; ReadFileTool &gt; should handle errors during execution" time="0.00018125">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/tool-adapters.test.ts" name="Tool Adapters &gt; WriteFileTool &gt; should validate parameters correctly" time="0.000206583">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/tool-adapters.test.ts" name="Tool Adapters &gt; WriteFileTool &gt; should require confirmation before execution" time="0.000146709">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/tool-adapters.test.ts" name="Tool Adapters &gt; WriteFileTool &gt; should execute and return success result" time="0.000318583">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/core/adapters/tools/tests/tool-adapters.test.ts:163:30
            </failure>
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/tool-adapters.test.ts" name="Tool Adapters &gt; WriteFileTool &gt; should handle errors during execution" time="0.000128084">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/tool-adapters.test.ts" name="Tool Adapters &gt; ShellTool &gt; should validate parameters correctly" time="0.000167667">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/tool-adapters.test.ts" name="Tool Adapters &gt; ShellTool &gt; should require confirmation before execution" time="0.000116917">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/tool-adapters.test.ts" name="Tool Adapters &gt; ShellTool &gt; should require danger confirmation for dangerous commands" time="0.000070583">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/tool-adapters.test.ts" name="Tool Adapters &gt; ShellTool &gt; should execute and return success result" time="0.000264875">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/core/adapters/tools/tests/tool-adapters.test.ts:221:30
            </failure>
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/tool-adapters.test.ts" name="Tool Adapters &gt; ShellTool &gt; should handle command failures" time="0.000150709">
            <failure message="Cannot read properties of undefined (reading &apos;stderr&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;stderr&apos;)
 ❯ src/core/adapters/tools/tests/tool-adapters.test.ts:231:35
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/core/adapters/tools/tests/web-tools.test.ts" timestamp="2025-07-06T18:54:21.427Z" hostname="Seths-MacBook-Pro.local" tests="8" failures="2" errors="0" skipped="0" time="0.008770375">
        <testcase classname="src/core/adapters/tools/tests/web-tools.test.ts" name="Web Tool Adapters &gt; WebFetchTool &gt; should validate parameters correctly" time="0.00129125">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/web-tools.test.ts" name="Web Tool Adapters &gt; WebFetchTool &gt; should execute and return success result" time="0.004934625">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/core/adapters/tools/tests/web-tools.test.ts:146:30
            </failure>
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/web-tools.test.ts" name="Web Tool Adapters &gt; WebFetchTool &gt; should handle URLs with errors" time="0.000361625">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/core/adapters/tools/tests/web-tools.test.ts:158:30
            </failure>
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/web-tools.test.ts" name="Web Tool Adapters &gt; WebFetchTool &gt; should handle execution errors" time="0.000163083">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/web-tools.test.ts" name="Web Tool Adapters &gt; WebSearchTool &gt; should validate parameters correctly" time="0.000368667">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/web-tools.test.ts" name="Web Tool Adapters &gt; WebSearchTool &gt; should check for sensitive queries" time="0.000152542">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/web-tools.test.ts" name="Web Tool Adapters &gt; WebSearchTool &gt; should execute and return success result" time="0.000584084">
        </testcase>
        <testcase classname="src/core/adapters/tools/tests/web-tools.test.ts" name="Web Tool Adapters &gt; WebSearchTool &gt; should handle search errors" time="0.000106541">
        </testcase>
    </testsuite>
    <testsuite name="src/core/domain/tool/tests/events.test.ts" timestamp="2025-07-06T18:54:21.427Z" hostname="Seths-MacBook-Pro.local" tests="4" failures="0" errors="0" skipped="0" time="0.005694417">
        <testcase classname="src/core/domain/tool/tests/events.test.ts" name="EventBus &gt; should publish and subscribe to events" time="0.002934292">
        </testcase>
        <testcase classname="src/core/domain/tool/tests/events.test.ts" name="EventBus &gt; should support wildcard subscriptions" time="0.0006025">
        </testcase>
        <testcase classname="src/core/domain/tool/tests/events.test.ts" name="EventBus &gt; should support multiple subscribers for the same event" time="0.000344458">
        </testcase>
        <testcase classname="src/core/domain/tool/tests/events.test.ts" name="EventBus &gt; should only notify subscribers for the event type" time="0.000288917">
        </testcase>
    </testsuite>
    <testsuite name="src/core/domain/tool/tests/registry.test.ts" timestamp="2025-07-06T18:54:21.427Z" hostname="Seths-MacBook-Pro.local" tests="7" failures="0" errors="0" skipped="0" time="0.004583">
        <testcase classname="src/core/domain/tool/tests/registry.test.ts" name="ToolRegistryService &gt; should register a tool in the default namespace" time="0.001432917">
        </testcase>
        <testcase classname="src/core/domain/tool/tests/registry.test.ts" name="ToolRegistryService &gt; should register a tool in a custom namespace" time="0.000152084">
        </testcase>
        <testcase classname="src/core/domain/tool/tests/registry.test.ts" name="ToolRegistryService &gt; should return undefined for non-existent tools" time="0.000132375">
        </testcase>
        <testcase classname="src/core/domain/tool/tests/registry.test.ts" name="ToolRegistryService &gt; should list all tools" time="0.001328083">
        </testcase>
        <testcase classname="src/core/domain/tool/tests/registry.test.ts" name="ToolRegistryService &gt; should list tools by namespace" time="0.0002635">
        </testcase>
        <testcase classname="src/core/domain/tool/tests/registry.test.ts" name="ToolRegistryService &gt; should list all namespaces" time="0.000253834">
        </testcase>
        <testcase classname="src/core/domain/tool/tests/registry.test.ts" name="ToolRegistryService &gt; should handle tools with MCP-style names (namespace__name)" time="0.000134834">
        </testcase>
    </testsuite>
    <testsuite name="src/core/domain/tool/tests/validation.test.ts" timestamp="2025-07-06T18:54:21.428Z" hostname="Seths-MacBook-Pro.local" tests="4" failures="0" errors="0" skipped="0" time="0.003595167">
        <testcase classname="src/core/domain/tool/tests/validation.test.ts" name="ValidationService &gt; should validate simple required properties" time="0.001988959">
        </testcase>
        <testcase classname="src/core/domain/tool/tests/validation.test.ts" name="ValidationService &gt; should validate object types" time="0.000189917">
        </testcase>
        <testcase classname="src/core/domain/tool/tests/validation.test.ts" name="ValidationService &gt; should support custom validators" time="0.000206334">
        </testcase>
        <testcase classname="src/core/domain/tool/tests/validation.test.ts" name="ValidationService &gt; should validate and transform tool results" time="0.000197125">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts" timestamp="2025-07-06T18:54:21.428Z" hostname="Seths-MacBook-Pro.local" tests="10" failures="10" errors="0" skipped="0" time="0.018142209">
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts" name="useClaudeMessages &gt; should build Claude messages from history when conversation history is enabled" time="0.010094833">
            <failure message="result.current.buildClaudeMessages is not a function" type="TypeError">
TypeError: result.current.buildClaudeMessages is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts:57:37
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts" name="useClaudeMessages &gt; should return empty array when conversation history is disabled" time="0.000810333">
            <failure message="result.current.buildClaudeMessages is not a function" type="TypeError">
TypeError: result.current.buildClaudeMessages is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts:71:37
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts" name="useClaudeMessages &gt; should filter out non-conversation messages" time="0.000971333">
            <failure message="result.current.buildClaudeMessages is not a function" type="TypeError">
TypeError: result.current.buildClaudeMessages is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts:97:37
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts" name="useClaudeMessages &gt; should compress conversation when needed" time="0.000750542">
            <failure message="result.current.compressConversationIfNeeded is not a function" type="TypeError">
TypeError: result.current.compressConversationIfNeeded is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts:124:53
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts" name="useClaudeMessages &gt; should not compress conversation when not needed" time="0.000644375">
            <failure message="result.current.compressConversationIfNeeded is not a function" type="TypeError">
TypeError: result.current.compressConversationIfNeeded is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts:154:53
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts" name="useClaudeMessages &gt; should handle compression errors gracefully" time="0.000530542">
            <failure message="result.current.compressConversationIfNeeded is not a function" type="TypeError">
TypeError: result.current.compressConversationIfNeeded is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts:181:53
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts" name="useClaudeMessages &gt; should prepare query input with conversation history" time="0.000495">
            <failure message="result.current.prepareQueryInput is not a function" type="TypeError">
TypeError: result.current.prepareQueryInput is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts:200:39
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts" name="useClaudeMessages &gt; should prepare query input without conversation history" time="0.000894208">
            <failure message="result.current.prepareQueryInput is not a function" type="TypeError">
TypeError: result.current.prepareQueryInput is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts:219:39
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts" name="useClaudeMessages &gt; should format debug message with conversation history" time="0.00131025">
            <failure message="result.current.formatDebugMessage is not a function" type="TypeError">
TypeError: result.current.formatDebugMessage is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts:234:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts" name="useClaudeMessages &gt; should format debug message without conversation history" time="0.000575084">
            <failure message="result.current.formatDebugMessage is not a function" type="TypeError">
TypeError: result.current.formatDebugMessage is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeMessages.test.ts:245:41
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/claude/__tests__/useClaudeState.test.ts" timestamp="2025-07-06T18:54:21.429Z" hostname="Seths-MacBook-Pro.local" tests="11" failures="11" errors="0" skipped="0" time="0.029833875">
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeState.test.ts" name="useClaudeState &gt; should initialize with default state" time="0.018338875">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useClaudeState src/ui/hooks/claude/useClaudeState.ts:16:43
 ❯ src/ui/hooks/claude/__tests__/useClaudeState.test.ts:16:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeState.test.ts" name="useClaudeState &gt; should generate unique IDs" time="0.003546959">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useClaudeState src/ui/hooks/claude/useClaudeState.ts:16:43
 ❯ src/ui/hooks/claude/__tests__/useClaudeState.test.ts:30:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeState.test.ts" name="useClaudeState &gt; should clear pending items" time="0.000945541">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useClaudeState src/ui/hooks/claude/useClaudeState.ts:16:43
 ❯ src/ui/hooks/claude/__tests__/useClaudeState.test.ts:41:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeState.test.ts" name="useClaudeState &gt; should update streaming state" time="0.000736875">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useClaudeState src/ui/hooks/claude/useClaudeState.ts:16:43
 ❯ src/ui/hooks/claude/__tests__/useClaudeState.test.ts:71:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeState.test.ts" name="useClaudeState &gt; should update thought" time="0.000706042">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useClaudeState src/ui/hooks/claude/useClaudeState.ts:16:43
 ❯ src/ui/hooks/claude/__tests__/useClaudeState.test.ts:81:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeState.test.ts" name="useClaudeState &gt; should update streaming text" time="0.000688958">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useClaudeState src/ui/hooks/claude/useClaudeState.ts:16:43
 ❯ src/ui/hooks/claude/__tests__/useClaudeState.test.ts:91:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeState.test.ts" name="useClaudeState &gt; should add pending items" time="0.000674625">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useClaudeState src/ui/hooks/claude/useClaudeState.ts:16:43
 ❯ src/ui/hooks/claude/__tests__/useClaudeState.test.ts:101:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeState.test.ts" name="useClaudeState &gt; should update pending items" time="0.000623917">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useClaudeState src/ui/hooks/claude/useClaudeState.ts:16:43
 ❯ src/ui/hooks/claude/__tests__/useClaudeState.test.ts:120:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeState.test.ts" name="useClaudeState &gt; should handle abort controller" time="0.000657208">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useClaudeState src/ui/hooks/claude/useClaudeState.ts:16:43
 ❯ src/ui/hooks/claude/__tests__/useClaudeState.test.ts:141:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeState.test.ts" name="useClaudeState &gt; should handle request timeout" time="0.000623959">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useClaudeState src/ui/hooks/claude/useClaudeState.ts:16:43
 ❯ src/ui/hooks/claude/__tests__/useClaudeState.test.ts:152:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeState.test.ts" name="useClaudeState &gt; should cancel streaming" time="0.0006175">
            <failure message="undefined is not iterable (cannot read property Symbol(Symbol.iterator))" type="TypeError">
TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
 ❯ useClaudeState src/ui/hooks/claude/useClaudeState.ts:16:43
 ❯ src/ui/hooks/claude/__tests__/useClaudeState.test.ts:169:41
 ❯ TestComponent node_modules/@testing-library/react/dist/pure.js:331:27
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/claude/__tests__/useClaudeTools.test.ts" timestamp="2025-07-06T18:54:21.430Z" hostname="Seths-MacBook-Pro.local" tests="8" failures="8" errors="0" skipped="0" time="0.013779917">
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeTools.test.ts" name="useClaudeTools &gt; should extract tool use blocks from content" time="0.008835417">
            <failure message="result.current.extractToolUseBlocks is not a function" type="TypeError">
TypeError: result.current.extractToolUseBlocks is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeTools.test.ts:47:37
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeTools.test.ts" name="useClaudeTools &gt; should filter out invalid tool use blocks" time="0.0007305">
            <failure message="result.current.extractToolUseBlocks is not a function" type="TypeError">
TypeError: result.current.extractToolUseBlocks is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeTools.test.ts:74:37
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeTools.test.ts" name="useClaudeTools &gt; should execute tool with real execution enabled" time="0.000639875">
            <failure message="result.current.executeTool is not a function" type="TypeError">
TypeError: result.current.executeTool is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeTools.test.ts:99:45
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeTools.test.ts" name="useClaudeTools &gt; should execute tool with mock execution disabled" time="0.000538834">
            <failure message="result.current.executeTool is not a function" type="TypeError">
TypeError: result.current.executeTool is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeTools.test.ts:131:45
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeTools.test.ts" name="useClaudeTools &gt; should handle tool execution errors" time="0.000559167">
            <failure message="result.current.executeTool is not a function" type="TypeError">
TypeError: result.current.executeTool is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeTools.test.ts:156:45
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeTools.test.ts" name="useClaudeTools &gt; should handle multiple tool uses" time="0.000508334">
            <failure message="result.current.handleToolUses is not a function" type="TypeError">
TypeError: result.current.handleToolUses is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeTools.test.ts:208:42
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeTools.test.ts" name="useClaudeTools &gt; should get available tools when real execution is enabled" time="0.000503333">
            <failure message="result.current.getAvailableTools is not a function" type="TypeError">
TypeError: result.current.getAvailableTools is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeTools.test.ts:220:34
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/claude/__tests__/useClaudeTools.test.ts" name="useClaudeTools &gt; should return empty tools when real execution is disabled" time="0.000435292">
            <failure message="result.current.getAvailableTools is not a function" type="TypeError">
TypeError: result.current.getAvailableTools is not a function
 ❯ src/ui/hooks/claude/__tests__/useClaudeTools.test.ts:235:34
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/advanced-workflow-controls/__tests__/BreakpointService.test.ts" timestamp="2025-07-06T18:54:21.431Z" hostname="Seths-MacBook-Pro.local" tests="7" failures="0" errors="0" skipped="0" time="0.00401625">
        <testcase classname="src/ui/components/advanced-workflow-controls/__tests__/BreakpointService.test.ts" name="BreakpointService &gt; should create a new breakpoint" time="0.001469959">
        </testcase>
        <testcase classname="src/ui/components/advanced-workflow-controls/__tests__/BreakpointService.test.ts" name="BreakpointService &gt; should add breakpoint to collection" time="0.000965917">
        </testcase>
        <testcase classname="src/ui/components/advanced-workflow-controls/__tests__/BreakpointService.test.ts" name="BreakpointService &gt; should remove breakpoint from collection" time="0.0001855">
        </testcase>
        <testcase classname="src/ui/components/advanced-workflow-controls/__tests__/BreakpointService.test.ts" name="BreakpointService &gt; should toggle breakpoint enabled state" time="0.000146708">
        </testcase>
        <testcase classname="src/ui/components/advanced-workflow-controls/__tests__/BreakpointService.test.ts" name="BreakpointService &gt; should increment hit count" time="0.000119958">
        </testcase>
        <testcase classname="src/ui/components/advanced-workflow-controls/__tests__/BreakpointService.test.ts" name="BreakpointService &gt; should get enabled breakpoints only" time="0.000158125">
        </testcase>
        <testcase classname="src/ui/components/advanced-workflow-controls/__tests__/BreakpointService.test.ts" name="BreakpointService &gt; should clear all breakpoints" time="0.000090334">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/tools/tests/MCPToolConfirmation.test.tsx" timestamp="2025-07-06T18:54:21.432Z" hostname="Seths-MacBook-Pro.local" tests="4" failures="4" errors="0" skipped="0" time="0.005871916">
        <testcase classname="src/ui/components/tools/tests/MCPToolConfirmation.test.tsx" name="MCPToolConfirmation &gt; renders correctly with basic props" time="0.004144875">
            <failure message="Cannot read properties of undefined (reading &apos;Warning&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;Warning&apos;)
 ❯ src/ui/components/tools/tests/MCPToolConfirmation.test.tsx:17:34
            </failure>
        </testcase>
        <testcase classname="src/ui/components/tools/tests/MCPToolConfirmation.test.tsx" name="MCPToolConfirmation &gt; shows tool definition details when provided" time="0.000312458">
            <failure message="Cannot read properties of undefined (reading &apos;Warning&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;Warning&apos;)
 ❯ src/ui/components/tools/tests/MCPToolConfirmation.test.tsx:43:34
            </failure>
        </testcase>
        <testcase classname="src/ui/components/tools/tests/MCPToolConfirmation.test.tsx" name="MCPToolConfirmation &gt; shows all option buttons" time="0.000207875">
            <failure message="Cannot read properties of undefined (reading &apos;Warning&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;Warning&apos;)
 ❯ src/ui/components/tools/tests/MCPToolConfirmation.test.tsx:73:34
            </failure>
        </testcase>
        <testcase classname="src/ui/components/tools/tests/MCPToolConfirmation.test.tsx" name="MCPToolConfirmation &gt; shows security notice" time="0.0002995">
            <failure message="Cannot read properties of undefined (reading &apos;Warning&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;Warning&apos;)
 ❯ src/ui/components/tools/tests/MCPToolConfirmation.test.tsx:95:34
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/tools/tests/ToolProgressFeedback.test.tsx" timestamp="2025-07-06T18:54:21.432Z" hostname="Seths-MacBook-Pro.local" tests="8" failures="8" errors="0" skipped="0" time="0.123155291">
        <testcase classname="src/ui/components/tools/tests/ToolProgressFeedback.test.tsx" name="ToolProgressFeedback &gt; renders correctly with basic progress data" time="0.034369708">
            <failure message="expected &apos;\n  ERROR  Text string &quot;Tool Executio…&apos; to contain &apos;Testing in progress&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  Text string &quot;Tool Executio…&apos; to contain &apos;Testing in progress&apos;

- Expected
+ Received

- Testing in progress
+
+   ERROR  Text string &quot;Tool Execution&quot; must be rendered inside &lt;Text&gt; component
+
+  node_modules/ink/src/reconciler.ts:205:10
+
+  - createTextInstance (node_modules/ink/src/reconciler.ts:205:10)
+  - completeWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:9082:42)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - completeUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12962:19)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12843:11)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+  - performSyncWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:2446:7)
+  -flushSyncWorkAcrossRoots_im (node_modules/react-reconciler/cjs/react-reconciler.development.js:22
+   l                          94:21)
+

 ❯ src/ui/components/tools/tests/ToolProgressFeedback.test.tsx:28:25
            </failure>
        </testcase>
        <testcase classname="src/ui/components/tools/tests/ToolProgressFeedback.test.tsx" name="ToolProgressFeedback &gt; renders correctly with tool call data" time="0.014848417">
            <failure message="expected &apos;\n  ERROR  Text string &quot;test-tool&quot; mu…&apos; to contain &apos;Executing test operation&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  Text string &quot;test-tool&quot; mu…&apos; to contain &apos;Executing test operation&apos;

- Expected
+ Received

- Executing test operation
+
+   ERROR  Text string &quot;test-tool&quot; must be rendered inside &lt;Text&gt; component
+
+  node_modules/ink/src/reconciler.ts:205:10
+
+  - createTextInstance (node_modules/ink/src/reconciler.ts:205:10)
+  - completeWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:9082:42)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - completeUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12962:19)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12843:11)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+  - performSyncWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:2446:7)
+  -flushSyncWorkAcrossRoots_im (node_modules/react-reconciler/cjs/react-reconciler.development.js:22
+   l                          94:21)
+

 ❯ src/ui/components/tools/tests/ToolProgressFeedback.test.tsx:63:25
            </failure>
        </testcase>
        <testcase classname="src/ui/components/tools/tests/ToolProgressFeedback.test.tsx" name="ToolProgressFeedback &gt; renders in compact style" time="0.016404833">
            <failure message="expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Testing in progress&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Testing in progress&apos;

- Expected
+ Received

- Testing in progress
+
+   ERROR  undefined is not iterable (cannot read property Symbol(Symbol.iterator))
+
+  src/ui/components/progress-system/ProgressSystemCore.tsx:75:43
+
+  72:   const animationService = useMemo(() =&gt; createProgressAnimationService(), []);
+  73:
+  74:   // Animation state
+  75:   const [animationState, setAnimationState] = useState&lt;ProgressAnimationState&gt;(() =&gt;
+  76:     animationService.createInitialState()
+  77:   );
+  78:
+
+  - ProgressSystemCore (src/ui/components/progress-system/ProgressSystemCore.tsx:75:43)
+  -Object.react-stack-bottom-fr (node_modules/react-reconciler/cjs/react-reconciler.development.js:1
+   me                          5859:20)
+  - renderWithHooks (node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:22)
+  -updateFunctionComponent (node_modules/react-reconciler/cjs/react-reconciler.development.js:6475:1
+                          9)
+  - beginWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12834:22)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+

 ❯ src/ui/components/tools/tests/ToolProgressFeedback.test.tsx:82:25
            </failure>
        </testcase>
        <testcase classname="src/ui/components/tools/tests/ToolProgressFeedback.test.tsx" name="ToolProgressFeedback &gt; renders in mini style" time="0.023983417">
            <failure message="expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Testing in progress&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  undefined is not iterable …&apos; to contain &apos;Testing in progress&apos;

- Expected
+ Received

- Testing in progress
+
+   ERROR  undefined is not iterable (cannot read property Symbol(Symbol.iterator))
+
+  src/ui/components/progress-system/ProgressSystemCore.tsx:75:43
+
+  72:   const animationService = useMemo(() =&gt; createProgressAnimationService(), []);
+  73:
+  74:   // Animation state
+  75:   const [animationState, setAnimationState] = useState&lt;ProgressAnimationState&gt;(() =&gt;
+  76:     animationService.createInitialState()
+  77:   );
+  78:
+
+  - ProgressSystemCore (src/ui/components/progress-system/ProgressSystemCore.tsx:75:43)
+  -Object.react-stack-bottom-fr (node_modules/react-reconciler/cjs/react-reconciler.development.js:1
+   me                          5859:20)
+  - renderWithHooks (node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:22)
+  -updateFunctionComponent (node_modules/react-reconciler/cjs/react-reconciler.development.js:6475:1
+                          9)
+  - beginWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12834:22)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+

 ❯ src/ui/components/tools/tests/ToolProgressFeedback.test.tsx:102:25
            </failure>
        </testcase>
        <testcase classname="src/ui/components/tools/tests/ToolProgressFeedback.test.tsx" name="ToolProgressFeedback &gt; handles indeterminate progress correctly" time="0.008846333">
            <failure message="expected &apos;\n  ERROR  Text string &quot;Tool Executio…&apos; to contain &apos;Working...&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  Text string &quot;Tool Executio…&apos; to contain &apos;Working...&apos;

- Expected
+ Received

- Working...
+
+   ERROR  Text string &quot;Tool Execution&quot; must be rendered inside &lt;Text&gt; component
+
+  node_modules/ink/src/reconciler.ts:205:10
+
+  - createTextInstance (node_modules/ink/src/reconciler.ts:205:10)
+  - completeWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:9082:42)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - completeUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12962:19)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12843:11)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+  - performSyncWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:2446:7)
+  -flushSyncWorkAcrossRoots_im (node_modules/react-reconciler/cjs/react-reconciler.development.js:22
+   l                          94:21)
+

 ❯ src/ui/components/tools/tests/ToolProgressFeedback.test.tsx:121:25
            </failure>
        </testcase>
        <testcase classname="src/ui/components/tools/tests/ToolProgressFeedback.test.tsx" name="ToolProgressFeedback &gt; shows time estimates when available" time="0.00907125">
            <failure message="expected &apos;\n  ERROR  Text string &quot;Tool Executio…&apos; to contain &apos;2m remaining&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  Text string &quot;Tool Executio…&apos; to contain &apos;2m remaining&apos;

- Expected
+ Received

- 2m remaining
+
+   ERROR  Text string &quot;Tool Execution&quot; must be rendered inside &lt;Text&gt; component
+
+  node_modules/ink/src/reconciler.ts:205:10
+
+  - createTextInstance (node_modules/ink/src/reconciler.ts:205:10)
+  - completeWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:9082:42)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - completeUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12962:19)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12843:11)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+  - performSyncWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:2446:7)
+  -flushSyncWorkAcrossRoots_im (node_modules/react-reconciler/cjs/react-reconciler.development.js:22
+   l                          94:21)
+

 ❯ src/ui/components/tools/tests/ToolProgressFeedback.test.tsx:142:25
            </failure>
        </testcase>
        <testcase classname="src/ui/components/tools/tests/ToolProgressFeedback.test.tsx" name="ToolProgressFeedback &gt; shows step information when available" time="0.007286375">
            <failure message="expected &apos;\n  ERROR  Text string &quot;Tool Executio…&apos; to contain &apos;3/5&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  Text string &quot;Tool Executio…&apos; to contain &apos;3/5&apos;

- Expected
+ Received

- 3/5
+
+   ERROR  Text string &quot;Tool Execution&quot; must be rendered inside &lt;Text&gt; component
+
+  node_modules/ink/src/reconciler.ts:205:10
+
+  - createTextInstance (node_modules/ink/src/reconciler.ts:205:10)
+  - completeWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:9082:42)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - completeUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12962:19)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12843:11)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+  - performSyncWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:2446:7)
+  -flushSyncWorkAcrossRoots_im (node_modules/react-reconciler/cjs/react-reconciler.development.js:22
+   l                          94:21)
+

 ❯ src/ui/components/tools/tests/ToolProgressFeedback.test.tsx:165:25
            </failure>
        </testcase>
        <testcase classname="src/ui/components/tools/tests/ToolProgressFeedback.test.tsx" name="ToolProgressFeedback &gt; shows details when requested" time="0.007716916">
            <failure message="expected &apos;\n  ERROR  Text string &quot;Tool Executio…&apos; to contain &apos;Files processed:&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  Text string &quot;Tool Executio…&apos; to contain &apos;Files processed:&apos;

- Expected
+ Received

- Files processed:
+
+   ERROR  Text string &quot;Tool Execution&quot; must be rendered inside &lt;Text&gt; component
+
+  node_modules/ink/src/reconciler.ts:205:10
+
+  - createTextInstance (node_modules/ink/src/reconciler.ts:205:10)
+  - completeWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:9082:42)
+  - runWithFiberInDEV (node_modules/react-reconciler/cjs/react-reconciler.development.js:1738:13)
+  - completeUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12962:19)
+  - performUnitOfWork (node_modules/react-reconciler/cjs/react-reconciler.development.js:12843:11)
+  - workLoopSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+  - renderRootSync (node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:11)
+  - performWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:12135:44)
+  - performSyncWorkOnRoot (node_modules/react-reconciler/cjs/react-reconciler.development.js:2446:7)
+  -flushSyncWorkAcrossRoots_im (node_modules/react-reconciler/cjs/react-reconciler.development.js:22
+   l                          94:21)
+

 ❯ src/ui/components/tools/tests/ToolProgressFeedback.test.tsx:189:25
            </failure>
        </testcase>
    </testsuite>
</testsuites>
